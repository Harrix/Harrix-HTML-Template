{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/katex/dist/katex.js","webpack:///./src/js/katex.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","factory","self","default","instance","Constructor","TypeError","__webpack_exports__","classCallCheck","classCallCheck_default","SourceLocation_SourceLocation","SourceLocation","lexer","start","end","this","range","first","second","loc","src_SourceLocation","Token_Token","Token","text","endToken","ParseError_ParseError","ParseError","message","token","error","input","length","underlined","slice","replace","left","right","Error","__proto__","position","src_ParseError","uppercase","ESCAPE_LOOKUP","&",">","<","\"","'","ESCAPE_REGEX","getBaseElem","group","type","body","assert","String","utils","contains","list","elem","indexOf","deflt","setting","defaultIfUndefined","undefined","escape","match","hyphenate","str","toLowerCase","isCharacterBox","baseElem","Settings_Settings","Settings","options","displayMode","throwOnError","errorColor","macros","colorIsTextColor","strict","maxSize","Math","max","Infinity","maxExpand","allowedProtocols","reportNonstrict","errorCode","errorMsg","console","warn","useStrictBehavior","src_Settings","Style_Style","Style","id","size","cramped","sup","Style_styles","_sup","sub","_sub","fracNum","_fracNum","fracDen","_fracDen","cramp","_cramp","_text","isTight","src_Style","DISPLAY","TEXT","SCRIPT","SCRIPTSCRIPT","scriptData","blocks","allBlocks","supportedCodepoint","codepoint","forEach","b","push","apply","svgGeometry_path","sqrtMain","sqrtSize1","sqrtSize2","sqrtSize3","sqrtSize4","doubleleftarrow","doublerightarrow","leftarrow","leftbrace","leftbraceunder","leftgroup","leftgroupunder","leftharpoon","leftharpoonplus","leftharpoondown","leftharpoondownplus","lefthook","leftlinesegment","leftmapsto","leftToFrom","longequal","midbrace","midbraceunder","oiintSize1","oiintSize2","oiiintSize1","oiiintSize2","rightarrow","rightbrace","rightbraceunder","rightgroup","rightgroupunder","rightharpoon","rightharpoonplus","rightharpoondown","rightharpoondownplus","righthook","rightlinesegment","rightToFrom","twoheadleftarrow","twoheadrightarrow","tilde1","tilde2","tilde3","tilde4","vec","widehat1","widehat2","widehat3","widehat4","widecheck1","widecheck2","widecheck3","widecheck4","baraboveleftarrow","rightarrowabovebar","baraboveshortleftharpoon","rightharpoonaboveshortbar","shortbaraboveleftharpoon","shortrightharpoonabovebar","svgGeometry","path","tree_DocumentFragment","DocumentFragment","children","classes","height","depth","maxFontSize","style","hasClass","className","tryCombine","sibling","toNode","frag","document","createDocumentFragment","appendChild","toMarkup","markup","toText","child","map","join","createClass","filter","cls","initNode","attributes","color","getColor","_toNode","tagName","node","createElement","_style","attr","setAttribute","domTree_toMarkup","styles","_style2","domTree_Span","Span","attribute","domTree_Anchor","Anchor","href","iCombinations","î","ï","í","ì","domTree_SymbolNode","SymbolNode","italic","skew","width","script","_i","block","scriptFromCodepoint","charCodeAt","test","_style3","_style4","createTextNode","span","_style5","marginRight","needsSpan","_style6","escaped","domTree_SvgNode","SvgNode","createElementNS","domTree_PathNode","PathNode","pathName","alternate","domTree_LineNode","LineNode","fontMetricsData","AMS-Regular","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","165","174","240","295","710","732","770","771","989","1008","8245","8463","8487","8498","8502","8503","8504","8513","8592","8594","8602","8603","8606","8608","8610","8611","8619","8620","8621","8622","8624","8625","8630","8631","8634","8635","8638","8639","8642","8643","8644","8646","8647","8648","8649","8650","8651","8652","8653","8654","8655","8666","8667","8669","8672","8674","8705","8708","8709","8717","8722","8724","8726","8733","8736","8737","8738","8739","8740","8741","8742","8756","8757","8764","8765","8769","8770","8774","8776","8778","8782","8783","8785","8786","8787","8790","8791","8796","8806","8807","8808","8809","8812","8814","8815","8816","8817","8818","8819","8822","8823","8828","8829","8830","8831","8832","8833","8840","8841","8842","8843","8847","8848","8858","8859","8861","8862","8863","8864","8865","8872","8873","8874","8876","8877","8878","8879","8882","8883","8884","8885","8888","8890","8891","8892","8901","8903","8905","8906","8907","8908","8909","8910","8911","8912","8913","8914","8915","8916","8918","8919","8920","8921","8922","8923","8926","8927","8928","8929","8934","8935","8936","8937","8938","8939","8940","8941","8994","8995","9416","9484","9488","9492","9496","9585","9586","9632","9633","9650","9651","9654","9660","9661","9664","9674","9733","10003","10016","10731","10846","10877","10878","10885","10886","10887","10888","10889","10890","10891","10892","10901","10902","10933","10934","10935","10936","10937","10938","10949","10950","10955","10956","57350","57351","57352","57353","57356","57357","57358","57359","57360","57361","57366","57367","57368","57369","57370","57371","Caligraphic-Regular","48","49","50","51","52","53","54","55","56","57","Fraktur-Regular","33","34","38","39","40","41","42","43","44","45","46","47","58","59","61","63","91","93","94","97","98","99","100","101","102","103","104","105","106","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","8216","8217","58112","58113","58114","58115","58116","58117","58118","58119","Main-Bold","35","36","37","60","62","64","92","95","123","124","125","126","168","172","176","177","184","198","215","216","223","230","247","248","305","338","339","567","711","713","714","715","728","729","730","733","824","915","916","920","923","926","928","931","933","934","936","937","8211","8212","8220","8221","8224","8225","8242","8407","8465","8467","8472","8476","8501","8593","8595","8596","8597","8598","8599","8600","8601","8636","8637","8640","8641","8656","8657","8658","8659","8660","8661","8704","8706","8707","8711","8712","8715","8723","8725","8727","8728","8729","8730","8734","8743","8744","8745","8746","8747","8768","8771","8781","8801","8804","8805","8810","8811","8826","8827","8834","8835","8838","8839","8846","8849","8850","8851","8852","8853","8854","8855","8856","8857","8866","8867","8868","8869","8900","8902","8968","8969","8970","8971","9657","9667","9711","9824","9825","9826","9827","9837","9838","9839","10216","10217","10815","10927","10928","Main-BoldItalic","163","Main-Italic","Main-Regular","32","160","167","182","8230","8614","8617","8618","8773","8784","8800","8904","8942","8943","8945","9136","9137","10222","10223","10229","10230","10231","10232","10233","10234","10236","Math-BoldItalic","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","977","981","982","1009","1013","Math-Italic","Math-Regular","SansSerif-Bold","180","SansSerif-Italic","SansSerif-Regular","Script-Regular","Size1-Regular","8214","8719","8720","8721","8748","8749","8750","8896","8897","8898","8899","9168","10752","10753","10754","10756","10758","Size2-Regular","Size3-Regular","Size4-Regular","9115","9116","9117","9118","9119","9120","9121","9122","9123","9124","9125","9126","9127","9128","9129","9130","9131","9132","9133","9143","57344","57345","57680","57681","57682","57683","Typewriter-Regular","96","127","776","9251","sigmasAndXis","slant","space","stretch","shrink","xHeight","quad","extraSpace","num1","num2","num3","denom1","denom2","sup1","sup2","sup3","sub1","sub2","supDrop","subDrop","delim1","delim2","axisHeight","defaultRuleThickness","bigOpSpacing1","bigOpSpacing2","bigOpSpacing3","bigOpSpacing4","bigOpSpacing5","sqrtRuleThickness","ptPerEm","doubleRuleSep","extraCharacterMap","Å","Ç","Ð","Þ","å","ç","ð","þ","А","Б","В","Г","Д","Е","Ж","З","И","Й","К","Л","М","Н","О","П","Р","С","Т","У","Ф","Х","Ц","Ч","Ш","Щ","Ъ","Ы","Ь","Э","Ю","Я","а","б","в","г","д","е","ж","з","и","й","к","л","м","н","о","п","р","с","т","у","ф","х","ц","ч","ш","щ","ъ","ы","ь","э","ю","я","getCharacterMetrics","character","font","ch","metrics","fontMetricsBySizeIndex","ATOMS","bin","close","inner","open","punct","rel","NON_ATOMS","accent-token","mathord","op-token","spacing","textord","symbols","math","src_symbols","defineSymbol","acceptUnicodeChar","main","ams","op","ligatures","--","---","``","''","symbols_i","symbols_ch","charAt","src_symbols_i","_ch","letters","symbols_i2","_ch2","symbols_wideChar","_i3","_ch3","fromCharCode","_i4","_ch4","toString","_i5","_ch5","wideLatinLetterData","wideNumeralData","sizeStyleMap","sizeMultipliers","sizeAtStyle","Options_Options","Options","data","BASESIZE","textSize","phantom","fontFamily","fontWeight","fontShape","sizeMultiplier","_fontMetrics","extend","extension","havingStyle","havingCrampedStyle","havingSize","havingBaseStyle","wantSize","havingBaseSizing","withColor","withPhantom","withFont","withTextFontFamily","withTextFontWeight","withTextFontShape","sizingClasses","oldOptions","baseSizingClasses","fontMetrics","sizeIndex","cssEmPerMu","getGlobalMetrics","colorMap","katex-blue","katex-orange","katex-pink","katex-red","katex-green","katex-gray","katex-purple","katex-blueA","katex-blueB","katex-blueC","katex-blueD","katex-blueE","katex-tealA","katex-tealB","katex-tealC","katex-tealD","katex-tealE","katex-greenA","katex-greenB","katex-greenC","katex-greenD","katex-greenE","katex-goldA","katex-goldB","katex-goldC","katex-goldD","katex-goldE","katex-redA","katex-redB","katex-redC","katex-redD","katex-redE","katex-maroonA","katex-maroonB","katex-maroonC","katex-maroonD","katex-maroonE","katex-purpleA","katex-purpleB","katex-purpleC","katex-purpleD","katex-purpleE","katex-mintA","katex-mintB","katex-mintC","katex-grayA","katex-grayB","katex-grayC","katex-grayD","katex-grayE","katex-grayF","katex-grayG","katex-grayH","katex-grayI","katex-kaBlue","katex-kaGreen","src_Options","ptPerUnit","pt","mm","cm","in","bp","pc","dd","cc","nd","nc","sp","px","relativeUnit","ex","em","mu","units_calculateSize","sizeValue","scale","unit","unitOptions","min","number","mainitLetters","buildCommon_lookupSymbol","fontName","buildCommon_makeSymbol","lookup","symbolNode","buildCommon_mathDefault","fontLookup","buildCommon_mathit","concat","fontClass","_fontName","retrieveTextFontName","_fontName3","_fontName2","sizeElementFromChildren","buildCommon_makeSpan","buildCommon_makeSvgSpan","buildCommon_makeFragment","fragment","baseFontName","fontStylesName","fontMap","mathbf","variant","mathrm","textit","mathbb","mathcal","mathfrak","mathscr","mathsf","mathtt","svgData","buildCommon","makeSymbol","mathsym","arguments","makeSpan","makeSvgSpan","makeLineSpan","thickness","line","borderBottomWidth","makeAnchor","anchor","makeFragment","makeVList","params","_getVListChildrenAndD","positionType","oldChildren","_children","_depth","shift","currPos","diff","_size","bottom","positionData","firstChild","getVListChildrenAndDepth","pstrutSize","_elem","pstrut","realChildren","minPos","maxPos","_i2","_child","_elem2","wrapperClasses","wrapperStyle","childWrap","top","marginLeft","vlist","rows","emptySpan","depthStrut","topStrut","vtable","makeOrd","isFont","fontOrFamily","_wideCharacterFont","wideChar","H","L","codePoint","j","floor","wide_character_wideCharacterFont","wideFontName","wideFontClass","_fontName4","fontClasses","fontData","boldsymbol","_fontData","substr","parts","makeVerb","star","makeGlue","measurement","rule","staticSvg","_svgData$value","svgNode","viewBox","preserveAspectRatio","tryCombineChars","chars","splice","cssSpace","\\nobreak","\\allowbreak","regularSpace"," ","\\ ","~","\\space","\\nobreakspace","assertNodeType","typedNode","checkNodeType","assertAtomFamily","family","checkAtomFamily","checkSymbolNodeType","thinspace","mediumspace","thickspace","spacings","mord","mop","mbin","mrel","minner","mopen","mclose","mpunct","tightSpacings","_functions","_htmlGroupBuilders","_mathmlGroupBuilders","defineFunction","_ref","names","nodeType","props","handler","htmlBuilder","mathmlBuilder","numArgs","argTypes","greediness","allowedInText","allowedInMath","numOptionalArgs","infix","consumeMode","defineFunctionBuilders","_ref2","defineFunction_ordargument","arg","buildHTML_makeSpan","buildHTML_isBinLeftCanceller","isRealGroup","getTypeOfDomTree","buildHTML_isBinRightCanceller","buildHTML_styleMap","display","scriptscript","DomEnum","buildHTML_buildExpression","expression","surrounding","rawGroups","output","buildHTML_buildGroup","nonSpaces","nonSpacesI","buildHTML_getOutermostNode","groups","pop","_left","_right","nonSpacesJp1","isLeftTight","glueOptions","getOutermostNode","side","makeNullDelimiter","moreClasses","baseOptions","groupNode","multiplier","buildHTMLUnbreakable","strut","verticalAlign","unshift","buildHTML","tree","tag","nobreak","tagChild","htmlNode","newDocumentFragment","mathMLTree_MathNode","MathNode","getAttribute","mathMLTree_TextNode","TextNode","needsEscape","mathMLTree_SpaceNode","SpaceNode","mathMLTree","buildMathML_makeText","buildMathML_makeRow","buildMathML_getVariant","buildMathML_buildExpression","lastGroup","buildMathML_buildGroup","_lastGroup$children","_lastGroup$children2","_lastGroup$children3","buildExpressionRow","result","buildTree_optionsFromSettings","settings","buildTree_buildTree","mathMLNode","texExpression","wrapper","annotation","semantics","buildMathML","katexNode","stretchyCodePoint","widehat","widecheck","widetilde","utilde","overleftarrow","underleftarrow","xleftarrow","overrightarrow","underrightarrow","xrightarrow","underbrace","overbrace","overleftrightarrow","underleftrightarrow","xleftrightarrow","Overrightarrow","xRightarrow","overleftharpoon","xleftharpoonup","overrightharpoon","xrightharpoonup","xLeftarrow","xLeftrightarrow","xhookleftarrow","xhookrightarrow","xmapsto","xrightharpoondown","xleftharpoondown","xrightleftharpoons","xleftrightharpoons","xtwoheadleftarrow","xtwoheadrightarrow","xlongequal","xtofrom","xrightleftarrows","xrightequilibrium","xleftequilibrium","katexImagesData","overlinesegment","underlinesegment","overgroup","undergroup","groupLength","stretchy","label","pad","img","totalHeight","borderColor","lines","x1","y1","x2","y2","stroke-width","_buildSvgSpan_","viewBoxWidth","grp","numChars","base","viewBoxHeight","_height","imgIndex","minWidth","spans","paths","_minWidth","_viewBoxHeight","_height2","numSvgChildren","widthClasses","aligns","align1","_path","_svgNode","_span","buildSvgSpan_","accent_htmlBuilder","supSub","supSubGroup","assertSpan","mustShift","isShifty","baseChar","baseGroup","assertSymbolDomNode","clearance","accentBody","isStretchy","accent","accentFull","accentWrap","accent_mathmlBuilder","accentNode","NON_STRETCHY_ACCENT_REGEX","RegExp","context","args","funcName","parser","innerGroup","kern","optArgs","below","newOptions","upperGroup","lowerGroup","arrowBody","arrowShift","upperShift","lowerShift","arrowNode","lowerNode","upperNode","code","parseInt","isNaN","color_htmlBuilder","elements","color_mathmlBuilder","_ref3","breakOnTokenText","parseExpression","newRow","newLine","marginTop","delimiter_getMetrics","symbol","delimiter_styleWrap","delim","toStyle","delimSizeMultiplier","centerSpan","delimiter_makeLargeDelim","center","delimiter_mathrmSize","delimiter_makeInner","sizeClass","delimiter_makeStackedDelim","heightTotal","middle","repeat","topMetrics","topHeightTotal","repeatMetrics","repeatHeightTotal","bottomMetrics","bottomHeightTotal","middleHeightTotal","middleFactor","middleMetrics","minHeight","repeatCount","ceil","realHeightTotal","inners","delimiter_sqrtSvg","sqrtName","vertSegment","pathNode","svg","stackLargeDelimiters","stackAlwaysDelimiters","stackNeverDelimiters","sizeToMaxHeight","stackNeverDelimiterSequence","stackAlwaysDelimiterSequence","stackLargeDelimiterSequence","delimTypeToFont","traverseSequence","sequence","heightDepth","delimiter_makeCustomSizedDelim","delimType","delimiter_makeSmallDelim","delimiter","spanHeight","texHeight","advanceWidth","ruleWidth","delimiterExtend","maxDistFromAxis","delimiterSizes","\\bigl","mclass","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg","delimiters","checkDelimiter","symDelim","JSON","assertParsed","leftrightDepth","expect","parseFunction","innerHeight","innerDepth","hadMiddle","isMiddle","leftDelim","middleDelim","rightDelim","leftNode","rightNode","middleNode","enclose_htmlBuilder","imgShift","isSingleChar","vertPad","backgroundColor","enclose_mathmlBuilder","_ref4","nameGroup","mclass_makeSpan","mclass_htmlBuilder","mclass_mathmlBuilder","binrelClass","atom","baseArg","shiftedArg","baseOp","limits","alwaysHandleSupSub","suppressBaseShift","supsub","font_htmlBuilder","font_mathmlBuilder","fontAliases","\\Bbb","\\bold","\\frak","\\bm","func","consumeSpaces","genfrac_htmlBuilder","nstyle","dstyle","numerm","numer","continued","hStrut","dStrut","denomm","denom","ruleSpacing","hasBarLine","barSize","numShift","denomShift","frac","midShift","candidateClearance","delimSize","genfrac_mathmlBuilder","withDelims","leftOp","rightOp","replaceWith","stylArray","delimFromValue","delimString","barNode","isBlank","styl","textOrd","Number","_ref5","horizBrace_htmlBuilder","braceBody","isOver","vSpan","url","val","Cls","expected","actual","constructor","assertType","html","mathml","mathFunction","muUnit","dimension","alignment","fix","offset","outerMode","switchMode","consume","mathchoice_chooseMathStyle","op_htmlBuilder","supGroup","subGroup","hasLimits","large","stash","oval","baseShift","finalGroup","_bottom","op_mathmlBuilder","operator","singleCharBigOps","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆","fName","singleCharIntegrals","∫","∬","∭","∮","∯","∰","sizingGroup","pos","Array","_ref6","childText","isAllString","word","identifier","sizeFuncs","sizing_htmlBuilder","amount","dy","sizedText","borderRightWidth","borderTopWidth","smashHeight","smashDepth","tbArg","letter","index","theta","phi","lineClearance","minDelimiterHeight","_delimiter$sqrtImage","delimDepth","paddingLeft","rootm","toShift","rootVList","rootVListWrap","styling_styleMap","newStyle","styleMap","builderDelegate","delegate","isSup","supsub_htmlBuilderDelegate","valueBase","valueSup","valueSub","supm","subm","supShift","subShift","_newOptions","minSupShift","isOiint","maxWidth","psi","vlistElem","_vlistElem","isBrace","horizBrace","_base2","_base","defaultVariant","mi","mn","mtext","ord","table","textFontFamilies","\\text","\\textrm","\\textsf","\\texttt","\\textnormal","textFontWeights","\\textbf","textFontShapes","\\textit","optionsWithFont","functions","src_functions","_environments","defineEnvironment","getHLines","hlineInfo","nxt","nextToken","parseArray","hskipBeforeAndAfter","addJot","cols","arraystretch","gullet","beginGroup","set","expandMacroAsText","parseFloat","row","rowGaps","hLinesBeforeRow","cell","next","cr","endGroup","dCellStyle","envName","array_htmlBuilder","nr","hlines","arraycolsep","baselineskip","jot","arrayskip","arstrutHeight","arstrutDepth","setHLinePos","hlinesInGap","isDashed","inrow","outrow","elt","rowGap","gap","colDescriptions","colSep","colDescrNum","colDescr","firstSeparator","separator","_separator","_separator2","sepwidth","pregap","col","align","postgap","dashes","vListElems","hline","lineShift","array_mathmlBuilder","array_alignedHandler","res","numMaths","numCols","emptyGroup","ordgroup","arg0","isAligned","styling","_ordgroup","curMaths","_align","_pregap","symNode","colalign","nde","assertSymbolNodeType","ca","matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix","environments","src_environments","controlWordWhitespaceRegex","combiningDiacriticalMarksEndRegex","combiningDiacriticalMarkString","urlFunctionRegexString","tokenRegexString","urlFunctionRegex","Lexer_Lexer","Lexer","tokenRegex","lex","lastIndex","exec","controlMatch","src_Lexer","Namespace_Namespace","Namespace","builtins","globalMacros","current","undefStack","undefs","undef","has","global","src_Namespace","builtinMacros","defineMacro","consumeArgs","tokens","future","digitToNumber","0","1","2","3","4","5","6","7","8","9","a","A","B","C","D","e","E","f","F","popToken","digit","macros_def","command","macros_newcommand","existsOK","nonexistsOK","exists","isDefined","argText","expandNextToken","dotsByToken",",","\\not","+","=","-","*",":","\\DOTSB","\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\And","\\longrightarrow","\\Longrightarrow","\\longleftarrow","\\Longleftarrow","\\longleftrightarrow","\\Longleftrightarrow","\\mapsto","\\longmapsto","\\hookrightarrow","\\doteq","\\mathbin","\\mathrel","\\relbar","\\Relbar","\\xrightarrow","\\xleftarrow","\\DOTSI","\\int","\\oint","\\iint","\\iiint","\\iiiint","\\idotsint","\\DOTSX","thedots","expandAfterFuture","spaceAfterDots",")","]","\\rbrack","\\}","\\rbrace","\\rangle","\\rceil","\\rfloor","\\rgroup","\\rmoustache","\\right","$",";",".","latexRaiseA","implicitCommands","\\relax","^","_","\\limits","\\nolimits","MacroExpander_MacroExpander","MacroExpander","expansionCount","feed","stack","newMode","pushToken","pushTokens","_stack","startOfArg","tok","reverse","expandOnce","topToken","expansion","_getExpansion","_tokens","expanded","expandMacro","oldStackLength","definition","stripped","bodyLexer","src_MacroExpander","unicodeAccents","́","̀","̈","̃","̄","̆","̌","̂","̇","̊","̋","unicodeSymbols","á","à","ä","ǟ","ã","ā","ă","ắ","ằ","ẵ","ǎ","â","ấ","ầ","ẫ","ȧ","ǡ","ǻ","ḃ","ć","č","ĉ","ċ","ď","ḋ","é","è","ë","ẽ","ē","ḗ","ḕ","ĕ","ě","ê","ế","ề","ễ","ė","ḟ","ǵ","ḡ","ğ","ǧ","ĝ","ġ","ḧ","ȟ","ĥ","ḣ","ḯ","ĩ","ī","ĭ","ǐ","ǰ","ĵ","ḱ","ǩ","ĺ","ľ","ḿ","ṁ","ń","ǹ","ñ","ň","ṅ","ó","ò","ö","ȫ","õ","ṍ","ṏ","ȭ","ō","ṓ","ṑ","ŏ","ǒ","ô","ố","ồ","ỗ","ȯ","ȱ","ő","ṕ","ṗ","ŕ","ř","ṙ","ś","ṥ","š","ṧ","ŝ","ṡ","ẗ","ť","ṫ","ú","ù","ü","ǘ","ǜ","ǖ","ǚ","ũ","ṹ","ū","ṻ","ŭ","ǔ","û","ů","ű","ṽ","ẃ","ẁ","ẅ","ŵ","ẇ","ẘ","ẍ","ẋ","ý","ỳ","ÿ","ỹ","ȳ","ŷ","ẏ","ẙ","ź","ž","ẑ","ż","Á","À","Ä","Ǟ","Ã","Ā","Ă","Ắ","Ằ","Ẵ","Ǎ","Â","Ấ","Ầ","Ẫ","Ȧ","Ǡ","Ǻ","Ḃ","Ć","Č","Ĉ","Ċ","Ď","Ḋ","É","È","Ë","Ẽ","Ē","Ḗ","Ḕ","Ĕ","Ě","Ê","Ế","Ề","Ễ","Ė","Ḟ","Ǵ","Ḡ","Ğ","Ǧ","Ĝ","Ġ","Ḧ","Ȟ","Ĥ","Ḣ","Í","Ì","Ï","Ḯ","Ĩ","Ī","Ĭ","Ǐ","Î","İ","Ĵ","Ḱ","Ǩ","Ĺ","Ľ","Ḿ","Ṁ","Ń","Ǹ","Ñ","Ň","Ṅ","Ó","Ò","Ö","Ȫ","Õ","Ṍ","Ṏ","Ȭ","Ō","Ṓ","Ṑ","Ŏ","Ǒ","Ô","Ố","Ồ","Ỗ","Ȯ","Ȱ","Ő","Ṕ","Ṗ","Ŕ","Ř","Ṙ","Ś","Ṥ","Š","Ṧ","Ŝ","Ṡ","Ť","Ṫ","Ú","Ù","Ü","Ǘ","Ǜ","Ǖ","Ǚ","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ǔ","Û","Ů","Ű","Ṽ","Ẃ","Ẁ","Ẅ","Ŵ","Ẇ","Ẍ","Ẋ","Ý","Ỳ","Ÿ","Ỹ","Ȳ","Ŷ","Ẏ","Ź","Ž","Ẑ","Ż","ά","ὰ","ᾱ","ᾰ","έ","ὲ","ή","ὴ","ί","ὶ","ϊ","ΐ","ῒ","ῑ","ῐ","ό","ὸ","ύ","ὺ","ϋ","ΰ","ῢ","ῡ","ῠ","ώ","ὼ","Ύ","Ὺ","Ϋ","Ῡ","Ῠ","Ώ","Ὼ","newArgument","Parser_Parser","Parser","parse","breakOnInfix","endOfExpression","parseAtom","errorNode","handleUnsupportedCmd","formLigatures","handleInfixNodes","overIndex","numerNode","denomNode","numerBody","denomBody","_node","callFunction","handleSupSubscript","symbolToken","parseGroup","funcGreediness","SUPSUB_GREEDINESS","parseGivenFunction","textordArray","textNode","colorNode","parseImplicitGroup","superscript","subscript","opNode","prime","primes","parseSymbol","begin","env","_parseArguments","parseArguments","_result","endNameToken","funcData","oldMode","_parseArguments2","_token","totalArgs","baseGreediness","argType","isOptional","parseGroupOfType","argNode","argGreediness","optional","parseColorGroup","parseSizeGroup","parseStringGroup","modeName","firstToken","lastToken","parseRegexGroup","regex","_result2","v","nucleus","_match","rawUrl","protocol","allowed","urlArg","description","substring","src_Parser","src_parseTree","toParse","katex_render","baseNode","textContent","katex_renderToDomTree","compatMode","katex_renderError","katex_0","version","render","renderToString","__parse","__renderToDomTree","__renderToHTMLTree","buildTree_buildHTMLTree","__setFontMetrics","__defineSymbol","__defineMacro","__domTree","katex__WEBPACK_IMPORTED_MODULE_0__","katex__WEBPACK_IMPORTED_MODULE_0___default","addEventListener","tex","getElementsByClassName","el"],"mappings":"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","file":"./js/../katex/katex.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 191);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"katex\"] = factory();\n\telse\n\t\troot[\"katex\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 3);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// extracted by mini-css-extract-plugin\n\n/***/ }),\n/* 2 */,\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./src/katex.less\nvar katex = __webpack_require__(1);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(0);\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n\n// CONCATENATED MODULE: ./src/SourceLocation.js\n\n\n/**\n * Lexing or parsing positional information for error reporting.\n * This object is immutable.\n */\nvar SourceLocation_SourceLocation = function () {\n    // End offset, zero-based exclusive.\n\n    // Lexer holding the input string.\n    function SourceLocation(lexer, start, end) {\n        classCallCheck_default()(this, SourceLocation);\n\n        this.lexer = lexer;\n        this.start = start;\n        this.end = end;\n    }\n\n    /**\n     * Merges two `SourceLocation`s from location providers, given they are\n     * provided in order of appearance.\n     * - Returns the first one's location if only the first is provided.\n     * - Returns a merged range of the first and the last if both are provided\n     *   and their lexers match.\n     * - Otherwise, returns null.\n     */\n    // Start offset, zero-based inclusive.\n\n    // The + prefix indicates that these fields aren't writeable\n\n\n    SourceLocation.range = function range(first, second) {\n        if (!second) {\n            return first && first.loc;\n        } else if (!first || !first.loc || !second.loc || first.loc.lexer !== second.loc.lexer) {\n            return null;\n        } else {\n            return new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end);\n        }\n    };\n\n    return SourceLocation;\n}();\n\n/* harmony default export */ var src_SourceLocation = (SourceLocation_SourceLocation);\n// CONCATENATED MODULE: ./src/Token.js\n\n\n\n/**\n * Interface required to break circular dependency between Token, Lexer, and\n * ParseError.\n */\n\n\n/**\n * The resulting token returned from `lex`.\n *\n * It consists of the token text plus some position information.\n * The position information is essentially a range in an input string,\n * but instead of referencing the bare input string, we refer to the lexer.\n * That way it is possible to attach extra metadata to the input string,\n * like for example a file name or similar.\n *\n * The position information is optional, so it is OK to construct synthetic\n * tokens if appropriate. Not providing available position information may\n * lead to degraded error reporting, though.\n */\nvar Token_Token = function () {\n    function Token(text, // the text of this token\n    loc) {\n        classCallCheck_default()(this, Token);\n\n        this.text = text;\n        this.loc = loc;\n    }\n\n    /**\n     * Given a pair of tokens (this and endToken), compute a `Token` encompassing\n     * the whole input range enclosed by these two.\n     */\n\n\n    Token.prototype.range = function range(endToken, // last token of the range, inclusive\n    text) // the text of the newly constructed token\n    {\n        return new Token(text, src_SourceLocation.range(this, endToken));\n    };\n\n    return Token;\n}();\n// CONCATENATED MODULE: ./src/ParseError.js\n\n\n\n/**\n * This is the ParseError class, which is the main error thrown by KaTeX\n * functions when something has gone wrong. This is used to distinguish internal\n * errors from errors in the expression that the user provided.\n *\n * If possible, a caller should provide a Token or ParseNode with information\n * about where in the source string the problem occurred.\n */\nvar ParseError_ParseError =\n// Error position based on passed-in Token or ParseNode.\n\nfunction ParseError(message, // The error message\ntoken) // An object providing position information\n{\n    classCallCheck_default()(this, ParseError);\n\n    var error = \"KaTeX parse error: \" + message;\n    var start = void 0;\n\n    var loc = token && token.loc;\n    if (loc && loc.start <= loc.end) {\n        // If we have the input and a position, make the error a bit fancier\n\n        // Get the input\n        var input = loc.lexer.input;\n\n        // Prepend some information\n        start = loc.start;\n        var end = loc.end;\n        if (start === input.length) {\n            error += \" at end of input: \";\n        } else {\n            error += \" at position \" + (start + 1) + \": \";\n        }\n\n        // Underline token in question using combining underscores\n        var underlined = input.slice(start, end).replace(/[^]/g, \"$&\\u0332\");\n\n        // Extract some context from the input and add it to the error\n        var left = void 0;\n        if (start > 15) {\n            left = \"…\" + input.slice(start - 15, start);\n        } else {\n            left = input.slice(0, start);\n        }\n        var right = void 0;\n        if (end + 15 < input.length) {\n            right = input.slice(end, end + 15) + \"…\";\n        } else {\n            right = input.slice(end);\n        }\n        error += left + underlined + right;\n    }\n\n    // Some hackery to make ParseError a prototype of Error\n    // See http://stackoverflow.com/a/8460753\n    var self = new Error(error);\n    self.name = \"ParseError\";\n    // $FlowFixMe\n    self.__proto__ = ParseError.prototype;\n    // $FlowFixMe\n    self.position = start;\n    return self;\n};\n\n// $FlowFixMe More hackery\n\n\nParseError_ParseError.prototype.__proto__ = Error.prototype;\n\n/* harmony default export */ var src_ParseError = (ParseError_ParseError);\n// CONCATENATED MODULE: ./src/utils.js\n\n\n/**\n * Return whether an element is contained in a list\n */\nvar contains = function contains(list, elem) {\n    return list.indexOf(elem) !== -1;\n};\n\n/**\n * Provide a default value if a setting is undefined\n * NOTE: Couldn't use `T` as the output type due to facebook/flow#5022.\n */\n\n/**\n * This file contains a list of utility functions which are useful in other\n * files.\n */\n\nvar deflt = function deflt(setting, defaultIfUndefined) {\n    return setting === undefined ? defaultIfUndefined : setting;\n};\n\n// hyphenate and escape adapted from Facebook's React under Apache 2 license\n\nvar uppercase = /([A-Z])/g;\nvar hyphenate = function hyphenate(str) {\n    return str.replace(uppercase, \"-$1\").toLowerCase();\n};\n\nvar ESCAPE_LOOKUP = {\n    \"&\": \"&amp;\",\n    \">\": \"&gt;\",\n    \"<\": \"&lt;\",\n    \"\\\"\": \"&quot;\",\n    \"'\": \"&#x27;\"\n};\n\nvar ESCAPE_REGEX = /[&><\"']/g;\n\n/**\n * Escapes text to prevent scripting attacks.\n */\nfunction utils_escape(text) {\n    return String(text).replace(ESCAPE_REGEX, function (match) {\n        return ESCAPE_LOOKUP[match];\n    });\n}\n\n/**\n * Sometimes we want to pull out the innermost element of a group. In most\n * cases, this will just be the group itself, but when ordgroups and colors have\n * a single element, we want to pull that out.\n */\nvar getBaseElem = function getBaseElem(group) {\n    if (group.type === \"ordgroup\") {\n        if (group.body.length === 1) {\n            return getBaseElem(group.body[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"color\") {\n        if (group.body.length === 1) {\n            return getBaseElem(group.body[0]);\n        } else {\n            return group;\n        }\n    } else if (group.type === \"font\") {\n        return getBaseElem(group.body);\n    } else {\n        return group;\n    }\n};\n\n/**\n * TeXbook algorithms often reference \"character boxes\", which are simply groups\n * with a single character in them. To decide if something is a character box,\n * we find its innermost group, and see if it is a single character.\n */\nvar utils_isCharacterBox = function isCharacterBox(group) {\n    var baseElem = getBaseElem(group);\n\n    // These are all they types of groups which hold single characters\n    return baseElem.type === \"mathord\" || baseElem.type === \"textord\" || baseElem.type === \"atom\";\n};\n\nvar assert = function assert(value) {\n    if (!value) {\n        throw new Error('Expected non-null, but got ' + String(value));\n    }\n    return value;\n};\n\nvar assertType = function assertType(val, Cls) {\n    if (val instanceof Cls) {\n        return val;\n    }\n\n    // $FlowFixMe: Get constructor name if possible.\n    var expected = String(Cls.name || Cls);\n    // $FlowFixMe: Get constructor name if possible; else stringify value.\n    var actual = String(val.constructor.name || val);\n    throw new Error(\"Expected \" + expected + \" but got \" + actual + \".\");\n};\n\n/* harmony default export */ var utils = ({\n    contains: contains,\n    deflt: deflt,\n    escape: utils_escape,\n    hyphenate: hyphenate,\n    getBaseElem: getBaseElem,\n    isCharacterBox: utils_isCharacterBox\n});\n// CONCATENATED MODULE: ./src/Settings.js\n\n\n/* eslint no-console:0 */\n/**\n * This is a module for storing settings passed into KaTeX. It correctly handles\n * default settings.\n */\n\n\n\n\n\n/**\n * The main Settings object\n *\n * The current options stored are:\n *  - displayMode: Whether the expression should be typeset as inline math\n *                 (false, the default), meaning that the math starts in\n *                 \\textstyle and is placed in an inline-block); or as display\n *                 math (true), meaning that the math starts in \\displaystyle\n *                 and is placed in a block with vertical margin.\n */\nvar Settings_Settings = function () {\n    function Settings(options) {\n        classCallCheck_default()(this, Settings);\n\n        // allow null options\n        options = options || {};\n        this.displayMode = utils.deflt(options.displayMode, false);\n        this.throwOnError = utils.deflt(options.throwOnError, true);\n        this.errorColor = utils.deflt(options.errorColor, \"#cc0000\");\n        this.macros = options.macros || {};\n        this.colorIsTextColor = utils.deflt(options.colorIsTextColor, false);\n        this.strict = utils.deflt(options.strict, \"warn\");\n        this.maxSize = Math.max(0, utils.deflt(options.maxSize, Infinity));\n        this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1000));\n        this.allowedProtocols = utils.deflt(options.allowedProtocols, [\"http\", \"https\", \"mailto\", \"_relative\"]);\n    }\n\n    /**\n     * Report nonstrict (non-LaTeX-compatible) input.\n     * Can safely not be called if `this.strict` is false in JavaScript.\n     */\n\n\n    Settings.prototype.reportNonstrict = function reportNonstrict(errorCode, errorMsg, token) {\n        var strict = this.strict;\n        if (typeof strict === \"function\") {\n            // Allow return value of strict function to be boolean or string\n            // (or null/undefined, meaning no further processing).\n            strict = strict(errorCode, errorMsg, token);\n        }\n        if (!strict || strict === \"ignore\") {\n            return;\n        } else if (strict === true || strict === \"error\") {\n            throw new src_ParseError(\"LaTeX-incompatible input and strict mode is set to 'error': \" + (errorMsg + \" [\" + errorCode + \"]\"), token);\n        } else if (strict === \"warn\") {\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n        } else {\n            // won't happen in type-safe code\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n        }\n    };\n\n    /**\n     * Check whether to apply strict (LaTeX-adhering) behavior for unusual\n     * input (like `\\\\`).  Unlike `nonstrict`, will not throw an error;\n     * instead, \"error\" translates to a return value of `true`, while \"ignore\"\n     * translates to a return value of `false`.  May still print a warning:\n     * \"warn\" prints a warning and returns `false`.\n     * This is for the second category of `errorCode`s listed in the README.\n     */\n\n\n    Settings.prototype.useStrictBehavior = function useStrictBehavior(errorCode, errorMsg, token) {\n        var strict = this.strict;\n        if (typeof strict === \"function\") {\n            // Allow return value of strict function to be boolean or string\n            // (or null/undefined, meaning no further processing).\n            // But catch any exceptions thrown by function, treating them\n            // like \"error\".\n            try {\n                strict = strict(errorCode, errorMsg, token);\n            } catch (error) {\n                strict = \"error\";\n            }\n        }\n        if (!strict || strict === \"ignore\") {\n            return false;\n        } else if (strict === true || strict === \"error\") {\n            return true;\n        } else if (strict === \"warn\") {\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to 'warn': \" + (errorMsg + \" [\" + errorCode + \"]\"));\n            return false;\n        } else {\n            // won't happen in type-safe code\n            typeof console !== \"undefined\" && console.warn(\"LaTeX-incompatible input and strict mode is set to \" + (\"unrecognized '\" + strict + \"': \" + errorMsg + \" [\" + errorCode + \"]\"));\n            return false;\n        }\n    };\n\n    return Settings;\n}();\n\n/* harmony default export */ var src_Settings = (Settings_Settings);\n// CONCATENATED MODULE: ./src/Style.js\n\n\n/**\n * This file contains information and classes for the various kinds of styles\n * used in TeX. It provides a generic `Style` class, which holds information\n * about a specific style. It then provides instances of all the different kinds\n * of styles possible, and provides functions to move between them and get\n * information about them.\n */\n\n/**\n * The main style class. Contains a unique id for the style, a size (which is\n * the same for cramped and uncramped version of a style), and a cramped flag.\n */\nvar Style_Style = function () {\n    function Style(id, size, cramped) {\n        classCallCheck_default()(this, Style);\n\n        this.id = id;\n        this.size = size;\n        this.cramped = cramped;\n    }\n\n    /**\n     * Get the style of a superscript given a base in the current style.\n     */\n\n\n    Style.prototype.sup = function sup() {\n        return Style_styles[_sup[this.id]];\n    };\n\n    /**\n     * Get the style of a subscript given a base in the current style.\n     */\n\n\n    Style.prototype.sub = function sub() {\n        return Style_styles[_sub[this.id]];\n    };\n\n    /**\n     * Get the style of a fraction numerator given the fraction in the current\n     * style.\n     */\n\n\n    Style.prototype.fracNum = function fracNum() {\n        return Style_styles[_fracNum[this.id]];\n    };\n\n    /**\n     * Get the style of a fraction denominator given the fraction in the current\n     * style.\n     */\n\n\n    Style.prototype.fracDen = function fracDen() {\n        return Style_styles[_fracDen[this.id]];\n    };\n\n    /**\n     * Get the cramped version of a style (in particular, cramping a cramped style\n     * doesn't change the style).\n     */\n\n\n    Style.prototype.cramp = function cramp() {\n        return Style_styles[_cramp[this.id]];\n    };\n\n    /**\n     * Get a text or display version of this style.\n     */\n\n\n    Style.prototype.text = function text() {\n        return Style_styles[_text[this.id]];\n    };\n\n    /**\n     * Return true if this style is tightly spaced (scriptstyle/scriptscriptstyle)\n     */\n\n\n    Style.prototype.isTight = function isTight() {\n        return this.size >= 2;\n    };\n\n    return Style;\n}();\n\n// Export an interface for type checking, but don't expose the implementation.\n// This way, no more styles can be generated.\n\n\n// IDs of the different styles\nvar D = 0;\nvar Dc = 1;\nvar T = 2;\nvar Tc = 3;\nvar S = 4;\nvar Sc = 5;\nvar SS = 6;\nvar SSc = 7;\n\n// Instances of the different styles\nvar Style_styles = [new Style_Style(D, 0, false), new Style_Style(Dc, 0, true), new Style_Style(T, 1, false), new Style_Style(Tc, 1, true), new Style_Style(S, 2, false), new Style_Style(Sc, 2, true), new Style_Style(SS, 3, false), new Style_Style(SSc, 3, true)];\n\n// Lookup tables for switching from one style to another\nvar _sup = [S, Sc, S, Sc, SS, SSc, SS, SSc];\nvar _sub = [Sc, Sc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _fracNum = [T, Tc, S, Sc, SS, SSc, SS, SSc];\nvar _fracDen = [Tc, Tc, Sc, Sc, SSc, SSc, SSc, SSc];\nvar _cramp = [Dc, Dc, Tc, Tc, Sc, Sc, SSc, SSc];\nvar _text = [D, Dc, T, Tc, T, Tc, T, Tc];\n\n// We only export some of the styles.\n/* harmony default export */ var src_Style = ({\n    DISPLAY: Style_styles[D],\n    TEXT: Style_styles[T],\n    SCRIPT: Style_styles[S],\n    SCRIPTSCRIPT: Style_styles[SS]\n});\n// CONCATENATED MODULE: ./src/unicodeScripts.js\n\n\n/**\n * Unicode block data for the families of scripts we support in \\text{}.\n * Scripts only need to appear here if they do not have font metrics.\n */\nvar scriptData = [{\n    // Latin characters beyond the Latin-1 characters we have metrics for.\n    // Needed for Czech, Hungarian and Turkish text, for example.\n    name: 'latin',\n    blocks: [[0x0100, 0x024f], // Latin Extended-A and Latin Extended-B\n    [0x0300, 0x036f]]\n}, {\n    // The Cyrillic script used by Russian and related languages.\n    // A Cyrillic subset used to be supported as explicitly defined\n    // symbols in symbols.js\n    name: 'cyrillic',\n    blocks: [[0x0400, 0x04ff]]\n}, {\n    // The Brahmic scripts of South and Southeast Asia\n    // Devanagari (0900–097F)\n    // Bengali (0980–09FF)\n    // Gurmukhi (0A00–0A7F)\n    // Gujarati (0A80–0AFF)\n    // Oriya (0B00–0B7F)\n    // Tamil (0B80–0BFF)\n    // Telugu (0C00–0C7F)\n    // Kannada (0C80–0CFF)\n    // Malayalam (0D00–0D7F)\n    // Sinhala (0D80–0DFF)\n    // Thai (0E00–0E7F)\n    // Lao (0E80–0EFF)\n    // Tibetan (0F00–0FFF)\n    // Myanmar (1000–109F)\n    name: 'brahmic',\n    blocks: [[0x0900, 0x109F]]\n}, {\n    name: 'georgian',\n    blocks: [[0x10A0, 0x10ff]]\n}, {\n    // Chinese and Japanese.\n    // The \"k\" in cjk is for Korean, but we've separated Korean out\n    name: \"cjk\",\n    blocks: [[0x3000, 0x30FF], // CJK symbols and punctuation, Hiragana, Katakana\n    [0x4E00, 0x9FAF], // CJK ideograms\n    [0xFF00, 0xFF60]]\n}, {\n    // Korean\n    name: 'hangul',\n    blocks: [[0xAC00, 0xD7AF]]\n}];\n\n/**\n * Given a codepoint, return the name of the script or script family\n * it is from, or null if it is not part of a known block\n */\n\n\n/*\n * This file defines the Unicode scripts and script families that we\n * support. To add new scripts or families, just add a new entry to the\n * scriptData array below. Adding scripts to the scriptData array allows\n * characters from that script to appear in \\text{} environments.\n */\n\n/**\n * Each script or script family has a name and an array of blocks.\n * Each block is an array of two numbers which specify the start and\n * end points (inclusive) of a block of Unicode codepoints.\n */\nfunction scriptFromCodepoint(codepoint) {\n    for (var i = 0; i < scriptData.length; i++) {\n        var script = scriptData[i];\n        for (var _i = 0; _i < script.blocks.length; _i++) {\n            var block = script.blocks[_i];\n            if (codepoint >= block[0] && codepoint <= block[1]) {\n                return script.name;\n            }\n        }\n    }\n    return null;\n}\n\n/**\n * A flattened version of all the supported blocks in a single array.\n * This is an optimization to make supportedCodepoint() fast.\n */\nvar allBlocks = [];\nscriptData.forEach(function (s) {\n    return s.blocks.forEach(function (b) {\n        return allBlocks.push.apply(allBlocks, b);\n    });\n});\n\n/**\n * Given a codepoint, return true if it falls within one of the\n * scripts or script families defined above and false otherwise.\n *\n * Micro benchmarks shows that this is faster than\n * /[\\u3000-\\u30FF\\u4E00-\\u9FAF\\uFF00-\\uFF60\\uAC00-\\uD7AF\\u0900-\\u109F]/.test()\n * in Firefox, Chrome and Node.\n */\nfunction supportedCodepoint(codepoint) {\n    for (var i = 0; i < allBlocks.length; i += 2) {\n        if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) {\n            return true;\n        }\n    }\n    return false;\n}\n// CONCATENATED MODULE: ./src/svgGeometry.js\n\n/**\n * This file provides support to domTree.js\n * It's a storehouse of path geometry for SVG images.\n */\n\n// In all paths below, the viewBox-to-em scale is 1000:1.\n\nvar hLinePad = 80; // padding above a sqrt viniculum.\n\nvar svgGeometry_path = {\n    // sqrtMain path geometry is from glyph U221A in the font KaTeX Main\n    // All surds have 80 units padding above the viniculumn.\n    sqrtMain: \"M95,\" + (622 + hLinePad) + \"c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,\\n-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,\\n-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,\\n35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,\\n-221c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467\\ns-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422\\ns-65,47,-65,47z M834 \" + hLinePad + \"H400000v40H845z\",\n\n    // size1 is from glyph U221A in the font KaTeX_Size1-Regular\n    sqrtSize1: \"M263,\" + (601 + hLinePad) + \"c0.7,0,18,39.7,52,119c34,79.3,68.167,\\n158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120c340,-704.7,510.7,-1060.3,512,-1067\\nc4.7,-7.3,11,-11,19,-11H40000v40H1012.3s-271.3,567,-271.3,567c-38.7,80.7,-84,\\n175,-136,283c-52,108,-89.167,185.3,-111.5,232c-22.3,46.7,-33.8,70.3,-34.5,71\\nc-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1s-109,-253,-109,-253c-72.7,-168,-109.3,\\n-252,-110,-252c-10.7,8,-22,16.7,-34,26c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26\\ns76,-59,76,-59s76,-60,76,-60z M1001 \" + hLinePad + \"H40000v40H1012z\",\n\n    // size2 is from glyph U221A in the font KaTeX_Size2-Regular\n    // The 80 units padding is most obvious here. Note start node at M1001 80.\n    sqrtSize2: \"M1001,\" + hLinePad + \"H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,\\n572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,\\n-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39\\nc-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60\\ns208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,\\n-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5c4,-6.7,10,-10,18,-10z\\nM1001 \" + hLinePad + \"H400000v40H1013z\",\n\n    // size3 is from glyph U221A in the font KaTeX_Size3-Regular\n    sqrtSize3: \"M424,\" + (2398 + hLinePad) + \"c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,\\n-342,-109.8,-513.3,-110.5,-514c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,\\n25c-5.7,9.3,-9.8,16,-12.5,20s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,\\n-13s76,-122,76,-122s77,-121,77,-121s209,968,209,968c0,-2,84.7,-361.7,254,-1079\\nc169.3,-717.3,254.7,-1077.7,256,-1081c4,-6.7,10,-10,18,-10H400000v40H1014.6\\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185c-2,6,-10,9,-24,9\\nc-8,0,-12,-0.7,-12,-2z M1001 \" + hLinePad + \"H400000v40H1014z\",\n\n    // size4 is from glyph U221A in the font KaTeX_Size4-Regular\n    sqrtSize4: \"M473,\" + (2713 + hLinePad) + \"c339.3,-1799.3,509.3,-2700,510,-2702\\nc3.3,-7.3,9.3,-11,18,-11H400000v40H1017.7s-90.5,478,-276.2,1466c-185.7,988,\\n-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,\\n-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200c0,-1.3,-5.3,8.7,-16,30c-10.7,\\n21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26s76,-153,76,-153s77,-151,\\n77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,606z\\nM1001 \" + hLinePad + \"H400000v40H1017z\",\n\n    // The doubleleftarrow geometry is from glyph U+21D0 in the font KaTeX Main\n    doubleleftarrow: \"M262 157\\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\\nm8 0v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // doublerightarrow is from glyph U+21D2 in font KaTeX Main\n    doublerightarrow: \"M399738 392l\\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z\",\n\n    // leftarrow is from glyph U+2190 in font KaTeX Main\n    leftarrow: \"M400000 241H110l3-3c68.7-52.7 113.7-120\\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\\n l-3-3h399890zM100 241v40h399900v-40z\",\n\n    // overbrace is from glyphs U+23A9/23A8/23A7 in font KaTeX_Size4-Regular\n    leftbrace: \"M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z\",\n\n    leftbraceunder: \"M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z\",\n\n    // overgroup is from the MnSymbol package (public domain)\n    leftgroup: \"M400000 80\\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\\n 435 0h399565z\",\n\n    leftgroupunder: \"M400000 262\\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\\n 435 219h399565z\",\n\n    // Harpoons are from glyph U+21BD in font KaTeX Main\n    leftharpoon: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z\",\n\n    leftharpoonplus: \"M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\\nm0 0v40h400000v-40z\",\n\n    leftharpoondown: \"M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z\",\n\n    leftharpoondownplus: \"M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z\",\n\n    // hook is from glyph U+21A9 in font KaTeX Main\n    lefthook: \"M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\\n 71.5 23h399859zM103 281v-40h399897v40z\",\n\n    leftlinesegment: \"M40 281 V428 H0 V94 H40 V241 H400000 v40z\\nM40 281 V428 H0 V94 H40 V241 H400000 v40z\",\n\n    leftmapsto: \"M40 281 V448H0V74H40V241H400000v40z\\nM40 281 V448H0V74H40V241H400000v40z\",\n\n    // tofrom is from glyph U+21C4 in font KaTeX AMS Regular\n    leftToFrom: \"M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z\",\n\n    longequal: \"M0 50 h400000 v40H0z m0 194h40000v40H0z\\nM0 50 h400000 v40H0z m0 194h40000v40H0z\",\n\n    midbrace: \"M200428 334\\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z\",\n\n    midbraceunder: \"M199572 214\\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z\",\n\n    oiintSize1: \"M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z\",\n\n    oiintSize2: \"M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\\nc0 110 84 276 504 276s502.4-166 502.4-276z\",\n\n    oiiintSize1: \"M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z\",\n\n    oiiintSize2: \"M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z\",\n\n    rightarrow: \"M0 241v40h399891c-47.3 35.3-84 78-110 128\\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n 151.7 139 205zm0 0v40h399900v-40z\",\n\n    rightbrace: \"M400000 542l\\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z\",\n\n    rightbraceunder: \"M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z\",\n\n    rightgroup: \"M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\\n 3-1 3-3v-38c-76-158-257-219-435-219H0z\",\n\n    rightgroupunder: \"M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z\",\n\n    rightharpoon: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\\n 69.2 92 94.5zm0 0v40h399900v-40z\",\n\n    rightharpoonplus: \"M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z\",\n\n    rightharpoondown: \"M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z\",\n\n    rightharpoondownplus: \"M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\\nm0-194v40h400000v-40zm0 0v40h400000v-40z\",\n\n    righthook: \"M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z\",\n\n    rightlinesegment: \"M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z\",\n\n    rightToFrom: \"M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z\",\n\n    // twoheadleftarrow is from glyph U+219E in font KaTeX AMS Regular\n    twoheadleftarrow: \"M0 167c68 40\\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z\",\n\n    twoheadrightarrow: \"M400000 167\\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z\",\n\n    // tilde1 is a modified version of a glyph from the MnSymbol package\n    tilde1: \"M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\\n-68.267.847-113-73.952-191-73.952z\",\n\n    // ditto tilde2, tilde3, & tilde4\n    tilde2: \"M344 55.266c-142 0-300.638 81.316-311.5 86.418\\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z\",\n\n    tilde3: \"M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\\n -338 0-409-156.573-744-156.573z\",\n\n    tilde4: \"M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\\n -175.236-744-175.236z\",\n\n    // vec is from glyph U+20D7 in font KaTeX Main\n    vec: \"M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\\nc-16-25.333-24-45-24-59z\",\n\n    // widehat1 is a modified version of a glyph from the MnSymbol package\n    widehat1: \"M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z\",\n\n    // ditto widehat2, widehat3, & widehat4\n    widehat2: \"M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat3: \"M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    widehat4: \"M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z\",\n\n    // widecheck paths are all inverted versions of widehat\n    widecheck1: \"M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z\",\n\n    widecheck2: \"M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    widecheck3: \"M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    widecheck4: \"M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z\",\n\n    // The next ten paths support reaction arrows from the mhchem package.\n\n    // Arrows for \\ce{<-->} are offset from xAxis by 0.22ex, per mhchem in LaTeX\n    // baraboveleftarrow is mostly from from glyph U+2190 in font KaTeX Main\n    baraboveleftarrow: \"M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\\nM100 241v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z\",\n\n    // rightarrowabovebar is mostly from glyph U+2192, KaTeX Main\n    rightarrowabovebar: \"M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z\",\n\n    // The short left harpoon has 0.5em (i.e. 500 units) kern on the left end.\n    // Ref from mhchem.sty: \\rlap{\\raisebox{-.22ex}{$\\kern0.5em\n    baraboveshortleftharpoon: \"M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z\",\n\n    rightharpoonaboveshortbar: \"M0,241 l0,40c399126,0,399993,0,399993,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z\",\n\n    shortbaraboveleftharpoon: \"M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z\",\n\n    shortrightharpoonabovebar: \"M53,241l0,40c398570,0,399437,0,399437,0\\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z\"\n};\n\n/* harmony default export */ var svgGeometry = ({ path: svgGeometry_path });\n// CONCATENATED MODULE: ./src/tree.js\n\n\n\n// To ensure that all nodes have compatible signatures for these methods.\n\n\n/**\n * This node represents a document fragment, which contains elements, but when\n * placed into the DOM doesn't have any representation itself. It only contains\n * children and doesn't have any DOM node properties.\n */\nvar tree_DocumentFragment = function () {\n    // Never used; needed for satisfying interface.\n\n    function DocumentFragment(children) {\n        classCallCheck_default()(this, DocumentFragment);\n\n        this.children = children;\n        this.classes = [];\n        this.height = 0;\n        this.depth = 0;\n        this.maxFontSize = 0;\n        this.style = {};\n    }\n    // HtmlDomNode\n\n\n    DocumentFragment.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    DocumentFragment.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    /** Convert the fragment into a node. */\n\n\n    DocumentFragment.prototype.toNode = function toNode() {\n        var frag = document.createDocumentFragment();\n\n        for (var i = 0; i < this.children.length; i++) {\n            frag.appendChild(this.children[i].toNode());\n        }\n\n        return frag;\n    };\n\n    /** Convert the fragment into HTML markup. */\n\n\n    DocumentFragment.prototype.toMarkup = function toMarkup() {\n        var markup = \"\";\n\n        // Simply concatenate the markup for the children together.\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        return markup;\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText. Applies to\n     * MathDomNode's only.\n     */\n\n\n    DocumentFragment.prototype.toText = function toText() {\n        // To avoid this, we would subclass documentFragment separately for\n        // MathML, but polyfills for subclassing is expensive per PR 1469.\n        // $FlowFixMe: Only works for ChildType = MathDomNode.\n        var toText = function toText(child) {\n            return child.toText();\n        };\n        return this.children.map(toText).join(\"\");\n    };\n\n    return DocumentFragment;\n}();\n// CONCATENATED MODULE: ./src/domTree.js\n\n\n/**\n * These objects store the data about the DOM nodes we create, as well as some\n * extra data. They can then be transformed into real DOM nodes with the\n * `toNode` function or HTML markup using `toMarkup`. They are useful for both\n * storing extra properties on the nodes, as well as providing a way to easily\n * work with the DOM.\n *\n * Similar functions for working with MathML nodes exist in mathMLTree.js.\n *\n * TODO: refactor `span` and `anchor` into common superclass when\n * target environments support class inheritance\n */\n\n\n\n\n\n\n/**\n * Create an HTML className based on a list of classes. In addition to joining\n * with spaces, we also remove empty classes.\n */\nvar createClass = function createClass(classes) {\n    return classes.filter(function (cls) {\n        return cls;\n    }).join(\" \");\n};\n\nvar initNode = function initNode(classes, options, style) {\n    this.classes = classes || [];\n    this.attributes = {};\n    this.height = 0;\n    this.depth = 0;\n    this.maxFontSize = 0;\n    this.style = style || {};\n    if (options) {\n        if (options.style.isTight()) {\n            this.classes.push(\"mtight\");\n        }\n        var color = options.getColor();\n        if (color) {\n            this.style.color = color;\n        }\n    }\n};\n\n/**\n * Convert into an HTML node\n */\nvar _toNode = function _toNode(tagName) {\n    var node = document.createElement(tagName);\n\n    // Apply the class\n    node.className = createClass(this.classes);\n\n    // Apply inline styles\n    for (var _style in this.style) {\n        if (this.style.hasOwnProperty(_style)) {\n            // $FlowFixMe Flow doesn't seem to understand span.style's type.\n            node.style[_style] = this.style[_style];\n        }\n    }\n\n    // Apply attributes\n    for (var attr in this.attributes) {\n        if (this.attributes.hasOwnProperty(attr)) {\n            node.setAttribute(attr, this.attributes[attr]);\n        }\n    }\n\n    // Append the children, also as HTML nodes\n    for (var i = 0; i < this.children.length; i++) {\n        node.appendChild(this.children[i].toNode());\n    }\n\n    return node;\n};\n\n/**\n * Convert into an HTML markup string\n */\nvar domTree_toMarkup = function _toMarkup(tagName) {\n    var markup = \"<\" + tagName;\n\n    // Add the class\n    if (this.classes.length) {\n        markup += \" class=\\\"\" + utils.escape(createClass(this.classes)) + \"\\\"\";\n    }\n\n    var styles = \"\";\n\n    // Add the styles, after hyphenation\n    for (var _style2 in this.style) {\n        if (this.style.hasOwnProperty(_style2)) {\n            styles += utils.hyphenate(_style2) + \":\" + this.style[_style2] + \";\";\n        }\n    }\n\n    if (styles) {\n        markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n    }\n\n    // Add the attributes\n    for (var attr in this.attributes) {\n        if (this.attributes.hasOwnProperty(attr)) {\n            markup += \" \" + attr + \"=\\\"\" + utils.escape(this.attributes[attr]) + \"\\\"\";\n        }\n    }\n\n    markup += \">\";\n\n    // Add the markup of the children, also as markup\n    for (var i = 0; i < this.children.length; i++) {\n        markup += this.children[i].toMarkup();\n    }\n\n    markup += \"</\" + tagName + \">\";\n\n    return markup;\n};\n\n// Span wrapping other DOM nodes.\n\n// Span wrapping an SVG node.\n\n\n/**\n * This node represents a span node, with a className, a list of children, and\n * an inline style. It also contains information about its height, depth, and\n * maxFontSize.\n *\n * Represents two types with different uses: SvgSpan to wrap an SVG and DomSpan\n * otherwise. This typesafety is important when HTML builders access a span's\n * children.\n */\nvar domTree_Span = function () {\n    function Span(classes, children, options, style) {\n        classCallCheck_default()(this, Span);\n\n        initNode.call(this, classes, options, style);\n        this.children = children || [];\n    }\n\n    /**\n     * Sets an arbitrary attribute on the span. Warning: use this wisely. Not\n     * all browsers support attributes the same, and having too many custom\n     * attributes is probably bad.\n     */\n\n\n    Span.prototype.setAttribute = function setAttribute(attribute, value) {\n        this.attributes[attribute] = value;\n    };\n\n    Span.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    /**\n     * Try to combine with given sibling.  Returns true if the sibling has\n     * been successfully merged into this node, and false otherwise.\n     * Default behavior fails (returns false).\n     */\n\n\n    Span.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    Span.prototype.toNode = function toNode() {\n        return _toNode.call(this, \"span\");\n    };\n\n    Span.prototype.toMarkup = function toMarkup() {\n        return domTree_toMarkup.call(this, \"span\");\n    };\n\n    return Span;\n}();\n\n/**\n * This node represents an anchor (<a>) element with a hyperlink.  See `span`\n * for further details.\n */\nvar domTree_Anchor = function () {\n    function Anchor(href, classes, children, options) {\n        classCallCheck_default()(this, Anchor);\n\n        initNode.call(this, classes, options);\n        this.children = children || [];\n        this.setAttribute('href', href);\n    }\n\n    Anchor.prototype.setAttribute = function setAttribute(attribute, value) {\n        this.attributes[attribute] = value;\n    };\n\n    Anchor.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    Anchor.prototype.tryCombine = function tryCombine(sibling) {\n        return false;\n    };\n\n    Anchor.prototype.toNode = function toNode() {\n        return _toNode.call(this, \"a\");\n    };\n\n    Anchor.prototype.toMarkup = function toMarkup() {\n        return domTree_toMarkup.call(this, \"a\");\n    };\n\n    return Anchor;\n}();\n\nvar iCombinations = {\n    'î': \"\\u0131\\u0302\",\n    'ï': \"\\u0131\\u0308\",\n    'í': \"\\u0131\\u0301\",\n    // 'ī': '\\u0131\\u0304', // enable when we add Extended Latin\n    'ì': \"\\u0131\\u0300\"\n};\n\n/**\n * A symbol node contains information about a single symbol. It either renders\n * to a single text node, or a span with a single text node in it, depending on\n * whether it has CSS classes, styles, or needs italic correction.\n */\nvar domTree_SymbolNode = function () {\n    function SymbolNode(text, height, depth, italic, skew, width, classes, style) {\n        classCallCheck_default()(this, SymbolNode);\n\n        this.text = text;\n        this.height = height || 0;\n        this.depth = depth || 0;\n        this.italic = italic || 0;\n        this.skew = skew || 0;\n        this.width = width || 0;\n        this.classes = classes || [];\n        this.style = style || {};\n        this.maxFontSize = 0;\n\n        // Mark text from non-Latin scripts with specific classes so that we\n        // can specify which fonts to use.  This allows us to render these\n        // characters with a serif font in situations where the browser would\n        // either default to a sans serif or render a placeholder character.\n        // We use CSS class names like cjk_fallback, hangul_fallback and\n        // brahmic_fallback. See ./unicodeScripts.js for the set of possible\n        // script names\n        var script = scriptFromCodepoint(this.text.charCodeAt(0));\n        if (script) {\n            this.classes.push(script + \"_fallback\");\n        }\n\n        if (/[îïíì]/.test(this.text)) {\n            // add ī when we add Extended Latin\n            this.text = iCombinations[this.text];\n        }\n    }\n\n    SymbolNode.prototype.hasClass = function hasClass(className) {\n        return utils.contains(this.classes, className);\n    };\n\n    SymbolNode.prototype.tryCombine = function tryCombine(sibling) {\n        if (!sibling || !(sibling instanceof SymbolNode) || this.italic > 0 || createClass(this.classes) !== createClass(sibling.classes) || this.skew !== sibling.skew || this.maxFontSize !== sibling.maxFontSize) {\n            return false;\n        }\n        for (var _style3 in this.style) {\n            if (this.style.hasOwnProperty(_style3) && this.style[_style3] !== sibling.style[_style3]) {\n                return false;\n            }\n        }\n        for (var _style4 in sibling.style) {\n            if (sibling.style.hasOwnProperty(_style4) && this.style[_style4] !== sibling.style[_style4]) {\n                return false;\n            }\n        }\n        this.text += sibling.text;\n        this.height = Math.max(this.height, sibling.height);\n        this.depth = Math.max(this.depth, sibling.depth);\n        this.italic = sibling.italic;\n        return true;\n    };\n\n    /**\n     * Creates a text node or span from a symbol node. Note that a span is only\n     * created if it is needed.\n     */\n\n\n    SymbolNode.prototype.toNode = function toNode() {\n        var node = document.createTextNode(this.text);\n        var span = null;\n\n        if (this.italic > 0) {\n            span = document.createElement(\"span\");\n            span.style.marginRight = this.italic + \"em\";\n        }\n\n        if (this.classes.length > 0) {\n            span = span || document.createElement(\"span\");\n            span.className = createClass(this.classes);\n        }\n\n        for (var _style5 in this.style) {\n            if (this.style.hasOwnProperty(_style5)) {\n                span = span || document.createElement(\"span\");\n                // $FlowFixMe Flow doesn't seem to understand span.style's type.\n                span.style[_style5] = this.style[_style5];\n            }\n        }\n\n        if (span) {\n            span.appendChild(node);\n            return span;\n        } else {\n            return node;\n        }\n    };\n\n    /**\n     * Creates markup for a symbol node.\n     */\n\n\n    SymbolNode.prototype.toMarkup = function toMarkup() {\n        // TODO(alpert): More duplication than I'd like from\n        // span.prototype.toMarkup and symbolNode.prototype.toNode...\n        var needsSpan = false;\n\n        var markup = \"<span\";\n\n        if (this.classes.length) {\n            needsSpan = true;\n            markup += \" class=\\\"\";\n            markup += utils.escape(createClass(this.classes));\n            markup += \"\\\"\";\n        }\n\n        var styles = \"\";\n\n        if (this.italic > 0) {\n            styles += \"margin-right:\" + this.italic + \"em;\";\n        }\n        for (var _style6 in this.style) {\n            if (this.style.hasOwnProperty(_style6)) {\n                styles += utils.hyphenate(_style6) + \":\" + this.style[_style6] + \";\";\n            }\n        }\n\n        if (styles) {\n            needsSpan = true;\n            markup += \" style=\\\"\" + utils.escape(styles) + \"\\\"\";\n        }\n\n        var escaped = utils.escape(this.text);\n        if (needsSpan) {\n            markup += \">\";\n            markup += escaped;\n            markup += \"</span>\";\n            return markup;\n        } else {\n            return escaped;\n        }\n    };\n\n    return SymbolNode;\n}();\n\n/**\n * SVG nodes are used to render stretchy wide elements.\n */\nvar domTree_SvgNode = function () {\n    function SvgNode(children, attributes) {\n        classCallCheck_default()(this, SvgNode);\n\n        this.children = children || [];\n        this.attributes = attributes || {};\n    }\n\n    SvgNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"svg\");\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        for (var i = 0; i < this.children.length; i++) {\n            node.appendChild(this.children[i].toNode());\n        }\n        return node;\n    };\n\n    SvgNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<svg\";\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n            }\n        }\n\n        markup += \">\";\n\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        markup += \"</svg>\";\n\n        return markup;\n    };\n\n    return SvgNode;\n}();\n\nvar domTree_PathNode = function () {\n    function PathNode(pathName, alternate) {\n        classCallCheck_default()(this, PathNode);\n\n        this.pathName = pathName;\n        this.alternate = alternate; // Used only for tall \\sqrt\n    }\n\n    PathNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"path\");\n\n        if (this.alternate) {\n            node.setAttribute(\"d\", this.alternate);\n        } else {\n            node.setAttribute(\"d\", svgGeometry.path[this.pathName]);\n        }\n\n        return node;\n    };\n\n    PathNode.prototype.toMarkup = function toMarkup() {\n        if (this.alternate) {\n            return \"<path d='\" + this.alternate + \"'/>\";\n        } else {\n            return \"<path d='\" + svgGeometry.path[this.pathName] + \"'/>\";\n        }\n    };\n\n    return PathNode;\n}();\n\nvar domTree_LineNode = function () {\n    function LineNode(attributes) {\n        classCallCheck_default()(this, LineNode);\n\n        this.attributes = attributes || {};\n    }\n\n    LineNode.prototype.toNode = function toNode() {\n        var svgNS = \"http://www.w3.org/2000/svg\";\n        var node = document.createElementNS(svgNS, \"line\");\n\n        // Apply attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        return node;\n    };\n\n    LineNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<line\";\n\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"='\" + this.attributes[attr] + \"'\";\n            }\n        }\n\n        markup += \"/>\";\n\n        return markup;\n    };\n\n    return LineNode;\n}();\n\nfunction assertSymbolDomNode(group) {\n    if (group instanceof domTree_SymbolNode) {\n        return group;\n    } else {\n        throw new Error(\"Expected symbolNode but got \" + String(group) + \".\");\n    }\n}\n\nfunction assertSpan(group) {\n    if (group instanceof domTree_Span) {\n        return group;\n    } else {\n        throw new Error(\"Expected span<HtmlDomNode> but got \" + String(group) + \".\");\n    }\n}\n// CONCATENATED MODULE: ./submodules/katex-fonts/fontMetricsData.js\n// This file is GENERATED by buildMetrics.sh. DO NOT MODIFY.\n/* harmony default export */ var fontMetricsData = ({\n    \"AMS-Regular\": {\n        \"65\": [0, 0.68889, 0, 0, 0.72222],\n        \"66\": [0, 0.68889, 0, 0, 0.66667],\n        \"67\": [0, 0.68889, 0, 0, 0.72222],\n        \"68\": [0, 0.68889, 0, 0, 0.72222],\n        \"69\": [0, 0.68889, 0, 0, 0.66667],\n        \"70\": [0, 0.68889, 0, 0, 0.61111],\n        \"71\": [0, 0.68889, 0, 0, 0.77778],\n        \"72\": [0, 0.68889, 0, 0, 0.77778],\n        \"73\": [0, 0.68889, 0, 0, 0.38889],\n        \"74\": [0.16667, 0.68889, 0, 0, 0.5],\n        \"75\": [0, 0.68889, 0, 0, 0.77778],\n        \"76\": [0, 0.68889, 0, 0, 0.66667],\n        \"77\": [0, 0.68889, 0, 0, 0.94445],\n        \"78\": [0, 0.68889, 0, 0, 0.72222],\n        \"79\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"80\": [0, 0.68889, 0, 0, 0.61111],\n        \"81\": [0.16667, 0.68889, 0, 0, 0.77778],\n        \"82\": [0, 0.68889, 0, 0, 0.72222],\n        \"83\": [0, 0.68889, 0, 0, 0.55556],\n        \"84\": [0, 0.68889, 0, 0, 0.66667],\n        \"85\": [0, 0.68889, 0, 0, 0.72222],\n        \"86\": [0, 0.68889, 0, 0, 0.72222],\n        \"87\": [0, 0.68889, 0, 0, 1.0],\n        \"88\": [0, 0.68889, 0, 0, 0.72222],\n        \"89\": [0, 0.68889, 0, 0, 0.72222],\n        \"90\": [0, 0.68889, 0, 0, 0.66667],\n        \"107\": [0, 0.68889, 0, 0, 0.55556],\n        \"165\": [0, 0.675, 0.025, 0, 0.75],\n        \"174\": [0.15559, 0.69224, 0, 0, 0.94666],\n        \"240\": [0, 0.68889, 0, 0, 0.55556],\n        \"295\": [0, 0.68889, 0, 0, 0.54028],\n        \"710\": [0, 0.825, 0, 0, 2.33334],\n        \"732\": [0, 0.9, 0, 0, 2.33334],\n        \"770\": [0, 0.825, 0, 0, 2.33334],\n        \"771\": [0, 0.9, 0, 0, 2.33334],\n        \"989\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"1008\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"8245\": [0, 0.54986, 0, 0, 0.275],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8487\": [0, 0.68889, 0, 0, 0.72222],\n        \"8498\": [0, 0.68889, 0, 0, 0.55556],\n        \"8502\": [0, 0.68889, 0, 0, 0.66667],\n        \"8503\": [0, 0.68889, 0, 0, 0.44445],\n        \"8504\": [0, 0.68889, 0, 0, 0.66667],\n        \"8513\": [0, 0.68889, 0, 0, 0.63889],\n        \"8592\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8594\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8602\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8603\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8606\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8608\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8610\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8611\": [0.01354, 0.52239, 0, 0, 1.11111],\n        \"8619\": [0, 0.54986, 0, 0, 1.0],\n        \"8620\": [0, 0.54986, 0, 0, 1.0],\n        \"8621\": [-0.13313, 0.37788, 0, 0, 1.38889],\n        \"8622\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8624\": [0, 0.69224, 0, 0, 0.5],\n        \"8625\": [0, 0.69224, 0, 0, 0.5],\n        \"8630\": [0, 0.43056, 0, 0, 1.0],\n        \"8631\": [0, 0.43056, 0, 0, 1.0],\n        \"8634\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8635\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8638\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8639\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8642\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8643\": [0.19444, 0.69224, 0, 0, 0.41667],\n        \"8644\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8646\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8647\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8648\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8649\": [0.1808, 0.675, 0, 0, 1.0],\n        \"8650\": [0.19444, 0.69224, 0, 0, 0.83334],\n        \"8651\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8652\": [0.01354, 0.52239, 0, 0, 1.0],\n        \"8653\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8654\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8655\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8666\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8667\": [0.13667, 0.63667, 0, 0, 1.0],\n        \"8669\": [-0.13313, 0.37788, 0, 0, 1.0],\n        \"8672\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8674\": [-0.064, 0.437, 0, 0, 1.334],\n        \"8705\": [0, 0.825, 0, 0, 0.5],\n        \"8708\": [0, 0.68889, 0, 0, 0.55556],\n        \"8709\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8717\": [0, 0.43056, 0, 0, 0.42917],\n        \"8722\": [-0.03598, 0.46402, 0, 0, 0.5],\n        \"8724\": [0.08198, 0.69224, 0, 0, 0.77778],\n        \"8726\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8733\": [0, 0.69224, 0, 0, 0.77778],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8737\": [0, 0.69224, 0, 0, 0.72222],\n        \"8738\": [0.03517, 0.52239, 0, 0, 0.72222],\n        \"8739\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"8740\": [0.25142, 0.74111, 0, 0, 0.27778],\n        \"8741\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"8742\": [0.25142, 0.74111, 0, 0, 0.5],\n        \"8756\": [0, 0.69224, 0, 0, 0.66667],\n        \"8757\": [0, 0.69224, 0, 0, 0.66667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8765\": [-0.13313, 0.37788, 0, 0, 0.77778],\n        \"8769\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8770\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8774\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8778\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8782\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8783\": [0.06062, 0.54986, 0, 0, 0.77778],\n        \"8785\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8786\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8787\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8790\": [0, 0.69224, 0, 0, 0.77778],\n        \"8791\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8796\": [0.08198, 0.91667, 0, 0, 0.77778],\n        \"8806\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8807\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"8808\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8809\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"8812\": [0.25583, 0.75583, 0, 0, 0.5],\n        \"8814\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8815\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8816\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8817\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8818\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8819\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8822\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8823\": [0.1808, 0.675, 0, 0, 0.77778],\n        \"8828\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8829\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8830\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8831\": [0.22958, 0.72958, 0, 0, 0.77778],\n        \"8832\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8833\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8840\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8841\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8842\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8843\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8847\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8848\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8858\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8859\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8861\": [0.08198, 0.58198, 0, 0, 0.77778],\n        \"8862\": [0, 0.675, 0, 0, 0.77778],\n        \"8863\": [0, 0.675, 0, 0, 0.77778],\n        \"8864\": [0, 0.675, 0, 0, 0.77778],\n        \"8865\": [0, 0.675, 0, 0, 0.77778],\n        \"8872\": [0, 0.69224, 0, 0, 0.61111],\n        \"8873\": [0, 0.69224, 0, 0, 0.72222],\n        \"8874\": [0, 0.69224, 0, 0, 0.88889],\n        \"8876\": [0, 0.68889, 0, 0, 0.61111],\n        \"8877\": [0, 0.68889, 0, 0, 0.61111],\n        \"8878\": [0, 0.68889, 0, 0, 0.72222],\n        \"8879\": [0, 0.68889, 0, 0, 0.72222],\n        \"8882\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8883\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8884\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8885\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8888\": [0, 0.54986, 0, 0, 1.11111],\n        \"8890\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"8891\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8892\": [0.19444, 0.69224, 0, 0, 0.61111],\n        \"8901\": [0, 0.54986, 0, 0, 0.27778],\n        \"8903\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8905\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8906\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"8907\": [0, 0.69224, 0, 0, 0.77778],\n        \"8908\": [0, 0.69224, 0, 0, 0.77778],\n        \"8909\": [-0.03598, 0.46402, 0, 0, 0.77778],\n        \"8910\": [0, 0.54986, 0, 0, 0.76042],\n        \"8911\": [0, 0.54986, 0, 0, 0.76042],\n        \"8912\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8913\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"8914\": [0, 0.54986, 0, 0, 0.66667],\n        \"8915\": [0, 0.54986, 0, 0, 0.66667],\n        \"8916\": [0, 0.69224, 0, 0, 0.66667],\n        \"8918\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8919\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8920\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8921\": [0.03517, 0.54986, 0, 0, 1.33334],\n        \"8922\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8923\": [0.38569, 0.88569, 0, 0, 0.77778],\n        \"8926\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8927\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"8928\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8929\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8934\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8935\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8936\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8937\": [0.23222, 0.74111, 0, 0, 0.77778],\n        \"8938\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8939\": [0.20576, 0.70576, 0, 0, 0.77778],\n        \"8940\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8941\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"8994\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"8995\": [0.19444, 0.69224, 0, 0, 0.77778],\n        \"9416\": [0.15559, 0.69224, 0, 0, 0.90222],\n        \"9484\": [0, 0.69224, 0, 0, 0.5],\n        \"9488\": [0, 0.69224, 0, 0, 0.5],\n        \"9492\": [0, 0.37788, 0, 0, 0.5],\n        \"9496\": [0, 0.37788, 0, 0, 0.5],\n        \"9585\": [0.19444, 0.68889, 0, 0, 0.88889],\n        \"9586\": [0.19444, 0.74111, 0, 0, 0.88889],\n        \"9632\": [0, 0.675, 0, 0, 0.77778],\n        \"9633\": [0, 0.675, 0, 0, 0.77778],\n        \"9650\": [0, 0.54986, 0, 0, 0.72222],\n        \"9651\": [0, 0.54986, 0, 0, 0.72222],\n        \"9654\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9660\": [0, 0.54986, 0, 0, 0.72222],\n        \"9661\": [0, 0.54986, 0, 0, 0.72222],\n        \"9664\": [0.03517, 0.54986, 0, 0, 0.77778],\n        \"9674\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"9733\": [0.19444, 0.69224, 0, 0, 0.94445],\n        \"10003\": [0, 0.69224, 0, 0, 0.83334],\n        \"10016\": [0, 0.69224, 0, 0, 0.83334],\n        \"10731\": [0.11111, 0.69224, 0, 0, 0.66667],\n        \"10846\": [0.19444, 0.75583, 0, 0, 0.61111],\n        \"10877\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10878\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10885\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10886\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10887\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10888\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10889\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10890\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10891\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10892\": [0.48256, 0.98256, 0, 0, 0.77778],\n        \"10901\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10902\": [0.13667, 0.63667, 0, 0, 0.77778],\n        \"10933\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10934\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"10935\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10936\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10937\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10938\": [0.26167, 0.75726, 0, 0, 0.77778],\n        \"10949\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10950\": [0.25583, 0.75583, 0, 0, 0.77778],\n        \"10955\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"10956\": [0.28481, 0.79383, 0, 0, 0.77778],\n        \"57350\": [0.08167, 0.58167, 0, 0, 0.22222],\n        \"57351\": [0.08167, 0.58167, 0, 0, 0.38889],\n        \"57352\": [0.08167, 0.58167, 0, 0, 0.77778],\n        \"57353\": [0, 0.43056, 0.04028, 0, 0.66667],\n        \"57356\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57357\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57358\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57359\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57360\": [0.30274, 0.79383, 0, 0, 0.77778],\n        \"57361\": [0.41951, 0.91951, 0, 0, 0.77778],\n        \"57366\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57367\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57368\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57369\": [0.25142, 0.75726, 0, 0, 0.77778],\n        \"57370\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"57371\": [0.13597, 0.63597, 0, 0, 0.77778]\n    },\n    \"Caligraphic-Regular\": {\n        \"48\": [0, 0.43056, 0, 0, 0.5],\n        \"49\": [0, 0.43056, 0, 0, 0.5],\n        \"50\": [0, 0.43056, 0, 0, 0.5],\n        \"51\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"52\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"53\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0.19444, 0.43056, 0, 0, 0.5],\n        \"65\": [0, 0.68333, 0, 0.19445, 0.79847],\n        \"66\": [0, 0.68333, 0.03041, 0.13889, 0.65681],\n        \"67\": [0, 0.68333, 0.05834, 0.13889, 0.52653],\n        \"68\": [0, 0.68333, 0.02778, 0.08334, 0.77139],\n        \"69\": [0, 0.68333, 0.08944, 0.11111, 0.52778],\n        \"70\": [0, 0.68333, 0.09931, 0.11111, 0.71875],\n        \"71\": [0.09722, 0.68333, 0.0593, 0.11111, 0.59487],\n        \"72\": [0, 0.68333, 0.00965, 0.11111, 0.84452],\n        \"73\": [0, 0.68333, 0.07382, 0, 0.54452],\n        \"74\": [0.09722, 0.68333, 0.18472, 0.16667, 0.67778],\n        \"75\": [0, 0.68333, 0.01445, 0.05556, 0.76195],\n        \"76\": [0, 0.68333, 0, 0.13889, 0.68972],\n        \"77\": [0, 0.68333, 0, 0.13889, 1.2009],\n        \"78\": [0, 0.68333, 0.14736, 0.08334, 0.82049],\n        \"79\": [0, 0.68333, 0.02778, 0.11111, 0.79611],\n        \"80\": [0, 0.68333, 0.08222, 0.08334, 0.69556],\n        \"81\": [0.09722, 0.68333, 0, 0.11111, 0.81667],\n        \"82\": [0, 0.68333, 0, 0.08334, 0.8475],\n        \"83\": [0, 0.68333, 0.075, 0.13889, 0.60556],\n        \"84\": [0, 0.68333, 0.25417, 0, 0.54464],\n        \"85\": [0, 0.68333, 0.09931, 0.08334, 0.62583],\n        \"86\": [0, 0.68333, 0.08222, 0, 0.61278],\n        \"87\": [0, 0.68333, 0.08222, 0.08334, 0.98778],\n        \"88\": [0, 0.68333, 0.14643, 0.13889, 0.7133],\n        \"89\": [0.09722, 0.68333, 0.08222, 0.08334, 0.66834],\n        \"90\": [0, 0.68333, 0.07944, 0.13889, 0.72473]\n    },\n    \"Fraktur-Regular\": {\n        \"33\": [0, 0.69141, 0, 0, 0.29574],\n        \"34\": [0, 0.69141, 0, 0, 0.21471],\n        \"38\": [0, 0.69141, 0, 0, 0.73786],\n        \"39\": [0, 0.69141, 0, 0, 0.21201],\n        \"40\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"41\": [0.24982, 0.74947, 0, 0, 0.38865],\n        \"42\": [0, 0.62119, 0, 0, 0.27764],\n        \"43\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"44\": [0, 0.10803, 0, 0, 0.27764],\n        \"45\": [0.08319, 0.58283, 0, 0, 0.75623],\n        \"46\": [0, 0.10803, 0, 0, 0.27764],\n        \"47\": [0.24982, 0.74947, 0, 0, 0.50181],\n        \"48\": [0, 0.47534, 0, 0, 0.50181],\n        \"49\": [0, 0.47534, 0, 0, 0.50181],\n        \"50\": [0, 0.47534, 0, 0, 0.50181],\n        \"51\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"52\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"53\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"54\": [0, 0.69141, 0, 0, 0.50181],\n        \"55\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"56\": [0, 0.69141, 0, 0, 0.50181],\n        \"57\": [0.18906, 0.47534, 0, 0, 0.50181],\n        \"58\": [0, 0.47534, 0, 0, 0.21606],\n        \"59\": [0.12604, 0.47534, 0, 0, 0.21606],\n        \"61\": [-0.13099, 0.36866, 0, 0, 0.75623],\n        \"63\": [0, 0.69141, 0, 0, 0.36245],\n        \"65\": [0, 0.69141, 0, 0, 0.7176],\n        \"66\": [0, 0.69141, 0, 0, 0.88397],\n        \"67\": [0, 0.69141, 0, 0, 0.61254],\n        \"68\": [0, 0.69141, 0, 0, 0.83158],\n        \"69\": [0, 0.69141, 0, 0, 0.66278],\n        \"70\": [0.12604, 0.69141, 0, 0, 0.61119],\n        \"71\": [0, 0.69141, 0, 0, 0.78539],\n        \"72\": [0.06302, 0.69141, 0, 0, 0.7203],\n        \"73\": [0, 0.69141, 0, 0, 0.55448],\n        \"74\": [0.12604, 0.69141, 0, 0, 0.55231],\n        \"75\": [0, 0.69141, 0, 0, 0.66845],\n        \"76\": [0, 0.69141, 0, 0, 0.66602],\n        \"77\": [0, 0.69141, 0, 0, 1.04953],\n        \"78\": [0, 0.69141, 0, 0, 0.83212],\n        \"79\": [0, 0.69141, 0, 0, 0.82699],\n        \"80\": [0.18906, 0.69141, 0, 0, 0.82753],\n        \"81\": [0.03781, 0.69141, 0, 0, 0.82699],\n        \"82\": [0, 0.69141, 0, 0, 0.82807],\n        \"83\": [0, 0.69141, 0, 0, 0.82861],\n        \"84\": [0, 0.69141, 0, 0, 0.66899],\n        \"85\": [0, 0.69141, 0, 0, 0.64576],\n        \"86\": [0, 0.69141, 0, 0, 0.83131],\n        \"87\": [0, 0.69141, 0, 0, 1.04602],\n        \"88\": [0, 0.69141, 0, 0, 0.71922],\n        \"89\": [0.18906, 0.69141, 0, 0, 0.83293],\n        \"90\": [0.12604, 0.69141, 0, 0, 0.60201],\n        \"91\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"93\": [0.24982, 0.74947, 0, 0, 0.27764],\n        \"94\": [0, 0.69141, 0, 0, 0.49965],\n        \"97\": [0, 0.47534, 0, 0, 0.50046],\n        \"98\": [0, 0.69141, 0, 0, 0.51315],\n        \"99\": [0, 0.47534, 0, 0, 0.38946],\n        \"100\": [0, 0.62119, 0, 0, 0.49857],\n        \"101\": [0, 0.47534, 0, 0, 0.40053],\n        \"102\": [0.18906, 0.69141, 0, 0, 0.32626],\n        \"103\": [0.18906, 0.47534, 0, 0, 0.5037],\n        \"104\": [0.18906, 0.69141, 0, 0, 0.52126],\n        \"105\": [0, 0.69141, 0, 0, 0.27899],\n        \"106\": [0, 0.69141, 0, 0, 0.28088],\n        \"107\": [0, 0.69141, 0, 0, 0.38946],\n        \"108\": [0, 0.69141, 0, 0, 0.27953],\n        \"109\": [0, 0.47534, 0, 0, 0.76676],\n        \"110\": [0, 0.47534, 0, 0, 0.52666],\n        \"111\": [0, 0.47534, 0, 0, 0.48885],\n        \"112\": [0.18906, 0.52396, 0, 0, 0.50046],\n        \"113\": [0.18906, 0.47534, 0, 0, 0.48912],\n        \"114\": [0, 0.47534, 0, 0, 0.38919],\n        \"115\": [0, 0.47534, 0, 0, 0.44266],\n        \"116\": [0, 0.62119, 0, 0, 0.33301],\n        \"117\": [0, 0.47534, 0, 0, 0.5172],\n        \"118\": [0, 0.52396, 0, 0, 0.5118],\n        \"119\": [0, 0.52396, 0, 0, 0.77351],\n        \"120\": [0.18906, 0.47534, 0, 0, 0.38865],\n        \"121\": [0.18906, 0.47534, 0, 0, 0.49884],\n        \"122\": [0.18906, 0.47534, 0, 0, 0.39054],\n        \"8216\": [0, 0.69141, 0, 0, 0.21471],\n        \"8217\": [0, 0.69141, 0, 0, 0.21471],\n        \"58112\": [0, 0.62119, 0, 0, 0.49749],\n        \"58113\": [0, 0.62119, 0, 0, 0.4983],\n        \"58114\": [0.18906, 0.69141, 0, 0, 0.33328],\n        \"58115\": [0.18906, 0.69141, 0, 0, 0.32923],\n        \"58116\": [0.18906, 0.47534, 0, 0, 0.50343],\n        \"58117\": [0, 0.69141, 0, 0, 0.33301],\n        \"58118\": [0, 0.62119, 0, 0, 0.33409],\n        \"58119\": [0, 0.47534, 0, 0, 0.50073]\n    },\n    \"Main-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.35],\n        \"34\": [0, 0.69444, 0, 0, 0.60278],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.95833],\n        \"36\": [0.05556, 0.75, 0, 0, 0.575],\n        \"37\": [0.05556, 0.75, 0, 0, 0.95833],\n        \"38\": [0, 0.69444, 0, 0, 0.89444],\n        \"39\": [0, 0.69444, 0, 0, 0.31944],\n        \"40\": [0.25, 0.75, 0, 0, 0.44722],\n        \"41\": [0.25, 0.75, 0, 0, 0.44722],\n        \"42\": [0, 0.75, 0, 0, 0.575],\n        \"43\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"44\": [0.19444, 0.15556, 0, 0, 0.31944],\n        \"45\": [0, 0.44444, 0, 0, 0.38333],\n        \"46\": [0, 0.15556, 0, 0, 0.31944],\n        \"47\": [0.25, 0.75, 0, 0, 0.575],\n        \"48\": [0, 0.64444, 0, 0, 0.575],\n        \"49\": [0, 0.64444, 0, 0, 0.575],\n        \"50\": [0, 0.64444, 0, 0, 0.575],\n        \"51\": [0, 0.64444, 0, 0, 0.575],\n        \"52\": [0, 0.64444, 0, 0, 0.575],\n        \"53\": [0, 0.64444, 0, 0, 0.575],\n        \"54\": [0, 0.64444, 0, 0, 0.575],\n        \"55\": [0, 0.64444, 0, 0, 0.575],\n        \"56\": [0, 0.64444, 0, 0, 0.575],\n        \"57\": [0, 0.64444, 0, 0, 0.575],\n        \"58\": [0, 0.44444, 0, 0, 0.31944],\n        \"59\": [0.19444, 0.44444, 0, 0, 0.31944],\n        \"60\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"61\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"62\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"63\": [0, 0.69444, 0, 0, 0.54305],\n        \"64\": [0, 0.69444, 0, 0, 0.89444],\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0, 0, 0.81805],\n        \"67\": [0, 0.68611, 0, 0, 0.83055],\n        \"68\": [0, 0.68611, 0, 0, 0.88194],\n        \"69\": [0, 0.68611, 0, 0, 0.75555],\n        \"70\": [0, 0.68611, 0, 0, 0.72361],\n        \"71\": [0, 0.68611, 0, 0, 0.90416],\n        \"72\": [0, 0.68611, 0, 0, 0.9],\n        \"73\": [0, 0.68611, 0, 0, 0.43611],\n        \"74\": [0, 0.68611, 0, 0, 0.59444],\n        \"75\": [0, 0.68611, 0, 0, 0.90138],\n        \"76\": [0, 0.68611, 0, 0, 0.69166],\n        \"77\": [0, 0.68611, 0, 0, 1.09166],\n        \"78\": [0, 0.68611, 0, 0, 0.9],\n        \"79\": [0, 0.68611, 0, 0, 0.86388],\n        \"80\": [0, 0.68611, 0, 0, 0.78611],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86388],\n        \"82\": [0, 0.68611, 0, 0, 0.8625],\n        \"83\": [0, 0.68611, 0, 0, 0.63889],\n        \"84\": [0, 0.68611, 0, 0, 0.8],\n        \"85\": [0, 0.68611, 0, 0, 0.88472],\n        \"86\": [0, 0.68611, 0.01597, 0, 0.86944],\n        \"87\": [0, 0.68611, 0.01597, 0, 1.18888],\n        \"88\": [0, 0.68611, 0, 0, 0.86944],\n        \"89\": [0, 0.68611, 0.02875, 0, 0.86944],\n        \"90\": [0, 0.68611, 0, 0, 0.70277],\n        \"91\": [0.25, 0.75, 0, 0, 0.31944],\n        \"92\": [0.25, 0.75, 0, 0, 0.575],\n        \"93\": [0.25, 0.75, 0, 0, 0.31944],\n        \"94\": [0, 0.69444, 0, 0, 0.575],\n        \"95\": [0.31, 0.13444, 0.03194, 0, 0.575],\n        \"97\": [0, 0.44444, 0, 0, 0.55902],\n        \"98\": [0, 0.69444, 0, 0, 0.63889],\n        \"99\": [0, 0.44444, 0, 0, 0.51111],\n        \"100\": [0, 0.69444, 0, 0, 0.63889],\n        \"101\": [0, 0.44444, 0, 0, 0.52708],\n        \"102\": [0, 0.69444, 0.10903, 0, 0.35139],\n        \"103\": [0.19444, 0.44444, 0.01597, 0, 0.575],\n        \"104\": [0, 0.69444, 0, 0, 0.63889],\n        \"105\": [0, 0.69444, 0, 0, 0.31944],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.35139],\n        \"107\": [0, 0.69444, 0, 0, 0.60694],\n        \"108\": [0, 0.69444, 0, 0, 0.31944],\n        \"109\": [0, 0.44444, 0, 0, 0.95833],\n        \"110\": [0, 0.44444, 0, 0, 0.63889],\n        \"111\": [0, 0.44444, 0, 0, 0.575],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.63889],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.60694],\n        \"114\": [0, 0.44444, 0, 0, 0.47361],\n        \"115\": [0, 0.44444, 0, 0, 0.45361],\n        \"116\": [0, 0.63492, 0, 0, 0.44722],\n        \"117\": [0, 0.44444, 0, 0, 0.63889],\n        \"118\": [0, 0.44444, 0.01597, 0, 0.60694],\n        \"119\": [0, 0.44444, 0.01597, 0, 0.83055],\n        \"120\": [0, 0.44444, 0, 0, 0.60694],\n        \"121\": [0.19444, 0.44444, 0.01597, 0, 0.60694],\n        \"122\": [0, 0.44444, 0, 0, 0.51111],\n        \"123\": [0.25, 0.75, 0, 0, 0.575],\n        \"124\": [0.25, 0.75, 0, 0, 0.31944],\n        \"125\": [0.25, 0.75, 0, 0, 0.575],\n        \"126\": [0.35, 0.34444, 0, 0, 0.575],\n        \"168\": [0, 0.69444, 0, 0, 0.575],\n        \"172\": [0, 0.44444, 0, 0, 0.76666],\n        \"176\": [0, 0.69444, 0, 0, 0.86944],\n        \"177\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"184\": [0.17014, 0, 0, 0, 0.51111],\n        \"198\": [0, 0.68611, 0, 0, 1.04166],\n        \"215\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"216\": [0.04861, 0.73472, 0, 0, 0.89444],\n        \"223\": [0, 0.69444, 0, 0, 0.59722],\n        \"230\": [0, 0.44444, 0, 0, 0.83055],\n        \"247\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"248\": [0.09722, 0.54167, 0, 0, 0.575],\n        \"305\": [0, 0.44444, 0, 0, 0.31944],\n        \"338\": [0, 0.68611, 0, 0, 1.16944],\n        \"339\": [0, 0.44444, 0, 0, 0.89444],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.35139],\n        \"710\": [0, 0.69444, 0, 0, 0.575],\n        \"711\": [0, 0.63194, 0, 0, 0.575],\n        \"713\": [0, 0.59611, 0, 0, 0.575],\n        \"714\": [0, 0.69444, 0, 0, 0.575],\n        \"715\": [0, 0.69444, 0, 0, 0.575],\n        \"728\": [0, 0.69444, 0, 0, 0.575],\n        \"729\": [0, 0.69444, 0, 0, 0.31944],\n        \"730\": [0, 0.69444, 0, 0, 0.86944],\n        \"732\": [0, 0.69444, 0, 0, 0.575],\n        \"733\": [0, 0.69444, 0, 0, 0.575],\n        \"824\": [0.19444, 0.69444, 0, 0, 0],\n        \"915\": [0, 0.68611, 0, 0, 0.69166],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0, 0, 0.89444],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0, 0, 0.76666],\n        \"928\": [0, 0.68611, 0, 0, 0.9],\n        \"931\": [0, 0.68611, 0, 0, 0.83055],\n        \"933\": [0, 0.68611, 0, 0, 0.89444],\n        \"934\": [0, 0.68611, 0, 0, 0.83055],\n        \"936\": [0, 0.68611, 0, 0, 0.89444],\n        \"937\": [0, 0.68611, 0, 0, 0.83055],\n        \"8211\": [0, 0.44444, 0.03194, 0, 0.575],\n        \"8212\": [0, 0.44444, 0.03194, 0, 1.14999],\n        \"8216\": [0, 0.69444, 0, 0, 0.31944],\n        \"8217\": [0, 0.69444, 0, 0, 0.31944],\n        \"8220\": [0, 0.69444, 0, 0, 0.60278],\n        \"8221\": [0, 0.69444, 0, 0, 0.60278],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.51111],\n        \"8242\": [0, 0.55556, 0, 0, 0.34444],\n        \"8407\": [0, 0.72444, 0.15486, 0, 0.575],\n        \"8463\": [0, 0.69444, 0, 0, 0.66759],\n        \"8465\": [0, 0.69444, 0, 0, 0.83055],\n        \"8467\": [0, 0.69444, 0, 0, 0.47361],\n        \"8472\": [0.19444, 0.44444, 0, 0, 0.74027],\n        \"8476\": [0, 0.69444, 0, 0, 0.83055],\n        \"8501\": [0, 0.69444, 0, 0, 0.70277],\n        \"8592\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8594\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.575],\n        \"8596\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8597\": [0.25, 0.75, 0, 0, 0.575],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"8636\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8637\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8640\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8641\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8656\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8658\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.70277],\n        \"8660\": [-0.10889, 0.39111, 0, 0, 1.14999],\n        \"8661\": [0.25, 0.75, 0, 0, 0.70277],\n        \"8704\": [0, 0.69444, 0, 0, 0.63889],\n        \"8706\": [0, 0.69444, 0.06389, 0, 0.62847],\n        \"8707\": [0, 0.69444, 0, 0, 0.63889],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.575],\n        \"8711\": [0, 0.68611, 0, 0, 0.95833],\n        \"8712\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8715\": [0.08556, 0.58556, 0, 0, 0.76666],\n        \"8722\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8723\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8725\": [0.25, 0.75, 0, 0, 0.575],\n        \"8726\": [0.25, 0.75, 0, 0, 0.575],\n        \"8727\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8728\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8729\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8730\": [0.18, 0.82, 0, 0, 0.95833],\n        \"8733\": [0, 0.44444, 0, 0, 0.89444],\n        \"8734\": [0, 0.44444, 0, 0, 1.14999],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.31944],\n        \"8741\": [0.25, 0.75, 0, 0, 0.575],\n        \"8743\": [0, 0.55556, 0, 0, 0.76666],\n        \"8744\": [0, 0.55556, 0, 0, 0.76666],\n        \"8745\": [0, 0.55556, 0, 0, 0.76666],\n        \"8746\": [0, 0.55556, 0, 0, 0.76666],\n        \"8747\": [0.19444, 0.69444, 0.12778, 0, 0.56875],\n        \"8764\": [-0.10889, 0.39111, 0, 0, 0.89444],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.31944],\n        \"8771\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8776\": [0.02444, 0.52444, 0, 0, 0.89444],\n        \"8781\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8801\": [0.00222, 0.50222, 0, 0, 0.89444],\n        \"8804\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8805\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8810\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8811\": [0.08556, 0.58556, 0, 0, 1.14999],\n        \"8826\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8827\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8834\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8835\": [0.08556, 0.58556, 0, 0, 0.89444],\n        \"8838\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8839\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8846\": [0, 0.55556, 0, 0, 0.76666],\n        \"8849\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8850\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"8851\": [0, 0.55556, 0, 0, 0.76666],\n        \"8852\": [0, 0.55556, 0, 0, 0.76666],\n        \"8853\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8854\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8855\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8856\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8857\": [0.13333, 0.63333, 0, 0, 0.89444],\n        \"8866\": [0, 0.69444, 0, 0, 0.70277],\n        \"8867\": [0, 0.69444, 0, 0, 0.70277],\n        \"8868\": [0, 0.69444, 0, 0, 0.89444],\n        \"8869\": [0, 0.69444, 0, 0, 0.89444],\n        \"8900\": [-0.02639, 0.47361, 0, 0, 0.575],\n        \"8901\": [-0.02639, 0.47361, 0, 0, 0.31944],\n        \"8902\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"8968\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8969\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8970\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8971\": [0.25, 0.75, 0, 0, 0.51111],\n        \"8994\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"8995\": [-0.13889, 0.36111, 0, 0, 1.14999],\n        \"9651\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9657\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9661\": [0.19444, 0.69444, 0, 0, 1.02222],\n        \"9667\": [-0.02778, 0.47222, 0, 0, 0.575],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.14999],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.89444],\n        \"9837\": [0, 0.75, 0, 0, 0.44722],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.44722],\n        \"10216\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10217\": [0.25, 0.75, 0, 0, 0.44722],\n        \"10815\": [0, 0.68611, 0, 0, 0.9],\n        \"10927\": [0.19667, 0.69667, 0, 0, 0.89444],\n        \"10928\": [0.19667, 0.69667, 0, 0, 0.89444]\n    },\n    \"Main-BoldItalic\": {\n        \"33\": [0, 0.69444, 0.11417, 0, 0.38611],\n        \"34\": [0, 0.69444, 0.07939, 0, 0.62055],\n        \"35\": [0.19444, 0.69444, 0.06833, 0, 0.94444],\n        \"37\": [0.05556, 0.75, 0.12861, 0, 0.94444],\n        \"38\": [0, 0.69444, 0.08528, 0, 0.88555],\n        \"39\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"40\": [0.25, 0.75, 0.15806, 0, 0.47333],\n        \"41\": [0.25, 0.75, 0.03306, 0, 0.47333],\n        \"42\": [0, 0.75, 0.14333, 0, 0.59111],\n        \"43\": [0.10333, 0.60333, 0.03306, 0, 0.88555],\n        \"44\": [0.19444, 0.14722, 0, 0, 0.35555],\n        \"45\": [0, 0.44444, 0.02611, 0, 0.41444],\n        \"46\": [0, 0.14722, 0, 0, 0.35555],\n        \"47\": [0.25, 0.75, 0.15806, 0, 0.59111],\n        \"48\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"49\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"50\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"51\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"52\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"53\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"54\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"55\": [0.19444, 0.64444, 0.13167, 0, 0.59111],\n        \"56\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"57\": [0, 0.64444, 0.13167, 0, 0.59111],\n        \"58\": [0, 0.44444, 0.06695, 0, 0.35555],\n        \"59\": [0.19444, 0.44444, 0.06695, 0, 0.35555],\n        \"61\": [-0.10889, 0.39111, 0.06833, 0, 0.88555],\n        \"63\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"64\": [0, 0.69444, 0.09208, 0, 0.88555],\n        \"65\": [0, 0.68611, 0, 0, 0.86555],\n        \"66\": [0, 0.68611, 0.0992, 0, 0.81666],\n        \"67\": [0, 0.68611, 0.14208, 0, 0.82666],\n        \"68\": [0, 0.68611, 0.09062, 0, 0.87555],\n        \"69\": [0, 0.68611, 0.11431, 0, 0.75666],\n        \"70\": [0, 0.68611, 0.12903, 0, 0.72722],\n        \"71\": [0, 0.68611, 0.07347, 0, 0.89527],\n        \"72\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"73\": [0, 0.68611, 0.15681, 0, 0.47166],\n        \"74\": [0, 0.68611, 0.145, 0, 0.61055],\n        \"75\": [0, 0.68611, 0.14208, 0, 0.89499],\n        \"76\": [0, 0.68611, 0, 0, 0.69777],\n        \"77\": [0, 0.68611, 0.17208, 0, 1.07277],\n        \"78\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"79\": [0, 0.68611, 0.09062, 0, 0.85499],\n        \"80\": [0, 0.68611, 0.0992, 0, 0.78721],\n        \"81\": [0.19444, 0.68611, 0.09062, 0, 0.85499],\n        \"82\": [0, 0.68611, 0.02559, 0, 0.85944],\n        \"83\": [0, 0.68611, 0.11264, 0, 0.64999],\n        \"84\": [0, 0.68611, 0.12903, 0, 0.7961],\n        \"85\": [0, 0.68611, 0.17208, 0, 0.88083],\n        \"86\": [0, 0.68611, 0.18625, 0, 0.86555],\n        \"87\": [0, 0.68611, 0.18625, 0, 1.15999],\n        \"88\": [0, 0.68611, 0.15681, 0, 0.86555],\n        \"89\": [0, 0.68611, 0.19803, 0, 0.86555],\n        \"90\": [0, 0.68611, 0.14208, 0, 0.70888],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.35611],\n        \"93\": [0.25, 0.75, 0.09972, 0, 0.35611],\n        \"94\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"95\": [0.31, 0.13444, 0.09811, 0, 0.59111],\n        \"97\": [0, 0.44444, 0.09426, 0, 0.59111],\n        \"98\": [0, 0.69444, 0.07861, 0, 0.53222],\n        \"99\": [0, 0.44444, 0.05222, 0, 0.53222],\n        \"100\": [0, 0.69444, 0.10861, 0, 0.59111],\n        \"101\": [0, 0.44444, 0.085, 0, 0.53222],\n        \"102\": [0.19444, 0.69444, 0.21778, 0, 0.4],\n        \"103\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"104\": [0, 0.69444, 0.09426, 0, 0.59111],\n        \"105\": [0, 0.69326, 0.11387, 0, 0.35555],\n        \"106\": [0.19444, 0.69326, 0.1672, 0, 0.35555],\n        \"107\": [0, 0.69444, 0.11111, 0, 0.53222],\n        \"108\": [0, 0.69444, 0.10861, 0, 0.29666],\n        \"109\": [0, 0.44444, 0.09426, 0, 0.94444],\n        \"110\": [0, 0.44444, 0.09426, 0, 0.64999],\n        \"111\": [0, 0.44444, 0.07861, 0, 0.59111],\n        \"112\": [0.19444, 0.44444, 0.07861, 0, 0.59111],\n        \"113\": [0.19444, 0.44444, 0.105, 0, 0.53222],\n        \"114\": [0, 0.44444, 0.11111, 0, 0.50167],\n        \"115\": [0, 0.44444, 0.08167, 0, 0.48694],\n        \"116\": [0, 0.63492, 0.09639, 0, 0.385],\n        \"117\": [0, 0.44444, 0.09426, 0, 0.62055],\n        \"118\": [0, 0.44444, 0.11111, 0, 0.53222],\n        \"119\": [0, 0.44444, 0.11111, 0, 0.76777],\n        \"120\": [0, 0.44444, 0.12583, 0, 0.56055],\n        \"121\": [0.19444, 0.44444, 0.105, 0, 0.56166],\n        \"122\": [0, 0.44444, 0.13889, 0, 0.49055],\n        \"126\": [0.35, 0.34444, 0.11472, 0, 0.59111],\n        \"163\": [0, 0.69444, 0, 0, 0.86853],\n        \"168\": [0, 0.69444, 0.11473, 0, 0.59111],\n        \"176\": [0, 0.69444, 0, 0, 0.94888],\n        \"184\": [0.17014, 0, 0, 0, 0.53222],\n        \"198\": [0, 0.68611, 0.11431, 0, 1.02277],\n        \"216\": [0.04861, 0.73472, 0.09062, 0, 0.88555],\n        \"223\": [0.19444, 0.69444, 0.09736, 0, 0.665],\n        \"230\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"248\": [0.09722, 0.54167, 0.09458, 0, 0.59111],\n        \"305\": [0, 0.44444, 0.09426, 0, 0.35555],\n        \"338\": [0, 0.68611, 0.11431, 0, 1.14054],\n        \"339\": [0, 0.44444, 0.085, 0, 0.82666],\n        \"567\": [0.19444, 0.44444, 0.04611, 0, 0.385],\n        \"710\": [0, 0.69444, 0.06709, 0, 0.59111],\n        \"711\": [0, 0.63194, 0.08271, 0, 0.59111],\n        \"713\": [0, 0.59444, 0.10444, 0, 0.59111],\n        \"714\": [0, 0.69444, 0.08528, 0, 0.59111],\n        \"715\": [0, 0.69444, 0, 0, 0.59111],\n        \"728\": [0, 0.69444, 0.10333, 0, 0.59111],\n        \"729\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"730\": [0, 0.69444, 0, 0, 0.94888],\n        \"732\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"733\": [0, 0.69444, 0.11472, 0, 0.59111],\n        \"915\": [0, 0.68611, 0.12903, 0, 0.69777],\n        \"916\": [0, 0.68611, 0, 0, 0.94444],\n        \"920\": [0, 0.68611, 0.09062, 0, 0.88555],\n        \"923\": [0, 0.68611, 0, 0, 0.80666],\n        \"926\": [0, 0.68611, 0.15092, 0, 0.76777],\n        \"928\": [0, 0.68611, 0.17208, 0, 0.8961],\n        \"931\": [0, 0.68611, 0.11431, 0, 0.82666],\n        \"933\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"934\": [0, 0.68611, 0.05632, 0, 0.82666],\n        \"936\": [0, 0.68611, 0.10778, 0, 0.88555],\n        \"937\": [0, 0.68611, 0.0992, 0, 0.82666],\n        \"8211\": [0, 0.44444, 0.09811, 0, 0.59111],\n        \"8212\": [0, 0.44444, 0.09811, 0, 1.18221],\n        \"8216\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8217\": [0, 0.69444, 0.12945, 0, 0.35555],\n        \"8220\": [0, 0.69444, 0.16772, 0, 0.62055],\n        \"8221\": [0, 0.69444, 0.07939, 0, 0.62055]\n    },\n    \"Main-Italic\": {\n        \"33\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"34\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"35\": [0.19444, 0.69444, 0.06616, 0, 0.81777],\n        \"37\": [0.05556, 0.75, 0.13639, 0, 0.81777],\n        \"38\": [0, 0.69444, 0.09694, 0, 0.76666],\n        \"39\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"40\": [0.25, 0.75, 0.16194, 0, 0.40889],\n        \"41\": [0.25, 0.75, 0.03694, 0, 0.40889],\n        \"42\": [0, 0.75, 0.14917, 0, 0.51111],\n        \"43\": [0.05667, 0.56167, 0.03694, 0, 0.76666],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.30667],\n        \"45\": [0, 0.43056, 0.02826, 0, 0.35778],\n        \"46\": [0, 0.10556, 0, 0, 0.30667],\n        \"47\": [0.25, 0.75, 0.16194, 0, 0.51111],\n        \"48\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"49\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"50\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"51\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"52\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"53\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"54\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"55\": [0.19444, 0.64444, 0.13556, 0, 0.51111],\n        \"56\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"57\": [0, 0.64444, 0.13556, 0, 0.51111],\n        \"58\": [0, 0.43056, 0.0582, 0, 0.30667],\n        \"59\": [0.19444, 0.43056, 0.0582, 0, 0.30667],\n        \"61\": [-0.13313, 0.36687, 0.06616, 0, 0.76666],\n        \"63\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"64\": [0, 0.69444, 0.09597, 0, 0.76666],\n        \"65\": [0, 0.68333, 0, 0, 0.74333],\n        \"66\": [0, 0.68333, 0.10257, 0, 0.70389],\n        \"67\": [0, 0.68333, 0.14528, 0, 0.71555],\n        \"68\": [0, 0.68333, 0.09403, 0, 0.755],\n        \"69\": [0, 0.68333, 0.12028, 0, 0.67833],\n        \"70\": [0, 0.68333, 0.13305, 0, 0.65277],\n        \"71\": [0, 0.68333, 0.08722, 0, 0.77361],\n        \"72\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"73\": [0, 0.68333, 0.15806, 0, 0.38555],\n        \"74\": [0, 0.68333, 0.14028, 0, 0.525],\n        \"75\": [0, 0.68333, 0.14528, 0, 0.76888],\n        \"76\": [0, 0.68333, 0, 0, 0.62722],\n        \"77\": [0, 0.68333, 0.16389, 0, 0.89666],\n        \"78\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"79\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"80\": [0, 0.68333, 0.10257, 0, 0.67833],\n        \"81\": [0.19444, 0.68333, 0.09403, 0, 0.76666],\n        \"82\": [0, 0.68333, 0.03868, 0, 0.72944],\n        \"83\": [0, 0.68333, 0.11972, 0, 0.56222],\n        \"84\": [0, 0.68333, 0.13305, 0, 0.71555],\n        \"85\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"86\": [0, 0.68333, 0.18361, 0, 0.74333],\n        \"87\": [0, 0.68333, 0.18361, 0, 0.99888],\n        \"88\": [0, 0.68333, 0.15806, 0, 0.74333],\n        \"89\": [0, 0.68333, 0.19383, 0, 0.74333],\n        \"90\": [0, 0.68333, 0.14528, 0, 0.61333],\n        \"91\": [0.25, 0.75, 0.1875, 0, 0.30667],\n        \"93\": [0.25, 0.75, 0.10528, 0, 0.30667],\n        \"94\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"95\": [0.31, 0.12056, 0.09208, 0, 0.51111],\n        \"97\": [0, 0.43056, 0.07671, 0, 0.51111],\n        \"98\": [0, 0.69444, 0.06312, 0, 0.46],\n        \"99\": [0, 0.43056, 0.05653, 0, 0.46],\n        \"100\": [0, 0.69444, 0.10333, 0, 0.51111],\n        \"101\": [0, 0.43056, 0.07514, 0, 0.46],\n        \"102\": [0.19444, 0.69444, 0.21194, 0, 0.30667],\n        \"103\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"104\": [0, 0.69444, 0.07671, 0, 0.51111],\n        \"105\": [0, 0.65536, 0.1019, 0, 0.30667],\n        \"106\": [0.19444, 0.65536, 0.14467, 0, 0.30667],\n        \"107\": [0, 0.69444, 0.10764, 0, 0.46],\n        \"108\": [0, 0.69444, 0.10333, 0, 0.25555],\n        \"109\": [0, 0.43056, 0.07671, 0, 0.81777],\n        \"110\": [0, 0.43056, 0.07671, 0, 0.56222],\n        \"111\": [0, 0.43056, 0.06312, 0, 0.51111],\n        \"112\": [0.19444, 0.43056, 0.06312, 0, 0.51111],\n        \"113\": [0.19444, 0.43056, 0.08847, 0, 0.46],\n        \"114\": [0, 0.43056, 0.10764, 0, 0.42166],\n        \"115\": [0, 0.43056, 0.08208, 0, 0.40889],\n        \"116\": [0, 0.61508, 0.09486, 0, 0.33222],\n        \"117\": [0, 0.43056, 0.07671, 0, 0.53666],\n        \"118\": [0, 0.43056, 0.10764, 0, 0.46],\n        \"119\": [0, 0.43056, 0.10764, 0, 0.66444],\n        \"120\": [0, 0.43056, 0.12042, 0, 0.46389],\n        \"121\": [0.19444, 0.43056, 0.08847, 0, 0.48555],\n        \"122\": [0, 0.43056, 0.12292, 0, 0.40889],\n        \"126\": [0.35, 0.31786, 0.11585, 0, 0.51111],\n        \"163\": [0, 0.69444, 0, 0, 0.76909],\n        \"168\": [0, 0.66786, 0.10474, 0, 0.51111],\n        \"176\": [0, 0.69444, 0, 0, 0.83129],\n        \"184\": [0.17014, 0, 0, 0, 0.46],\n        \"198\": [0, 0.68333, 0.12028, 0, 0.88277],\n        \"216\": [0.04861, 0.73194, 0.09403, 0, 0.76666],\n        \"223\": [0.19444, 0.69444, 0.10514, 0, 0.53666],\n        \"230\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"248\": [0.09722, 0.52778, 0.09194, 0, 0.51111],\n        \"305\": [0, 0.43056, 0, 0.02778, 0.32246],\n        \"338\": [0, 0.68333, 0.12028, 0, 0.98499],\n        \"339\": [0, 0.43056, 0.07514, 0, 0.71555],\n        \"567\": [0.19444, 0.43056, 0, 0.08334, 0.38403],\n        \"710\": [0, 0.69444, 0.06646, 0, 0.51111],\n        \"711\": [0, 0.62847, 0.08295, 0, 0.51111],\n        \"713\": [0, 0.56167, 0.10333, 0, 0.51111],\n        \"714\": [0, 0.69444, 0.09694, 0, 0.51111],\n        \"715\": [0, 0.69444, 0, 0, 0.51111],\n        \"728\": [0, 0.69444, 0.10806, 0, 0.51111],\n        \"729\": [0, 0.66786, 0.11752, 0, 0.30667],\n        \"730\": [0, 0.69444, 0, 0, 0.83129],\n        \"732\": [0, 0.66786, 0.11585, 0, 0.51111],\n        \"733\": [0, 0.69444, 0.1225, 0, 0.51111],\n        \"915\": [0, 0.68333, 0.13305, 0, 0.62722],\n        \"916\": [0, 0.68333, 0, 0, 0.81777],\n        \"920\": [0, 0.68333, 0.09403, 0, 0.76666],\n        \"923\": [0, 0.68333, 0, 0, 0.69222],\n        \"926\": [0, 0.68333, 0.15294, 0, 0.66444],\n        \"928\": [0, 0.68333, 0.16389, 0, 0.74333],\n        \"931\": [0, 0.68333, 0.12028, 0, 0.71555],\n        \"933\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"934\": [0, 0.68333, 0.05986, 0, 0.71555],\n        \"936\": [0, 0.68333, 0.11111, 0, 0.76666],\n        \"937\": [0, 0.68333, 0.10257, 0, 0.71555],\n        \"8211\": [0, 0.43056, 0.09208, 0, 0.51111],\n        \"8212\": [0, 0.43056, 0.09208, 0, 1.02222],\n        \"8216\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8217\": [0, 0.69444, 0.12417, 0, 0.30667],\n        \"8220\": [0, 0.69444, 0.1685, 0, 0.51444],\n        \"8221\": [0, 0.69444, 0.06961, 0, 0.51444],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028]\n    },\n    \"Main-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.25],\n        \"33\": [0, 0.69444, 0, 0, 0.27778],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.77778],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.19444, 0.10556, 0, 0, 0.27778],\n        \"45\": [0, 0.43056, 0, 0, 0.33333],\n        \"46\": [0, 0.10556, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.64444, 0, 0, 0.5],\n        \"49\": [0, 0.64444, 0, 0, 0.5],\n        \"50\": [0, 0.64444, 0, 0, 0.5],\n        \"51\": [0, 0.64444, 0, 0, 0.5],\n        \"52\": [0, 0.64444, 0, 0, 0.5],\n        \"53\": [0, 0.64444, 0, 0, 0.5],\n        \"54\": [0, 0.64444, 0, 0, 0.5],\n        \"55\": [0, 0.64444, 0, 0, 0.5],\n        \"56\": [0, 0.64444, 0, 0, 0.5],\n        \"57\": [0, 0.64444, 0, 0, 0.5],\n        \"58\": [0, 0.43056, 0, 0, 0.27778],\n        \"59\": [0.19444, 0.43056, 0, 0, 0.27778],\n        \"60\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"61\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"62\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.77778],\n        \"65\": [0, 0.68333, 0, 0, 0.75],\n        \"66\": [0, 0.68333, 0, 0, 0.70834],\n        \"67\": [0, 0.68333, 0, 0, 0.72222],\n        \"68\": [0, 0.68333, 0, 0, 0.76389],\n        \"69\": [0, 0.68333, 0, 0, 0.68056],\n        \"70\": [0, 0.68333, 0, 0, 0.65278],\n        \"71\": [0, 0.68333, 0, 0, 0.78472],\n        \"72\": [0, 0.68333, 0, 0, 0.75],\n        \"73\": [0, 0.68333, 0, 0, 0.36111],\n        \"74\": [0, 0.68333, 0, 0, 0.51389],\n        \"75\": [0, 0.68333, 0, 0, 0.77778],\n        \"76\": [0, 0.68333, 0, 0, 0.625],\n        \"77\": [0, 0.68333, 0, 0, 0.91667],\n        \"78\": [0, 0.68333, 0, 0, 0.75],\n        \"79\": [0, 0.68333, 0, 0, 0.77778],\n        \"80\": [0, 0.68333, 0, 0, 0.68056],\n        \"81\": [0.19444, 0.68333, 0, 0, 0.77778],\n        \"82\": [0, 0.68333, 0, 0, 0.73611],\n        \"83\": [0, 0.68333, 0, 0, 0.55556],\n        \"84\": [0, 0.68333, 0, 0, 0.72222],\n        \"85\": [0, 0.68333, 0, 0, 0.75],\n        \"86\": [0, 0.68333, 0.01389, 0, 0.75],\n        \"87\": [0, 0.68333, 0.01389, 0, 1.02778],\n        \"88\": [0, 0.68333, 0, 0, 0.75],\n        \"89\": [0, 0.68333, 0.025, 0, 0.75],\n        \"90\": [0, 0.68333, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.27778],\n        \"92\": [0.25, 0.75, 0, 0, 0.5],\n        \"93\": [0.25, 0.75, 0, 0, 0.27778],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.31, 0.12056, 0.02778, 0, 0.5],\n        \"97\": [0, 0.43056, 0, 0, 0.5],\n        \"98\": [0, 0.69444, 0, 0, 0.55556],\n        \"99\": [0, 0.43056, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.55556],\n        \"101\": [0, 0.43056, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.07778, 0, 0.30556],\n        \"103\": [0.19444, 0.43056, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.55556],\n        \"105\": [0, 0.66786, 0, 0, 0.27778],\n        \"106\": [0.19444, 0.66786, 0, 0, 0.30556],\n        \"107\": [0, 0.69444, 0, 0, 0.52778],\n        \"108\": [0, 0.69444, 0, 0, 0.27778],\n        \"109\": [0, 0.43056, 0, 0, 0.83334],\n        \"110\": [0, 0.43056, 0, 0, 0.55556],\n        \"111\": [0, 0.43056, 0, 0, 0.5],\n        \"112\": [0.19444, 0.43056, 0, 0, 0.55556],\n        \"113\": [0.19444, 0.43056, 0, 0, 0.52778],\n        \"114\": [0, 0.43056, 0, 0, 0.39167],\n        \"115\": [0, 0.43056, 0, 0, 0.39445],\n        \"116\": [0, 0.61508, 0, 0, 0.38889],\n        \"117\": [0, 0.43056, 0, 0, 0.55556],\n        \"118\": [0, 0.43056, 0.01389, 0, 0.52778],\n        \"119\": [0, 0.43056, 0.01389, 0, 0.72222],\n        \"120\": [0, 0.43056, 0, 0, 0.52778],\n        \"121\": [0.19444, 0.43056, 0.01389, 0, 0.52778],\n        \"122\": [0, 0.43056, 0, 0, 0.44445],\n        \"123\": [0.25, 0.75, 0, 0, 0.5],\n        \"124\": [0.25, 0.75, 0, 0, 0.27778],\n        \"125\": [0.25, 0.75, 0, 0, 0.5],\n        \"126\": [0.35, 0.31786, 0, 0, 0.5],\n        \"160\": [0, 0, 0, 0, 0.25],\n        \"167\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"168\": [0, 0.66786, 0, 0, 0.5],\n        \"172\": [0, 0.43056, 0, 0, 0.66667],\n        \"176\": [0, 0.69444, 0, 0, 0.75],\n        \"177\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"182\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"198\": [0, 0.68333, 0, 0, 0.90278],\n        \"215\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"216\": [0.04861, 0.73194, 0, 0, 0.77778],\n        \"223\": [0, 0.69444, 0, 0, 0.5],\n        \"230\": [0, 0.43056, 0, 0, 0.72222],\n        \"247\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"248\": [0.09722, 0.52778, 0, 0, 0.5],\n        \"305\": [0, 0.43056, 0, 0, 0.27778],\n        \"338\": [0, 0.68333, 0, 0, 1.01389],\n        \"339\": [0, 0.43056, 0, 0, 0.77778],\n        \"567\": [0.19444, 0.43056, 0, 0, 0.30556],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.62847, 0, 0, 0.5],\n        \"713\": [0, 0.56778, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.66786, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.75],\n        \"732\": [0, 0.66786, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"824\": [0.19444, 0.69444, 0, 0, 0],\n        \"915\": [0, 0.68333, 0, 0, 0.625],\n        \"916\": [0, 0.68333, 0, 0, 0.83334],\n        \"920\": [0, 0.68333, 0, 0, 0.77778],\n        \"923\": [0, 0.68333, 0, 0, 0.69445],\n        \"926\": [0, 0.68333, 0, 0, 0.66667],\n        \"928\": [0, 0.68333, 0, 0, 0.75],\n        \"931\": [0, 0.68333, 0, 0, 0.72222],\n        \"933\": [0, 0.68333, 0, 0, 0.77778],\n        \"934\": [0, 0.68333, 0, 0, 0.72222],\n        \"936\": [0, 0.68333, 0, 0, 0.77778],\n        \"937\": [0, 0.68333, 0, 0, 0.72222],\n        \"8211\": [0, 0.43056, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.43056, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5],\n        \"8224\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8225\": [0.19444, 0.69444, 0, 0, 0.44445],\n        \"8230\": [0, 0.12, 0, 0, 1.172],\n        \"8242\": [0, 0.55556, 0, 0, 0.275],\n        \"8407\": [0, 0.71444, 0.15382, 0, 0.5],\n        \"8463\": [0, 0.68889, 0, 0, 0.54028],\n        \"8465\": [0, 0.69444, 0, 0, 0.72222],\n        \"8467\": [0, 0.69444, 0, 0.11111, 0.41667],\n        \"8472\": [0.19444, 0.43056, 0, 0.11111, 0.63646],\n        \"8476\": [0, 0.69444, 0, 0, 0.72222],\n        \"8501\": [0, 0.69444, 0, 0, 0.61111],\n        \"8592\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8593\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8594\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8595\": [0.19444, 0.69444, 0, 0, 0.5],\n        \"8596\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8597\": [0.25, 0.75, 0, 0, 0.5],\n        \"8598\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8599\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8600\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8601\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"8614\": [0.011, 0.511, 0, 0, 1.0],\n        \"8617\": [0.011, 0.511, 0, 0, 1.126],\n        \"8618\": [0.011, 0.511, 0, 0, 1.126],\n        \"8636\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8637\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8640\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8641\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8652\": [0.011, 0.671, 0, 0, 1.0],\n        \"8656\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8657\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8658\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8659\": [0.19444, 0.69444, 0, 0, 0.61111],\n        \"8660\": [-0.13313, 0.36687, 0, 0, 1.0],\n        \"8661\": [0.25, 0.75, 0, 0, 0.61111],\n        \"8704\": [0, 0.69444, 0, 0, 0.55556],\n        \"8706\": [0, 0.69444, 0.05556, 0.08334, 0.5309],\n        \"8707\": [0, 0.69444, 0, 0, 0.55556],\n        \"8709\": [0.05556, 0.75, 0, 0, 0.5],\n        \"8711\": [0, 0.68333, 0, 0, 0.83334],\n        \"8712\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8715\": [0.0391, 0.5391, 0, 0, 0.66667],\n        \"8722\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8723\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8725\": [0.25, 0.75, 0, 0, 0.5],\n        \"8726\": [0.25, 0.75, 0, 0, 0.5],\n        \"8727\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8728\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8729\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8730\": [0.2, 0.8, 0, 0, 0.83334],\n        \"8733\": [0, 0.43056, 0, 0, 0.77778],\n        \"8734\": [0, 0.43056, 0, 0, 1.0],\n        \"8736\": [0, 0.69224, 0, 0, 0.72222],\n        \"8739\": [0.25, 0.75, 0, 0, 0.27778],\n        \"8741\": [0.25, 0.75, 0, 0, 0.5],\n        \"8743\": [0, 0.55556, 0, 0, 0.66667],\n        \"8744\": [0, 0.55556, 0, 0, 0.66667],\n        \"8745\": [0, 0.55556, 0, 0, 0.66667],\n        \"8746\": [0, 0.55556, 0, 0, 0.66667],\n        \"8747\": [0.19444, 0.69444, 0.11111, 0, 0.41667],\n        \"8764\": [-0.13313, 0.36687, 0, 0, 0.77778],\n        \"8768\": [0.19444, 0.69444, 0, 0, 0.27778],\n        \"8771\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8773\": [-0.022, 0.589, 0, 0, 1.0],\n        \"8776\": [-0.01688, 0.48312, 0, 0, 0.77778],\n        \"8781\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8784\": [-0.133, 0.67, 0, 0, 0.778],\n        \"8800\": [0.215, 0.716, 0, 0, 0.778],\n        \"8801\": [-0.03625, 0.46375, 0, 0, 0.77778],\n        \"8804\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8805\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8810\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8811\": [0.0391, 0.5391, 0, 0, 1.0],\n        \"8826\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8827\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8834\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8835\": [0.0391, 0.5391, 0, 0, 0.77778],\n        \"8838\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8839\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8846\": [0, 0.55556, 0, 0, 0.66667],\n        \"8849\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8850\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"8851\": [0, 0.55556, 0, 0, 0.66667],\n        \"8852\": [0, 0.55556, 0, 0, 0.66667],\n        \"8853\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8854\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8855\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8856\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8857\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"8866\": [0, 0.69444, 0, 0, 0.61111],\n        \"8867\": [0, 0.69444, 0, 0, 0.61111],\n        \"8868\": [0, 0.69444, 0, 0, 0.77778],\n        \"8869\": [0, 0.69444, 0, 0, 0.77778],\n        \"8872\": [0.249, 0.75, 0, 0, 0.867],\n        \"8900\": [-0.05555, 0.44445, 0, 0, 0.5],\n        \"8901\": [-0.05555, 0.44445, 0, 0, 0.27778],\n        \"8902\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"8904\": [0.005, 0.505, 0, 0, 0.9],\n        \"8942\": [0.03, 0.9, 0, 0, 0.278],\n        \"8943\": [-0.19, 0.31, 0, 0, 1.172],\n        \"8945\": [-0.1, 0.82, 0, 0, 1.282],\n        \"8968\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8969\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8970\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8971\": [0.25, 0.75, 0, 0, 0.44445],\n        \"8994\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"8995\": [-0.14236, 0.35764, 0, 0, 1.0],\n        \"9136\": [0.244, 0.744, 0, 0, 0.412],\n        \"9137\": [0.244, 0.744, 0, 0, 0.412],\n        \"9651\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9657\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9661\": [0.19444, 0.69444, 0, 0, 0.88889],\n        \"9667\": [-0.03472, 0.46528, 0, 0, 0.5],\n        \"9711\": [0.19444, 0.69444, 0, 0, 1.0],\n        \"9824\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9825\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9826\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9827\": [0.12963, 0.69444, 0, 0, 0.77778],\n        \"9837\": [0, 0.75, 0, 0, 0.38889],\n        \"9838\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"9839\": [0.19444, 0.69444, 0, 0, 0.38889],\n        \"10216\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10217\": [0.25, 0.75, 0, 0, 0.38889],\n        \"10222\": [0.244, 0.744, 0, 0, 0.412],\n        \"10223\": [0.244, 0.744, 0, 0, 0.412],\n        \"10229\": [0.011, 0.511, 0, 0, 1.609],\n        \"10230\": [0.011, 0.511, 0, 0, 1.638],\n        \"10231\": [0.011, 0.511, 0, 0, 1.859],\n        \"10232\": [0.024, 0.525, 0, 0, 1.609],\n        \"10233\": [0.024, 0.525, 0, 0, 1.638],\n        \"10234\": [0.024, 0.525, 0, 0, 1.858],\n        \"10236\": [0.011, 0.511, 0, 0, 1.638],\n        \"10815\": [0, 0.68333, 0, 0, 0.75],\n        \"10927\": [0.13597, 0.63597, 0, 0, 0.77778],\n        \"10928\": [0.13597, 0.63597, 0, 0, 0.77778]\n    },\n    \"Math-BoldItalic\": {\n        \"47\": [0.19444, 0.69444, 0, 0, 0],\n        \"65\": [0, 0.68611, 0, 0, 0.86944],\n        \"66\": [0, 0.68611, 0.04835, 0, 0.8664],\n        \"67\": [0, 0.68611, 0.06979, 0, 0.81694],\n        \"68\": [0, 0.68611, 0.03194, 0, 0.93812],\n        \"69\": [0, 0.68611, 0.05451, 0, 0.81007],\n        \"70\": [0, 0.68611, 0.15972, 0, 0.68889],\n        \"71\": [0, 0.68611, 0, 0, 0.88673],\n        \"72\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"73\": [0, 0.68611, 0.07778, 0, 0.51111],\n        \"74\": [0, 0.68611, 0.10069, 0, 0.63125],\n        \"75\": [0, 0.68611, 0.06979, 0, 0.97118],\n        \"76\": [0, 0.68611, 0, 0, 0.75555],\n        \"77\": [0, 0.68611, 0.11424, 0, 1.14201],\n        \"78\": [0, 0.68611, 0.11424, 0, 0.95034],\n        \"79\": [0, 0.68611, 0.03194, 0, 0.83666],\n        \"80\": [0, 0.68611, 0.15972, 0, 0.72309],\n        \"81\": [0.19444, 0.68611, 0, 0, 0.86861],\n        \"82\": [0, 0.68611, 0.00421, 0, 0.87235],\n        \"83\": [0, 0.68611, 0.05382, 0, 0.69271],\n        \"84\": [0, 0.68611, 0.15972, 0, 0.63663],\n        \"85\": [0, 0.68611, 0.11424, 0, 0.80027],\n        \"86\": [0, 0.68611, 0.25555, 0, 0.67778],\n        \"87\": [0, 0.68611, 0.15972, 0, 1.09305],\n        \"88\": [0, 0.68611, 0.07778, 0, 0.94722],\n        \"89\": [0, 0.68611, 0.25555, 0, 0.67458],\n        \"90\": [0, 0.68611, 0.06979, 0, 0.77257],\n        \"97\": [0, 0.44444, 0, 0, 0.63287],\n        \"98\": [0, 0.69444, 0, 0, 0.52083],\n        \"99\": [0, 0.44444, 0, 0, 0.51342],\n        \"100\": [0, 0.69444, 0, 0, 0.60972],\n        \"101\": [0, 0.44444, 0, 0, 0.55361],\n        \"102\": [0.19444, 0.69444, 0.11042, 0, 0.56806],\n        \"103\": [0.19444, 0.44444, 0.03704, 0, 0.5449],\n        \"104\": [0, 0.69444, 0, 0, 0.66759],\n        \"105\": [0, 0.69326, 0, 0, 0.4048],\n        \"106\": [0.19444, 0.69326, 0.0622, 0, 0.47083],\n        \"107\": [0, 0.69444, 0.01852, 0, 0.6037],\n        \"108\": [0, 0.69444, 0.0088, 0, 0.34815],\n        \"109\": [0, 0.44444, 0, 0, 1.0324],\n        \"110\": [0, 0.44444, 0, 0, 0.71296],\n        \"111\": [0, 0.44444, 0, 0, 0.58472],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.60092],\n        \"113\": [0.19444, 0.44444, 0.03704, 0, 0.54213],\n        \"114\": [0, 0.44444, 0.03194, 0, 0.5287],\n        \"115\": [0, 0.44444, 0, 0, 0.53125],\n        \"116\": [0, 0.63492, 0, 0, 0.41528],\n        \"117\": [0, 0.44444, 0, 0, 0.68102],\n        \"118\": [0, 0.44444, 0.03704, 0, 0.56666],\n        \"119\": [0, 0.44444, 0.02778, 0, 0.83148],\n        \"120\": [0, 0.44444, 0, 0, 0.65903],\n        \"121\": [0.19444, 0.44444, 0.03704, 0, 0.59028],\n        \"122\": [0, 0.44444, 0.04213, 0, 0.55509],\n        \"915\": [0, 0.68611, 0.15972, 0, 0.65694],\n        \"916\": [0, 0.68611, 0, 0, 0.95833],\n        \"920\": [0, 0.68611, 0.03194, 0, 0.86722],\n        \"923\": [0, 0.68611, 0, 0, 0.80555],\n        \"926\": [0, 0.68611, 0.07458, 0, 0.84125],\n        \"928\": [0, 0.68611, 0.08229, 0, 0.98229],\n        \"931\": [0, 0.68611, 0.05451, 0, 0.88507],\n        \"933\": [0, 0.68611, 0.15972, 0, 0.67083],\n        \"934\": [0, 0.68611, 0, 0, 0.76666],\n        \"936\": [0, 0.68611, 0.11653, 0, 0.71402],\n        \"937\": [0, 0.68611, 0.04835, 0, 0.8789],\n        \"945\": [0, 0.44444, 0, 0, 0.76064],\n        \"946\": [0.19444, 0.69444, 0.03403, 0, 0.65972],\n        \"947\": [0.19444, 0.44444, 0.06389, 0, 0.59003],\n        \"948\": [0, 0.69444, 0.03819, 0, 0.52222],\n        \"949\": [0, 0.44444, 0, 0, 0.52882],\n        \"950\": [0.19444, 0.69444, 0.06215, 0, 0.50833],\n        \"951\": [0.19444, 0.44444, 0.03704, 0, 0.6],\n        \"952\": [0, 0.69444, 0.03194, 0, 0.5618],\n        \"953\": [0, 0.44444, 0, 0, 0.41204],\n        \"954\": [0, 0.44444, 0, 0, 0.66759],\n        \"955\": [0, 0.69444, 0, 0, 0.67083],\n        \"956\": [0.19444, 0.44444, 0, 0, 0.70787],\n        \"957\": [0, 0.44444, 0.06898, 0, 0.57685],\n        \"958\": [0.19444, 0.69444, 0.03021, 0, 0.50833],\n        \"959\": [0, 0.44444, 0, 0, 0.58472],\n        \"960\": [0, 0.44444, 0.03704, 0, 0.68241],\n        \"961\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"962\": [0.09722, 0.44444, 0.07917, 0, 0.42361],\n        \"963\": [0, 0.44444, 0.03704, 0, 0.68588],\n        \"964\": [0, 0.44444, 0.13472, 0, 0.52083],\n        \"965\": [0, 0.44444, 0.03704, 0, 0.63055],\n        \"966\": [0.19444, 0.44444, 0, 0, 0.74722],\n        \"967\": [0.19444, 0.44444, 0, 0, 0.71805],\n        \"968\": [0.19444, 0.69444, 0.03704, 0, 0.75833],\n        \"969\": [0, 0.44444, 0.03704, 0, 0.71782],\n        \"977\": [0, 0.69444, 0, 0, 0.69155],\n        \"981\": [0.19444, 0.69444, 0, 0, 0.7125],\n        \"982\": [0, 0.44444, 0.03194, 0, 0.975],\n        \"1009\": [0.19444, 0.44444, 0, 0, 0.6118],\n        \"1013\": [0, 0.44444, 0, 0, 0.48333]\n    },\n    \"Math-Italic\": {\n        \"47\": [0.19444, 0.69444, 0, 0, 0],\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n    },\n    \"Math-Regular\": {\n        \"65\": [0, 0.68333, 0, 0.13889, 0.75],\n        \"66\": [0, 0.68333, 0.05017, 0.08334, 0.75851],\n        \"67\": [0, 0.68333, 0.07153, 0.08334, 0.71472],\n        \"68\": [0, 0.68333, 0.02778, 0.05556, 0.82792],\n        \"69\": [0, 0.68333, 0.05764, 0.08334, 0.7382],\n        \"70\": [0, 0.68333, 0.13889, 0.08334, 0.64306],\n        \"71\": [0, 0.68333, 0, 0.08334, 0.78625],\n        \"72\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"73\": [0, 0.68333, 0.07847, 0.11111, 0.43958],\n        \"74\": [0, 0.68333, 0.09618, 0.16667, 0.55451],\n        \"75\": [0, 0.68333, 0.07153, 0.05556, 0.84931],\n        \"76\": [0, 0.68333, 0, 0.02778, 0.68056],\n        \"77\": [0, 0.68333, 0.10903, 0.08334, 0.97014],\n        \"78\": [0, 0.68333, 0.10903, 0.08334, 0.80347],\n        \"79\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"80\": [0, 0.68333, 0.13889, 0.08334, 0.64201],\n        \"81\": [0.19444, 0.68333, 0, 0.08334, 0.79056],\n        \"82\": [0, 0.68333, 0.00773, 0.08334, 0.75929],\n        \"83\": [0, 0.68333, 0.05764, 0.08334, 0.6132],\n        \"84\": [0, 0.68333, 0.13889, 0.08334, 0.58438],\n        \"85\": [0, 0.68333, 0.10903, 0.02778, 0.68278],\n        \"86\": [0, 0.68333, 0.22222, 0, 0.58333],\n        \"87\": [0, 0.68333, 0.13889, 0, 0.94445],\n        \"88\": [0, 0.68333, 0.07847, 0.08334, 0.82847],\n        \"89\": [0, 0.68333, 0.22222, 0, 0.58056],\n        \"90\": [0, 0.68333, 0.07153, 0.08334, 0.68264],\n        \"97\": [0, 0.43056, 0, 0, 0.52859],\n        \"98\": [0, 0.69444, 0, 0, 0.42917],\n        \"99\": [0, 0.43056, 0, 0.05556, 0.43276],\n        \"100\": [0, 0.69444, 0, 0.16667, 0.52049],\n        \"101\": [0, 0.43056, 0, 0.05556, 0.46563],\n        \"102\": [0.19444, 0.69444, 0.10764, 0.16667, 0.48959],\n        \"103\": [0.19444, 0.43056, 0.03588, 0.02778, 0.47697],\n        \"104\": [0, 0.69444, 0, 0, 0.57616],\n        \"105\": [0, 0.65952, 0, 0, 0.34451],\n        \"106\": [0.19444, 0.65952, 0.05724, 0, 0.41181],\n        \"107\": [0, 0.69444, 0.03148, 0, 0.5206],\n        \"108\": [0, 0.69444, 0.01968, 0.08334, 0.29838],\n        \"109\": [0, 0.43056, 0, 0, 0.87801],\n        \"110\": [0, 0.43056, 0, 0, 0.60023],\n        \"111\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"112\": [0.19444, 0.43056, 0, 0.08334, 0.50313],\n        \"113\": [0.19444, 0.43056, 0.03588, 0.08334, 0.44641],\n        \"114\": [0, 0.43056, 0.02778, 0.05556, 0.45116],\n        \"115\": [0, 0.43056, 0, 0.05556, 0.46875],\n        \"116\": [0, 0.61508, 0, 0.08334, 0.36111],\n        \"117\": [0, 0.43056, 0, 0.02778, 0.57246],\n        \"118\": [0, 0.43056, 0.03588, 0.02778, 0.48472],\n        \"119\": [0, 0.43056, 0.02691, 0.08334, 0.71592],\n        \"120\": [0, 0.43056, 0, 0.02778, 0.57153],\n        \"121\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49028],\n        \"122\": [0, 0.43056, 0.04398, 0.05556, 0.46505],\n        \"915\": [0, 0.68333, 0.13889, 0.08334, 0.61528],\n        \"916\": [0, 0.68333, 0, 0.16667, 0.83334],\n        \"920\": [0, 0.68333, 0.02778, 0.08334, 0.76278],\n        \"923\": [0, 0.68333, 0, 0.16667, 0.69445],\n        \"926\": [0, 0.68333, 0.07569, 0.08334, 0.74236],\n        \"928\": [0, 0.68333, 0.08125, 0.05556, 0.83125],\n        \"931\": [0, 0.68333, 0.05764, 0.08334, 0.77986],\n        \"933\": [0, 0.68333, 0.13889, 0.05556, 0.58333],\n        \"934\": [0, 0.68333, 0, 0.08334, 0.66667],\n        \"936\": [0, 0.68333, 0.11, 0.05556, 0.61222],\n        \"937\": [0, 0.68333, 0.05017, 0.08334, 0.7724],\n        \"945\": [0, 0.43056, 0.0037, 0.02778, 0.6397],\n        \"946\": [0.19444, 0.69444, 0.05278, 0.08334, 0.56563],\n        \"947\": [0.19444, 0.43056, 0.05556, 0, 0.51773],\n        \"948\": [0, 0.69444, 0.03785, 0.05556, 0.44444],\n        \"949\": [0, 0.43056, 0, 0.08334, 0.46632],\n        \"950\": [0.19444, 0.69444, 0.07378, 0.08334, 0.4375],\n        \"951\": [0.19444, 0.43056, 0.03588, 0.05556, 0.49653],\n        \"952\": [0, 0.69444, 0.02778, 0.08334, 0.46944],\n        \"953\": [0, 0.43056, 0, 0.05556, 0.35394],\n        \"954\": [0, 0.43056, 0, 0, 0.57616],\n        \"955\": [0, 0.69444, 0, 0, 0.58334],\n        \"956\": [0.19444, 0.43056, 0, 0.02778, 0.60255],\n        \"957\": [0, 0.43056, 0.06366, 0.02778, 0.49398],\n        \"958\": [0.19444, 0.69444, 0.04601, 0.11111, 0.4375],\n        \"959\": [0, 0.43056, 0, 0.05556, 0.48472],\n        \"960\": [0, 0.43056, 0.03588, 0, 0.57003],\n        \"961\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"962\": [0.09722, 0.43056, 0.07986, 0.08334, 0.36285],\n        \"963\": [0, 0.43056, 0.03588, 0, 0.57141],\n        \"964\": [0, 0.43056, 0.1132, 0.02778, 0.43715],\n        \"965\": [0, 0.43056, 0.03588, 0.02778, 0.54028],\n        \"966\": [0.19444, 0.43056, 0, 0.08334, 0.65417],\n        \"967\": [0.19444, 0.43056, 0, 0.05556, 0.62569],\n        \"968\": [0.19444, 0.69444, 0.03588, 0.11111, 0.65139],\n        \"969\": [0, 0.43056, 0.03588, 0, 0.62245],\n        \"977\": [0, 0.69444, 0, 0.08334, 0.59144],\n        \"981\": [0.19444, 0.69444, 0, 0.08334, 0.59583],\n        \"982\": [0, 0.43056, 0.02778, 0, 0.82813],\n        \"1009\": [0.19444, 0.43056, 0, 0.08334, 0.51702],\n        \"1013\": [0, 0.43056, 0, 0.05556, 0.4059]\n    },\n    \"SansSerif-Bold\": {\n        \"33\": [0, 0.69444, 0, 0, 0.36667],\n        \"34\": [0, 0.69444, 0, 0, 0.55834],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.91667],\n        \"36\": [0.05556, 0.75, 0, 0, 0.55],\n        \"37\": [0.05556, 0.75, 0, 0, 1.02912],\n        \"38\": [0, 0.69444, 0, 0, 0.83056],\n        \"39\": [0, 0.69444, 0, 0, 0.30556],\n        \"40\": [0.25, 0.75, 0, 0, 0.42778],\n        \"41\": [0.25, 0.75, 0, 0, 0.42778],\n        \"42\": [0, 0.75, 0, 0, 0.55],\n        \"43\": [0.11667, 0.61667, 0, 0, 0.85556],\n        \"44\": [0.10556, 0.13056, 0, 0, 0.30556],\n        \"45\": [0, 0.45833, 0, 0, 0.36667],\n        \"46\": [0, 0.13056, 0, 0, 0.30556],\n        \"47\": [0.25, 0.75, 0, 0, 0.55],\n        \"48\": [0, 0.69444, 0, 0, 0.55],\n        \"49\": [0, 0.69444, 0, 0, 0.55],\n        \"50\": [0, 0.69444, 0, 0, 0.55],\n        \"51\": [0, 0.69444, 0, 0, 0.55],\n        \"52\": [0, 0.69444, 0, 0, 0.55],\n        \"53\": [0, 0.69444, 0, 0, 0.55],\n        \"54\": [0, 0.69444, 0, 0, 0.55],\n        \"55\": [0, 0.69444, 0, 0, 0.55],\n        \"56\": [0, 0.69444, 0, 0, 0.55],\n        \"57\": [0, 0.69444, 0, 0, 0.55],\n        \"58\": [0, 0.45833, 0, 0, 0.30556],\n        \"59\": [0.10556, 0.45833, 0, 0, 0.30556],\n        \"61\": [-0.09375, 0.40625, 0, 0, 0.85556],\n        \"63\": [0, 0.69444, 0, 0, 0.51945],\n        \"64\": [0, 0.69444, 0, 0, 0.73334],\n        \"65\": [0, 0.69444, 0, 0, 0.73334],\n        \"66\": [0, 0.69444, 0, 0, 0.73334],\n        \"67\": [0, 0.69444, 0, 0, 0.70278],\n        \"68\": [0, 0.69444, 0, 0, 0.79445],\n        \"69\": [0, 0.69444, 0, 0, 0.64167],\n        \"70\": [0, 0.69444, 0, 0, 0.61111],\n        \"71\": [0, 0.69444, 0, 0, 0.73334],\n        \"72\": [0, 0.69444, 0, 0, 0.79445],\n        \"73\": [0, 0.69444, 0, 0, 0.33056],\n        \"74\": [0, 0.69444, 0, 0, 0.51945],\n        \"75\": [0, 0.69444, 0, 0, 0.76389],\n        \"76\": [0, 0.69444, 0, 0, 0.58056],\n        \"77\": [0, 0.69444, 0, 0, 0.97778],\n        \"78\": [0, 0.69444, 0, 0, 0.79445],\n        \"79\": [0, 0.69444, 0, 0, 0.79445],\n        \"80\": [0, 0.69444, 0, 0, 0.70278],\n        \"81\": [0.10556, 0.69444, 0, 0, 0.79445],\n        \"82\": [0, 0.69444, 0, 0, 0.70278],\n        \"83\": [0, 0.69444, 0, 0, 0.61111],\n        \"84\": [0, 0.69444, 0, 0, 0.73334],\n        \"85\": [0, 0.69444, 0, 0, 0.76389],\n        \"86\": [0, 0.69444, 0.01528, 0, 0.73334],\n        \"87\": [0, 0.69444, 0.01528, 0, 1.03889],\n        \"88\": [0, 0.69444, 0, 0, 0.73334],\n        \"89\": [0, 0.69444, 0.0275, 0, 0.73334],\n        \"90\": [0, 0.69444, 0, 0, 0.67223],\n        \"91\": [0.25, 0.75, 0, 0, 0.34306],\n        \"93\": [0.25, 0.75, 0, 0, 0.34306],\n        \"94\": [0, 0.69444, 0, 0, 0.55],\n        \"95\": [0.35, 0.10833, 0.03056, 0, 0.55],\n        \"97\": [0, 0.45833, 0, 0, 0.525],\n        \"98\": [0, 0.69444, 0, 0, 0.56111],\n        \"99\": [0, 0.45833, 0, 0, 0.48889],\n        \"100\": [0, 0.69444, 0, 0, 0.56111],\n        \"101\": [0, 0.45833, 0, 0, 0.51111],\n        \"102\": [0, 0.69444, 0.07639, 0, 0.33611],\n        \"103\": [0.19444, 0.45833, 0.01528, 0, 0.55],\n        \"104\": [0, 0.69444, 0, 0, 0.56111],\n        \"105\": [0, 0.69444, 0, 0, 0.25556],\n        \"106\": [0.19444, 0.69444, 0, 0, 0.28611],\n        \"107\": [0, 0.69444, 0, 0, 0.53056],\n        \"108\": [0, 0.69444, 0, 0, 0.25556],\n        \"109\": [0, 0.45833, 0, 0, 0.86667],\n        \"110\": [0, 0.45833, 0, 0, 0.56111],\n        \"111\": [0, 0.45833, 0, 0, 0.55],\n        \"112\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"113\": [0.19444, 0.45833, 0, 0, 0.56111],\n        \"114\": [0, 0.45833, 0.01528, 0, 0.37222],\n        \"115\": [0, 0.45833, 0, 0, 0.42167],\n        \"116\": [0, 0.58929, 0, 0, 0.40417],\n        \"117\": [0, 0.45833, 0, 0, 0.56111],\n        \"118\": [0, 0.45833, 0.01528, 0, 0.5],\n        \"119\": [0, 0.45833, 0.01528, 0, 0.74445],\n        \"120\": [0, 0.45833, 0, 0, 0.5],\n        \"121\": [0.19444, 0.45833, 0.01528, 0, 0.5],\n        \"122\": [0, 0.45833, 0, 0, 0.47639],\n        \"126\": [0.35, 0.34444, 0, 0, 0.55],\n        \"168\": [0, 0.69444, 0, 0, 0.55],\n        \"176\": [0, 0.69444, 0, 0, 0.73334],\n        \"180\": [0, 0.69444, 0, 0, 0.55],\n        \"184\": [0.17014, 0, 0, 0, 0.48889],\n        \"305\": [0, 0.45833, 0, 0, 0.25556],\n        \"567\": [0.19444, 0.45833, 0, 0, 0.28611],\n        \"710\": [0, 0.69444, 0, 0, 0.55],\n        \"711\": [0, 0.63542, 0, 0, 0.55],\n        \"713\": [0, 0.63778, 0, 0, 0.55],\n        \"728\": [0, 0.69444, 0, 0, 0.55],\n        \"729\": [0, 0.69444, 0, 0, 0.30556],\n        \"730\": [0, 0.69444, 0, 0, 0.73334],\n        \"732\": [0, 0.69444, 0, 0, 0.55],\n        \"733\": [0, 0.69444, 0, 0, 0.55],\n        \"915\": [0, 0.69444, 0, 0, 0.58056],\n        \"916\": [0, 0.69444, 0, 0, 0.91667],\n        \"920\": [0, 0.69444, 0, 0, 0.85556],\n        \"923\": [0, 0.69444, 0, 0, 0.67223],\n        \"926\": [0, 0.69444, 0, 0, 0.73334],\n        \"928\": [0, 0.69444, 0, 0, 0.79445],\n        \"931\": [0, 0.69444, 0, 0, 0.79445],\n        \"933\": [0, 0.69444, 0, 0, 0.85556],\n        \"934\": [0, 0.69444, 0, 0, 0.79445],\n        \"936\": [0, 0.69444, 0, 0, 0.85556],\n        \"937\": [0, 0.69444, 0, 0, 0.79445],\n        \"8211\": [0, 0.45833, 0.03056, 0, 0.55],\n        \"8212\": [0, 0.45833, 0.03056, 0, 1.10001],\n        \"8216\": [0, 0.69444, 0, 0, 0.30556],\n        \"8217\": [0, 0.69444, 0, 0, 0.30556],\n        \"8220\": [0, 0.69444, 0, 0, 0.55834],\n        \"8221\": [0, 0.69444, 0, 0, 0.55834]\n    },\n    \"SansSerif-Italic\": {\n        \"33\": [0, 0.69444, 0.05733, 0, 0.31945],\n        \"34\": [0, 0.69444, 0.00316, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0.05087, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0.11156, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0.03126, 0, 0.83334],\n        \"38\": [0, 0.69444, 0.03058, 0, 0.75834],\n        \"39\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0.13164, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0.02536, 0, 0.38889],\n        \"42\": [0, 0.75, 0.11775, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0.02536, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0.01946, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0.13164, 0, 0.5],\n        \"48\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"49\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"50\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"51\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"52\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"53\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"54\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"55\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"56\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"57\": [0, 0.65556, 0.11156, 0, 0.5],\n        \"58\": [0, 0.44444, 0.02502, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0.02502, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0.05087, 0, 0.77778],\n        \"63\": [0, 0.69444, 0.11809, 0, 0.47222],\n        \"64\": [0, 0.69444, 0.07555, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0.08293, 0, 0.66667],\n        \"67\": [0, 0.69444, 0.11983, 0, 0.63889],\n        \"68\": [0, 0.69444, 0.07555, 0, 0.72223],\n        \"69\": [0, 0.69444, 0.11983, 0, 0.59722],\n        \"70\": [0, 0.69444, 0.13372, 0, 0.56945],\n        \"71\": [0, 0.69444, 0.11983, 0, 0.66667],\n        \"72\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"73\": [0, 0.69444, 0.13372, 0, 0.27778],\n        \"74\": [0, 0.69444, 0.08094, 0, 0.47222],\n        \"75\": [0, 0.69444, 0.11983, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0.08094, 0, 0.875],\n        \"78\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"79\": [0, 0.69444, 0.07555, 0, 0.73611],\n        \"80\": [0, 0.69444, 0.08293, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0.07555, 0, 0.73611],\n        \"82\": [0, 0.69444, 0.08293, 0, 0.64584],\n        \"83\": [0, 0.69444, 0.09205, 0, 0.55556],\n        \"84\": [0, 0.69444, 0.13372, 0, 0.68056],\n        \"85\": [0, 0.69444, 0.08094, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.1615, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.1615, 0, 0.94445],\n        \"88\": [0, 0.69444, 0.13372, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.17261, 0, 0.66667],\n        \"90\": [0, 0.69444, 0.11983, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0.15942, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0.08719, 0, 0.28889],\n        \"94\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.08616, 0, 0.5],\n        \"97\": [0, 0.44444, 0.00981, 0, 0.48056],\n        \"98\": [0, 0.69444, 0.03057, 0, 0.51667],\n        \"99\": [0, 0.44444, 0.08336, 0, 0.44445],\n        \"100\": [0, 0.69444, 0.09483, 0, 0.51667],\n        \"101\": [0, 0.44444, 0.06778, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.21705, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.10836, 0, 0.5],\n        \"104\": [0, 0.69444, 0.01778, 0, 0.51667],\n        \"105\": [0, 0.67937, 0.09718, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0.09162, 0, 0.26667],\n        \"107\": [0, 0.69444, 0.08336, 0, 0.48889],\n        \"108\": [0, 0.69444, 0.09483, 0, 0.23889],\n        \"109\": [0, 0.44444, 0.01778, 0, 0.79445],\n        \"110\": [0, 0.44444, 0.01778, 0, 0.51667],\n        \"111\": [0, 0.44444, 0.06613, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0.0389, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0.04169, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.10836, 0, 0.34167],\n        \"115\": [0, 0.44444, 0.0778, 0, 0.38333],\n        \"116\": [0, 0.57143, 0.07225, 0, 0.36111],\n        \"117\": [0, 0.44444, 0.04169, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.10836, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.10836, 0, 0.68334],\n        \"120\": [0, 0.44444, 0.09169, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.10836, 0, 0.46111],\n        \"122\": [0, 0.44444, 0.08752, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0.08826, 0, 0.5],\n        \"168\": [0, 0.67937, 0.06385, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.73752],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0.04169, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0.04169, 0, 0.26667],\n        \"710\": [0, 0.69444, 0.0799, 0, 0.5],\n        \"711\": [0, 0.63194, 0.08432, 0, 0.5],\n        \"713\": [0, 0.60889, 0.08776, 0, 0.5],\n        \"714\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0.09483, 0, 0.5],\n        \"729\": [0, 0.67937, 0.07774, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.73752],\n        \"732\": [0, 0.67659, 0.08826, 0, 0.5],\n        \"733\": [0, 0.69444, 0.09205, 0, 0.5],\n        \"915\": [0, 0.69444, 0.13372, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0.07555, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0.12816, 0, 0.66667],\n        \"928\": [0, 0.69444, 0.08094, 0, 0.70834],\n        \"931\": [0, 0.69444, 0.11983, 0, 0.72222],\n        \"933\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"934\": [0, 0.69444, 0.04603, 0, 0.72222],\n        \"936\": [0, 0.69444, 0.09031, 0, 0.77778],\n        \"937\": [0, 0.69444, 0.08293, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.08616, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.08616, 0, 1.0],\n        \"8216\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0.07816, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0.14205, 0, 0.5],\n        \"8221\": [0, 0.69444, 0.00316, 0, 0.5]\n    },\n    \"SansSerif-Regular\": {\n        \"33\": [0, 0.69444, 0, 0, 0.31945],\n        \"34\": [0, 0.69444, 0, 0, 0.5],\n        \"35\": [0.19444, 0.69444, 0, 0, 0.83334],\n        \"36\": [0.05556, 0.75, 0, 0, 0.5],\n        \"37\": [0.05556, 0.75, 0, 0, 0.83334],\n        \"38\": [0, 0.69444, 0, 0, 0.75834],\n        \"39\": [0, 0.69444, 0, 0, 0.27778],\n        \"40\": [0.25, 0.75, 0, 0, 0.38889],\n        \"41\": [0.25, 0.75, 0, 0, 0.38889],\n        \"42\": [0, 0.75, 0, 0, 0.5],\n        \"43\": [0.08333, 0.58333, 0, 0, 0.77778],\n        \"44\": [0.125, 0.08333, 0, 0, 0.27778],\n        \"45\": [0, 0.44444, 0, 0, 0.33333],\n        \"46\": [0, 0.08333, 0, 0, 0.27778],\n        \"47\": [0.25, 0.75, 0, 0, 0.5],\n        \"48\": [0, 0.65556, 0, 0, 0.5],\n        \"49\": [0, 0.65556, 0, 0, 0.5],\n        \"50\": [0, 0.65556, 0, 0, 0.5],\n        \"51\": [0, 0.65556, 0, 0, 0.5],\n        \"52\": [0, 0.65556, 0, 0, 0.5],\n        \"53\": [0, 0.65556, 0, 0, 0.5],\n        \"54\": [0, 0.65556, 0, 0, 0.5],\n        \"55\": [0, 0.65556, 0, 0, 0.5],\n        \"56\": [0, 0.65556, 0, 0, 0.5],\n        \"57\": [0, 0.65556, 0, 0, 0.5],\n        \"58\": [0, 0.44444, 0, 0, 0.27778],\n        \"59\": [0.125, 0.44444, 0, 0, 0.27778],\n        \"61\": [-0.13, 0.37, 0, 0, 0.77778],\n        \"63\": [0, 0.69444, 0, 0, 0.47222],\n        \"64\": [0, 0.69444, 0, 0, 0.66667],\n        \"65\": [0, 0.69444, 0, 0, 0.66667],\n        \"66\": [0, 0.69444, 0, 0, 0.66667],\n        \"67\": [0, 0.69444, 0, 0, 0.63889],\n        \"68\": [0, 0.69444, 0, 0, 0.72223],\n        \"69\": [0, 0.69444, 0, 0, 0.59722],\n        \"70\": [0, 0.69444, 0, 0, 0.56945],\n        \"71\": [0, 0.69444, 0, 0, 0.66667],\n        \"72\": [0, 0.69444, 0, 0, 0.70834],\n        \"73\": [0, 0.69444, 0, 0, 0.27778],\n        \"74\": [0, 0.69444, 0, 0, 0.47222],\n        \"75\": [0, 0.69444, 0, 0, 0.69445],\n        \"76\": [0, 0.69444, 0, 0, 0.54167],\n        \"77\": [0, 0.69444, 0, 0, 0.875],\n        \"78\": [0, 0.69444, 0, 0, 0.70834],\n        \"79\": [0, 0.69444, 0, 0, 0.73611],\n        \"80\": [0, 0.69444, 0, 0, 0.63889],\n        \"81\": [0.125, 0.69444, 0, 0, 0.73611],\n        \"82\": [0, 0.69444, 0, 0, 0.64584],\n        \"83\": [0, 0.69444, 0, 0, 0.55556],\n        \"84\": [0, 0.69444, 0, 0, 0.68056],\n        \"85\": [0, 0.69444, 0, 0, 0.6875],\n        \"86\": [0, 0.69444, 0.01389, 0, 0.66667],\n        \"87\": [0, 0.69444, 0.01389, 0, 0.94445],\n        \"88\": [0, 0.69444, 0, 0, 0.66667],\n        \"89\": [0, 0.69444, 0.025, 0, 0.66667],\n        \"90\": [0, 0.69444, 0, 0, 0.61111],\n        \"91\": [0.25, 0.75, 0, 0, 0.28889],\n        \"93\": [0.25, 0.75, 0, 0, 0.28889],\n        \"94\": [0, 0.69444, 0, 0, 0.5],\n        \"95\": [0.35, 0.09444, 0.02778, 0, 0.5],\n        \"97\": [0, 0.44444, 0, 0, 0.48056],\n        \"98\": [0, 0.69444, 0, 0, 0.51667],\n        \"99\": [0, 0.44444, 0, 0, 0.44445],\n        \"100\": [0, 0.69444, 0, 0, 0.51667],\n        \"101\": [0, 0.44444, 0, 0, 0.44445],\n        \"102\": [0, 0.69444, 0.06944, 0, 0.30556],\n        \"103\": [0.19444, 0.44444, 0.01389, 0, 0.5],\n        \"104\": [0, 0.69444, 0, 0, 0.51667],\n        \"105\": [0, 0.67937, 0, 0, 0.23889],\n        \"106\": [0.19444, 0.67937, 0, 0, 0.26667],\n        \"107\": [0, 0.69444, 0, 0, 0.48889],\n        \"108\": [0, 0.69444, 0, 0, 0.23889],\n        \"109\": [0, 0.44444, 0, 0, 0.79445],\n        \"110\": [0, 0.44444, 0, 0, 0.51667],\n        \"111\": [0, 0.44444, 0, 0, 0.5],\n        \"112\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"113\": [0.19444, 0.44444, 0, 0, 0.51667],\n        \"114\": [0, 0.44444, 0.01389, 0, 0.34167],\n        \"115\": [0, 0.44444, 0, 0, 0.38333],\n        \"116\": [0, 0.57143, 0, 0, 0.36111],\n        \"117\": [0, 0.44444, 0, 0, 0.51667],\n        \"118\": [0, 0.44444, 0.01389, 0, 0.46111],\n        \"119\": [0, 0.44444, 0.01389, 0, 0.68334],\n        \"120\": [0, 0.44444, 0, 0, 0.46111],\n        \"121\": [0.19444, 0.44444, 0.01389, 0, 0.46111],\n        \"122\": [0, 0.44444, 0, 0, 0.43472],\n        \"126\": [0.35, 0.32659, 0, 0, 0.5],\n        \"168\": [0, 0.67937, 0, 0, 0.5],\n        \"176\": [0, 0.69444, 0, 0, 0.66667],\n        \"184\": [0.17014, 0, 0, 0, 0.44445],\n        \"305\": [0, 0.44444, 0, 0, 0.23889],\n        \"567\": [0.19444, 0.44444, 0, 0, 0.26667],\n        \"710\": [0, 0.69444, 0, 0, 0.5],\n        \"711\": [0, 0.63194, 0, 0, 0.5],\n        \"713\": [0, 0.60889, 0, 0, 0.5],\n        \"714\": [0, 0.69444, 0, 0, 0.5],\n        \"715\": [0, 0.69444, 0, 0, 0.5],\n        \"728\": [0, 0.69444, 0, 0, 0.5],\n        \"729\": [0, 0.67937, 0, 0, 0.27778],\n        \"730\": [0, 0.69444, 0, 0, 0.66667],\n        \"732\": [0, 0.67659, 0, 0, 0.5],\n        \"733\": [0, 0.69444, 0, 0, 0.5],\n        \"915\": [0, 0.69444, 0, 0, 0.54167],\n        \"916\": [0, 0.69444, 0, 0, 0.83334],\n        \"920\": [0, 0.69444, 0, 0, 0.77778],\n        \"923\": [0, 0.69444, 0, 0, 0.61111],\n        \"926\": [0, 0.69444, 0, 0, 0.66667],\n        \"928\": [0, 0.69444, 0, 0, 0.70834],\n        \"931\": [0, 0.69444, 0, 0, 0.72222],\n        \"933\": [0, 0.69444, 0, 0, 0.77778],\n        \"934\": [0, 0.69444, 0, 0, 0.72222],\n        \"936\": [0, 0.69444, 0, 0, 0.77778],\n        \"937\": [0, 0.69444, 0, 0, 0.72222],\n        \"8211\": [0, 0.44444, 0.02778, 0, 0.5],\n        \"8212\": [0, 0.44444, 0.02778, 0, 1.0],\n        \"8216\": [0, 0.69444, 0, 0, 0.27778],\n        \"8217\": [0, 0.69444, 0, 0, 0.27778],\n        \"8220\": [0, 0.69444, 0, 0, 0.5],\n        \"8221\": [0, 0.69444, 0, 0, 0.5]\n    },\n    \"Script-Regular\": {\n        \"65\": [0, 0.7, 0.22925, 0, 0.80253],\n        \"66\": [0, 0.7, 0.04087, 0, 0.90757],\n        \"67\": [0, 0.7, 0.1689, 0, 0.66619],\n        \"68\": [0, 0.7, 0.09371, 0, 0.77443],\n        \"69\": [0, 0.7, 0.18583, 0, 0.56162],\n        \"70\": [0, 0.7, 0.13634, 0, 0.89544],\n        \"71\": [0, 0.7, 0.17322, 0, 0.60961],\n        \"72\": [0, 0.7, 0.29694, 0, 0.96919],\n        \"73\": [0, 0.7, 0.19189, 0, 0.80907],\n        \"74\": [0.27778, 0.7, 0.19189, 0, 1.05159],\n        \"75\": [0, 0.7, 0.31259, 0, 0.91364],\n        \"76\": [0, 0.7, 0.19189, 0, 0.87373],\n        \"77\": [0, 0.7, 0.15981, 0, 1.08031],\n        \"78\": [0, 0.7, 0.3525, 0, 0.9015],\n        \"79\": [0, 0.7, 0.08078, 0, 0.73787],\n        \"80\": [0, 0.7, 0.08078, 0, 1.01262],\n        \"81\": [0, 0.7, 0.03305, 0, 0.88282],\n        \"82\": [0, 0.7, 0.06259, 0, 0.85],\n        \"83\": [0, 0.7, 0.19189, 0, 0.86767],\n        \"84\": [0, 0.7, 0.29087, 0, 0.74697],\n        \"85\": [0, 0.7, 0.25815, 0, 0.79996],\n        \"86\": [0, 0.7, 0.27523, 0, 0.62204],\n        \"87\": [0, 0.7, 0.27523, 0, 0.80532],\n        \"88\": [0, 0.7, 0.26006, 0, 0.94445],\n        \"89\": [0, 0.7, 0.2939, 0, 0.70961],\n        \"90\": [0, 0.7, 0.24037, 0, 0.8212]\n    },\n    \"Size1-Regular\": {\n        \"40\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"41\": [0.35001, 0.85, 0, 0, 0.45834],\n        \"47\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"91\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"92\": [0.35001, 0.85, 0, 0, 0.57778],\n        \"93\": [0.35001, 0.85, 0, 0, 0.41667],\n        \"123\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"125\": [0.35001, 0.85, 0, 0, 0.58334],\n        \"710\": [0, 0.72222, 0, 0, 0.55556],\n        \"732\": [0, 0.72222, 0, 0, 0.55556],\n        \"770\": [0, 0.72222, 0, 0, 0.55556],\n        \"771\": [0, 0.72222, 0, 0, 0.55556],\n        \"8214\": [-0.00099, 0.601, 0, 0, 0.77778],\n        \"8593\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8595\": [1e-05, 0.6, 0, 0, 0.66667],\n        \"8657\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8659\": [1e-05, 0.6, 0, 0, 0.77778],\n        \"8719\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8720\": [0.25001, 0.75, 0, 0, 0.94445],\n        \"8721\": [0.25001, 0.75, 0, 0, 1.05556],\n        \"8730\": [0.35001, 0.85, 0, 0, 1.0],\n        \"8739\": [-0.00599, 0.606, 0, 0, 0.33333],\n        \"8741\": [-0.00599, 0.606, 0, 0, 0.55556],\n        \"8747\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8748\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8749\": [0.306, 0.805, 0.19445, 0, 0.47222],\n        \"8750\": [0.30612, 0.805, 0.19445, 0, 0.47222],\n        \"8896\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8897\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8898\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8899\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"8968\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8969\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8970\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"8971\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"9168\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"10216\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10217\": [0.35001, 0.85, 0, 0, 0.47222],\n        \"10752\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10753\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10754\": [0.25001, 0.75, 0, 0, 1.11111],\n        \"10756\": [0.25001, 0.75, 0, 0, 0.83334],\n        \"10758\": [0.25001, 0.75, 0, 0, 0.83334]\n    },\n    \"Size2-Regular\": {\n        \"40\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"41\": [0.65002, 1.15, 0, 0, 0.59722],\n        \"47\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"91\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"92\": [0.65002, 1.15, 0, 0, 0.81111],\n        \"93\": [0.65002, 1.15, 0, 0, 0.47222],\n        \"123\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"125\": [0.65002, 1.15, 0, 0, 0.66667],\n        \"710\": [0, 0.75, 0, 0, 1.0],\n        \"732\": [0, 0.75, 0, 0, 1.0],\n        \"770\": [0, 0.75, 0, 0, 1.0],\n        \"771\": [0, 0.75, 0, 0, 1.0],\n        \"8719\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8720\": [0.55001, 1.05, 0, 0, 1.27778],\n        \"8721\": [0.55001, 1.05, 0, 0, 1.44445],\n        \"8730\": [0.65002, 1.15, 0, 0, 1.0],\n        \"8747\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8748\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8749\": [0.862, 1.36, 0.44445, 0, 0.55556],\n        \"8750\": [0.86225, 1.36, 0.44445, 0, 0.55556],\n        \"8896\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8897\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8898\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8899\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"8968\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8969\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8970\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"8971\": [0.65002, 1.15, 0, 0, 0.52778],\n        \"10216\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10217\": [0.65002, 1.15, 0, 0, 0.61111],\n        \"10752\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10753\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10754\": [0.55001, 1.05, 0, 0, 1.51112],\n        \"10756\": [0.55001, 1.05, 0, 0, 1.11111],\n        \"10758\": [0.55001, 1.05, 0, 0, 1.11111]\n    },\n    \"Size3-Regular\": {\n        \"40\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"41\": [0.95003, 1.45, 0, 0, 0.73611],\n        \"47\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"91\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"92\": [0.95003, 1.45, 0, 0, 1.04445],\n        \"93\": [0.95003, 1.45, 0, 0, 0.52778],\n        \"123\": [0.95003, 1.45, 0, 0, 0.75],\n        \"125\": [0.95003, 1.45, 0, 0, 0.75],\n        \"710\": [0, 0.75, 0, 0, 1.44445],\n        \"732\": [0, 0.75, 0, 0, 1.44445],\n        \"770\": [0, 0.75, 0, 0, 1.44445],\n        \"771\": [0, 0.75, 0, 0, 1.44445],\n        \"8730\": [0.95003, 1.45, 0, 0, 1.0],\n        \"8968\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8969\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8970\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"8971\": [0.95003, 1.45, 0, 0, 0.58334],\n        \"10216\": [0.95003, 1.45, 0, 0, 0.75],\n        \"10217\": [0.95003, 1.45, 0, 0, 0.75]\n    },\n    \"Size4-Regular\": {\n        \"40\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"41\": [1.25003, 1.75, 0, 0, 0.79167],\n        \"47\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"91\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"92\": [1.25003, 1.75, 0, 0, 1.27778],\n        \"93\": [1.25003, 1.75, 0, 0, 0.58334],\n        \"123\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"125\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"710\": [0, 0.825, 0, 0, 1.8889],\n        \"732\": [0, 0.825, 0, 0, 1.8889],\n        \"770\": [0, 0.825, 0, 0, 1.8889],\n        \"771\": [0, 0.825, 0, 0, 1.8889],\n        \"8730\": [1.25003, 1.75, 0, 0, 1.0],\n        \"8968\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8969\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8970\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"8971\": [1.25003, 1.75, 0, 0, 0.63889],\n        \"9115\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9116\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9117\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9118\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9119\": [1e-05, 0.6, 0, 0, 0.875],\n        \"9120\": [0.64502, 1.155, 0, 0, 0.875],\n        \"9121\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9122\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9123\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9124\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9125\": [-0.00099, 0.601, 0, 0, 0.66667],\n        \"9126\": [0.64502, 1.155, 0, 0, 0.66667],\n        \"9127\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9128\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9129\": [0.90001, 0, 0, 0, 0.88889],\n        \"9130\": [0, 0.3, 0, 0, 0.88889],\n        \"9131\": [1e-05, 0.9, 0, 0, 0.88889],\n        \"9132\": [0.65002, 1.15, 0, 0, 0.88889],\n        \"9133\": [0.90001, 0, 0, 0, 0.88889],\n        \"9143\": [0.88502, 0.915, 0, 0, 1.05556],\n        \"10216\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"10217\": [1.25003, 1.75, 0, 0, 0.80556],\n        \"57344\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57345\": [-0.00499, 0.605, 0, 0, 1.05556],\n        \"57680\": [0, 0.12, 0, 0, 0.45],\n        \"57681\": [0, 0.12, 0, 0, 0.45],\n        \"57682\": [0, 0.12, 0, 0, 0.45],\n        \"57683\": [0, 0.12, 0, 0, 0.45]\n    },\n    \"Typewriter-Regular\": {\n        \"32\": [0, 0, 0, 0, 0.525],\n        \"33\": [0, 0.61111, 0, 0, 0.525],\n        \"34\": [0, 0.61111, 0, 0, 0.525],\n        \"35\": [0, 0.61111, 0, 0, 0.525],\n        \"36\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"37\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"38\": [0, 0.61111, 0, 0, 0.525],\n        \"39\": [0, 0.61111, 0, 0, 0.525],\n        \"40\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"41\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"42\": [0, 0.52083, 0, 0, 0.525],\n        \"43\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"44\": [0.13889, 0.125, 0, 0, 0.525],\n        \"45\": [-0.08056, 0.53055, 0, 0, 0.525],\n        \"46\": [0, 0.125, 0, 0, 0.525],\n        \"47\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"48\": [0, 0.61111, 0, 0, 0.525],\n        \"49\": [0, 0.61111, 0, 0, 0.525],\n        \"50\": [0, 0.61111, 0, 0, 0.525],\n        \"51\": [0, 0.61111, 0, 0, 0.525],\n        \"52\": [0, 0.61111, 0, 0, 0.525],\n        \"53\": [0, 0.61111, 0, 0, 0.525],\n        \"54\": [0, 0.61111, 0, 0, 0.525],\n        \"55\": [0, 0.61111, 0, 0, 0.525],\n        \"56\": [0, 0.61111, 0, 0, 0.525],\n        \"57\": [0, 0.61111, 0, 0, 0.525],\n        \"58\": [0, 0.43056, 0, 0, 0.525],\n        \"59\": [0.13889, 0.43056, 0, 0, 0.525],\n        \"60\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"61\": [-0.19549, 0.41562, 0, 0, 0.525],\n        \"62\": [-0.05556, 0.55556, 0, 0, 0.525],\n        \"63\": [0, 0.61111, 0, 0, 0.525],\n        \"64\": [0, 0.61111, 0, 0, 0.525],\n        \"65\": [0, 0.61111, 0, 0, 0.525],\n        \"66\": [0, 0.61111, 0, 0, 0.525],\n        \"67\": [0, 0.61111, 0, 0, 0.525],\n        \"68\": [0, 0.61111, 0, 0, 0.525],\n        \"69\": [0, 0.61111, 0, 0, 0.525],\n        \"70\": [0, 0.61111, 0, 0, 0.525],\n        \"71\": [0, 0.61111, 0, 0, 0.525],\n        \"72\": [0, 0.61111, 0, 0, 0.525],\n        \"73\": [0, 0.61111, 0, 0, 0.525],\n        \"74\": [0, 0.61111, 0, 0, 0.525],\n        \"75\": [0, 0.61111, 0, 0, 0.525],\n        \"76\": [0, 0.61111, 0, 0, 0.525],\n        \"77\": [0, 0.61111, 0, 0, 0.525],\n        \"78\": [0, 0.61111, 0, 0, 0.525],\n        \"79\": [0, 0.61111, 0, 0, 0.525],\n        \"80\": [0, 0.61111, 0, 0, 0.525],\n        \"81\": [0.13889, 0.61111, 0, 0, 0.525],\n        \"82\": [0, 0.61111, 0, 0, 0.525],\n        \"83\": [0, 0.61111, 0, 0, 0.525],\n        \"84\": [0, 0.61111, 0, 0, 0.525],\n        \"85\": [0, 0.61111, 0, 0, 0.525],\n        \"86\": [0, 0.61111, 0, 0, 0.525],\n        \"87\": [0, 0.61111, 0, 0, 0.525],\n        \"88\": [0, 0.61111, 0, 0, 0.525],\n        \"89\": [0, 0.61111, 0, 0, 0.525],\n        \"90\": [0, 0.61111, 0, 0, 0.525],\n        \"91\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"92\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"93\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"94\": [0, 0.61111, 0, 0, 0.525],\n        \"95\": [0.09514, 0, 0, 0, 0.525],\n        \"96\": [0, 0.61111, 0, 0, 0.525],\n        \"97\": [0, 0.43056, 0, 0, 0.525],\n        \"98\": [0, 0.61111, 0, 0, 0.525],\n        \"99\": [0, 0.43056, 0, 0, 0.525],\n        \"100\": [0, 0.61111, 0, 0, 0.525],\n        \"101\": [0, 0.43056, 0, 0, 0.525],\n        \"102\": [0, 0.61111, 0, 0, 0.525],\n        \"103\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"104\": [0, 0.61111, 0, 0, 0.525],\n        \"105\": [0, 0.61111, 0, 0, 0.525],\n        \"106\": [0.22222, 0.61111, 0, 0, 0.525],\n        \"107\": [0, 0.61111, 0, 0, 0.525],\n        \"108\": [0, 0.61111, 0, 0, 0.525],\n        \"109\": [0, 0.43056, 0, 0, 0.525],\n        \"110\": [0, 0.43056, 0, 0, 0.525],\n        \"111\": [0, 0.43056, 0, 0, 0.525],\n        \"112\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"113\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"114\": [0, 0.43056, 0, 0, 0.525],\n        \"115\": [0, 0.43056, 0, 0, 0.525],\n        \"116\": [0, 0.55358, 0, 0, 0.525],\n        \"117\": [0, 0.43056, 0, 0, 0.525],\n        \"118\": [0, 0.43056, 0, 0, 0.525],\n        \"119\": [0, 0.43056, 0, 0, 0.525],\n        \"120\": [0, 0.43056, 0, 0, 0.525],\n        \"121\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"122\": [0, 0.43056, 0, 0, 0.525],\n        \"123\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"124\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"125\": [0.08333, 0.69444, 0, 0, 0.525],\n        \"126\": [0, 0.61111, 0, 0, 0.525],\n        \"127\": [0, 0.61111, 0, 0, 0.525],\n        \"160\": [0, 0, 0, 0, 0.525],\n        \"176\": [0, 0.61111, 0, 0, 0.525],\n        \"184\": [0.19445, 0, 0, 0, 0.525],\n        \"305\": [0, 0.43056, 0, 0, 0.525],\n        \"567\": [0.22222, 0.43056, 0, 0, 0.525],\n        \"711\": [0, 0.56597, 0, 0, 0.525],\n        \"713\": [0, 0.56555, 0, 0, 0.525],\n        \"714\": [0, 0.61111, 0, 0, 0.525],\n        \"715\": [0, 0.61111, 0, 0, 0.525],\n        \"728\": [0, 0.61111, 0, 0, 0.525],\n        \"730\": [0, 0.61111, 0, 0, 0.525],\n        \"770\": [0, 0.61111, 0, 0, 0.525],\n        \"771\": [0, 0.61111, 0, 0, 0.525],\n        \"776\": [0, 0.61111, 0, 0, 0.525],\n        \"915\": [0, 0.61111, 0, 0, 0.525],\n        \"916\": [0, 0.61111, 0, 0, 0.525],\n        \"920\": [0, 0.61111, 0, 0, 0.525],\n        \"923\": [0, 0.61111, 0, 0, 0.525],\n        \"926\": [0, 0.61111, 0, 0, 0.525],\n        \"928\": [0, 0.61111, 0, 0, 0.525],\n        \"931\": [0, 0.61111, 0, 0, 0.525],\n        \"933\": [0, 0.61111, 0, 0, 0.525],\n        \"934\": [0, 0.61111, 0, 0, 0.525],\n        \"936\": [0, 0.61111, 0, 0, 0.525],\n        \"937\": [0, 0.61111, 0, 0, 0.525],\n        \"8216\": [0, 0.61111, 0, 0, 0.525],\n        \"8217\": [0, 0.61111, 0, 0, 0.525],\n        \"8242\": [0, 0.61111, 0, 0, 0.525],\n        \"9251\": [0.11111, 0.21944, 0, 0, 0.525]\n    }\n});\n// CONCATENATED MODULE: ./src/fontMetrics.js\n\n\n/**\n * This file contains metrics regarding fonts and individual symbols. The sigma\n * and xi variables, as well as the metricMap map contain data extracted from\n * TeX, TeX font metrics, and the TTF files. These data are then exposed via the\n * `metrics` variable and the getCharacterMetrics function.\n */\n\n// In TeX, there are actually three sets of dimensions, one for each of\n// textstyle (size index 5 and higher: >=9pt), scriptstyle (size index 3 and 4:\n// 7-8pt), and scriptscriptstyle (size index 1 and 2: 5-6pt).  These are\n// provided in the the arrays below, in that order.\n//\n// The font metrics are stored in fonts cmsy10, cmsy7, and cmsy5 respsectively.\n// This was determined by running the following script:\n//\n//     latex -interaction=nonstopmode \\\n//     '\\documentclass{article}\\usepackage{amsmath}\\begin{document}' \\\n//     '$a$ \\expandafter\\show\\the\\textfont2' \\\n//     '\\expandafter\\show\\the\\scriptfont2' \\\n//     '\\expandafter\\show\\the\\scriptscriptfont2' \\\n//     '\\stop'\n//\n// The metrics themselves were retreived using the following commands:\n//\n//     tftopl cmsy10\n//     tftopl cmsy7\n//     tftopl cmsy5\n//\n// The output of each of these commands is quite lengthy.  The only part we\n// care about is the FONTDIMEN section. Each value is measured in EMs.\nvar sigmasAndXis = {\n    slant: [0.250, 0.250, 0.250], // sigma1\n    space: [0.000, 0.000, 0.000], // sigma2\n    stretch: [0.000, 0.000, 0.000], // sigma3\n    shrink: [0.000, 0.000, 0.000], // sigma4\n    xHeight: [0.431, 0.431, 0.431], // sigma5\n    quad: [1.000, 1.171, 1.472], // sigma6\n    extraSpace: [0.000, 0.000, 0.000], // sigma7\n    num1: [0.677, 0.732, 0.925], // sigma8\n    num2: [0.394, 0.384, 0.387], // sigma9\n    num3: [0.444, 0.471, 0.504], // sigma10\n    denom1: [0.686, 0.752, 1.025], // sigma11\n    denom2: [0.345, 0.344, 0.532], // sigma12\n    sup1: [0.413, 0.503, 0.504], // sigma13\n    sup2: [0.363, 0.431, 0.404], // sigma14\n    sup3: [0.289, 0.286, 0.294], // sigma15\n    sub1: [0.150, 0.143, 0.200], // sigma16\n    sub2: [0.247, 0.286, 0.400], // sigma17\n    supDrop: [0.386, 0.353, 0.494], // sigma18\n    subDrop: [0.050, 0.071, 0.100], // sigma19\n    delim1: [2.390, 1.700, 1.980], // sigma20\n    delim2: [1.010, 1.157, 1.420], // sigma21\n    axisHeight: [0.250, 0.250, 0.250], // sigma22\n\n    // These font metrics are extracted from TeX by using tftopl on cmex10.tfm;\n    // they correspond to the font parameters of the extension fonts (family 3).\n    // See the TeXbook, page 441. In AMSTeX, the extension fonts scale; to\n    // match cmex7, we'd use cmex7.tfm values for script and scriptscript\n    // values.\n    defaultRuleThickness: [0.04, 0.049, 0.049], // xi8; cmex7: 0.049\n    bigOpSpacing1: [0.111, 0.111, 0.111], // xi9\n    bigOpSpacing2: [0.166, 0.166, 0.166], // xi10\n    bigOpSpacing3: [0.2, 0.2, 0.2], // xi11\n    bigOpSpacing4: [0.6, 0.611, 0.611], // xi12; cmex7: 0.611\n    bigOpSpacing5: [0.1, 0.143, 0.143], // xi13; cmex7: 0.143\n\n    // The \\sqrt rule width is taken from the height of the surd character.\n    // Since we use the same font at all sizes, this thickness doesn't scale.\n    sqrtRuleThickness: [0.04, 0.04, 0.04],\n\n    // This value determines how large a pt is, for metrics which are defined\n    // in terms of pts.\n    // This value is also used in katex.less; if you change it make sure the\n    // values match.\n    ptPerEm: [10.0, 10.0, 10.0],\n\n    // The space between adjacent `|` columns in an array definition. From\n    // `\\showthe\\doublerulesep` in LaTeX. Equals 2.0 / ptPerEm.\n    doubleRuleSep: [0.2, 0.2, 0.2]\n};\n\n// This map contains a mapping from font name and character code to character\n// metrics, including height, depth, italic correction, and skew (kern from the\n// character to the corresponding \\skewchar)\n// This map is generated via `make metrics`. It should not be changed manually.\n\n\n// These are very rough approximations.  We default to Times New Roman which\n// should have Latin-1 and Cyrillic characters, but may not depending on the\n// operating system.  The metrics do not account for extra height from the\n// accents.  In the case of Cyrillic characters which have both ascenders and\n// descenders we prefer approximations with ascenders, primarily to prevent\n// the fraction bar or root line from intersecting the glyph.\n// TODO(kevinb) allow union of multiple glyph metrics for better accuracy.\nvar extraCharacterMap = {\n    // Latin-1\n    'Å': 'A',\n    'Ç': 'C',\n    'Ð': 'D',\n    'Þ': 'o',\n    'å': 'a',\n    'ç': 'c',\n    'ð': 'd',\n    'þ': 'o',\n\n    // Cyrillic\n    'А': 'A',\n    'Б': 'B',\n    'В': 'B',\n    'Г': 'F',\n    'Д': 'A',\n    'Е': 'E',\n    'Ж': 'K',\n    'З': '3',\n    'И': 'N',\n    'Й': 'N',\n    'К': 'K',\n    'Л': 'N',\n    'М': 'M',\n    'Н': 'H',\n    'О': 'O',\n    'П': 'N',\n    'Р': 'P',\n    'С': 'C',\n    'Т': 'T',\n    'У': 'y',\n    'Ф': 'O',\n    'Х': 'X',\n    'Ц': 'U',\n    'Ч': 'h',\n    'Ш': 'W',\n    'Щ': 'W',\n    'Ъ': 'B',\n    'Ы': 'X',\n    'Ь': 'B',\n    'Э': '3',\n    'Ю': 'X',\n    'Я': 'R',\n    'а': 'a',\n    'б': 'b',\n    'в': 'a',\n    'г': 'r',\n    'д': 'y',\n    'е': 'e',\n    'ж': 'm',\n    'з': 'e',\n    'и': 'n',\n    'й': 'n',\n    'к': 'n',\n    'л': 'n',\n    'м': 'm',\n    'н': 'n',\n    'о': 'o',\n    'п': 'n',\n    'р': 'p',\n    'с': 'c',\n    'т': 'o',\n    'у': 'y',\n    'ф': 'b',\n    'х': 'x',\n    'ц': 'n',\n    'ч': 'n',\n    'ш': 'w',\n    'щ': 'w',\n    'ъ': 'a',\n    'ы': 'm',\n    'ь': 'a',\n    'э': 'e',\n    'ю': 'm',\n    'я': 'r'\n};\n\n/**\n * This function adds new font metrics to default metricMap\n * It can also override existing metrics\n */\nfunction setFontMetrics(fontName, metrics) {\n    fontMetricsData[fontName] = metrics;\n}\n\n/**\n * This function is a convenience function for looking up information in the\n * metricMap table. It takes a character as a string, and a font.\n *\n * Note: the `width` property may be undefined if fontMetricsData.js wasn't\n * built using `Make extended_metrics`.\n */\nfunction getCharacterMetrics(character, font, mode) {\n    if (!fontMetricsData[font]) {\n        throw new Error(\"Font metrics not found for font: \" + font + \".\");\n    }\n    var ch = character.charCodeAt(0);\n    if (character[0] in extraCharacterMap) {\n        ch = extraCharacterMap[character[0]].charCodeAt(0);\n    }\n    var metrics = fontMetricsData[font][ch];\n\n    if (!metrics && mode === 'text') {\n        // We don't typically have font metrics for Asian scripts.\n        // But since we support them in text mode, we need to return\n        // some sort of metrics.\n        // So if the character is in a script we support but we\n        // don't have metrics for it, just use the metrics for\n        // the Latin capital letter M. This is close enough because\n        // we (currently) only care about the height of the glpyh\n        // not its width.\n        if (supportedCodepoint(ch)) {\n            metrics = fontMetricsData[font][77]; // 77 is the charcode for 'M'\n        }\n    }\n\n    if (metrics) {\n        return {\n            depth: metrics[0],\n            height: metrics[1],\n            italic: metrics[2],\n            skew: metrics[3],\n            width: metrics[4]\n        };\n    }\n}\n\nvar fontMetricsBySizeIndex = {};\n\n/**\n * Get the font metrics for a given size.\n */\nfunction getGlobalMetrics(size) {\n    var sizeIndex = void 0;\n    if (size >= 5) {\n        sizeIndex = 0;\n    } else if (size >= 3) {\n        sizeIndex = 1;\n    } else {\n        sizeIndex = 2;\n    }\n    if (!fontMetricsBySizeIndex[sizeIndex]) {\n        var metrics = fontMetricsBySizeIndex[sizeIndex] = {\n            cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18\n        };\n        for (var key in sigmasAndXis) {\n            if (sigmasAndXis.hasOwnProperty(key)) {\n                metrics[key] = sigmasAndXis[key][sizeIndex];\n            }\n        }\n    }\n    return fontMetricsBySizeIndex[sizeIndex];\n}\n// CONCATENATED MODULE: ./src/symbols.js\n\n// Some of these have a \"-token\" suffix since these are also used as `ParseNode`\n// types for raw text tokens, and we want to avoid conflicts with higher-level\n// `ParseNode` types. These `ParseNode`s are constructed within `Parser` by\n// looking up the `symbols` map.\n\n/**\n * This file holds a list of all no-argument functions and single-character\n * symbols (like 'a' or ';').\n *\n * For each of the symbols, there are three properties they can have:\n * - font (required): the font to be used for this symbol. Either \"main\" (the\n     normal font), or \"ams\" (the ams fonts).\n * - group (required): the ParseNode group type the symbol should have (i.e.\n     \"textord\", \"mathord\", etc).\n     See https://github.com/Khan/KaTeX/wiki/Examining-TeX#group-types\n * - replace: the character that this symbol or function should be\n *   replaced with (i.e. \"\\phi\" has a replace value of \"\\u03d5\", the phi\n *   character in the main font).\n *\n * The outermost map in the table indicates what mode the symbols should be\n * accepted in (e.g. \"math\" or \"text\").\n */\n\nvar ATOMS = {\n    \"bin\": 1,\n    \"close\": 1,\n    \"inner\": 1,\n    \"open\": 1,\n    \"punct\": 1,\n    \"rel\": 1\n};\nvar NON_ATOMS = {\n    \"accent-token\": 1,\n    \"mathord\": 1,\n    \"op-token\": 1,\n    \"spacing\": 1,\n    \"textord\": 1\n};\n\nvar symbols = {\n    \"math\": {},\n    \"text\": {}\n};\n/* harmony default export */ var src_symbols = (symbols);\n\n/** `acceptUnicodeChar = true` is only applicable if `replace` is set. */\nfunction defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {\n    symbols[mode][name] = { font: font, group: group, replace: replace };\n\n    if (acceptUnicodeChar && replace) {\n        symbols[mode][replace] = symbols[mode][name];\n    }\n}\n\n// Some abbreviations for commonly used strings.\n// This helps minify the code, and also spotting typos using jshint.\n\n// modes:\nvar symbols_math = \"math\";\nvar symbols_text = \"text\";\n\n// fonts:\nvar main = \"main\";\nvar ams = \"ams\";\n\n// groups:\nvar symbols_accent = \"accent-token\";\nvar bin = \"bin\";\nvar symbols_close = \"close\";\nvar symbols_inner = \"inner\";\nvar mathord = \"mathord\";\nvar op = \"op-token\";\nvar symbols_open = \"open\";\nvar punct = \"punct\";\nvar rel = \"rel\";\nvar spacing = \"spacing\";\nvar symbols_textord = \"textord\";\n\n// Now comes the symbol table\n\n// Relation Symbols\ndefineSymbol(symbols_math, main, rel, \"\\u2261\", \"\\\\equiv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227A\", \"\\\\prec\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u227B\", \"\\\\succ\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u223C\", \"\\\\sim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A5\", \"\\\\perp\");\ndefineSymbol(symbols_math, main, rel, \"\\u2AAF\", \"\\\\preceq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2AB0\", \"\\\\succeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2243\", \"\\\\simeq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2223\", \"\\\\mid\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226A\", \"\\\\ll\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u226B\", \"\\\\gg\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u224D\", \"\\\\asymp\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2225\", \"\\\\parallel\");\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\bowtie\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2323\", \"\\\\smile\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2291\", \"\\\\sqsubseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2292\", \"\\\\sqsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2250\", \"\\\\doteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2322\", \"\\\\frown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\ni\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u221D\", \"\\\\propto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A2\", \"\\\\vdash\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A3\", \"\\\\dashv\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u220B\", \"\\\\owns\");\n\n// Punctuation\ndefineSymbol(symbols_math, main, punct, \".\", \"\\\\ldotp\");\ndefineSymbol(symbols_math, main, punct, \"\\u22C5\", \"\\\\cdotp\");\n\n// Misc Symbols\ndefineSymbol(symbols_math, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_text, main, symbols_textord, \"#\", \"\\\\#\");\ndefineSymbol(symbols_math, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_text, main, symbols_textord, \"&\", \"\\\\&\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2135\", \"\\\\aleph\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2200\", \"\\\\forall\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u210F\", \"\\\\hbar\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2203\", \"\\\\exists\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2207\", \"\\\\nabla\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266D\", \"\\\\flat\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2113\", \"\\\\ell\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266E\", \"\\\\natural\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2663\", \"\\\\clubsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2118\", \"\\\\wp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u266F\", \"\\\\sharp\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2662\", \"\\\\diamondsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u211C\", \"\\\\Re\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2661\", \"\\\\heartsuit\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2111\", \"\\\\Im\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2660\", \"\\\\spadesuit\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xA7\", \"\\\\S\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB6\", \"\\\\P\", true);\n\n// Math and Text\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\dag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2020\", \"\\\\textdagger\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\ddag\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2021\", \"\\\\textdaggerdbl\");\n\n// Large Delimiters\ndefineSymbol(symbols_math, main, symbols_close, \"\\u23B1\", \"\\\\rmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u23B0\", \"\\\\lmoustache\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27EF\", \"\\\\rgroup\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27EE\", \"\\\\lgroup\", true);\n\n// Binary Operators\ndefineSymbol(symbols_math, main, bin, \"\\u2213\", \"\\\\mp\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2296\", \"\\\\ominus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u228E\", \"\\\\uplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2293\", \"\\\\sqcap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"\\\\ast\");\ndefineSymbol(symbols_math, main, bin, \"\\u2294\", \"\\\\sqcup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25EF\", \"\\\\bigcirc\");\ndefineSymbol(symbols_math, main, bin, \"\\u2219\", \"\\\\bullet\");\ndefineSymbol(symbols_math, main, bin, \"\\u2021\", \"\\\\ddagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u2240\", \"\\\\wr\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2A3F\", \"\\\\amalg\");\ndefineSymbol(symbols_math, main, bin, \"&\", \"\\\\And\"); // from amsmath\n\n// Arrow Symbols\ndefineSymbol(symbols_math, main, rel, \"\\u27F5\", \"\\\\longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D0\", \"\\\\Leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F8\", \"\\\\Longleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F6\", \"\\\\longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D2\", \"\\\\Rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F9\", \"\\\\Longrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2194\", \"\\\\leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27F7\", \"\\\\longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D4\", \"\\\\Leftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FA\", \"\\\\Longleftrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A6\", \"\\\\mapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u27FC\", \"\\\\longmapsto\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2197\", \"\\\\nearrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21A9\", \"\\\\hookleftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21AA\", \"\\\\hookrightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2198\", \"\\\\searrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BC\", \"\\\\leftharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C0\", \"\\\\rightharpoonup\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2199\", \"\\\\swarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21BD\", \"\\\\leftharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21C1\", \"\\\\rightharpoondown\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2196\", \"\\\\nwarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21CC\", \"\\\\rightleftharpoons\", true);\n\n// AMS Negated Binary Relations\ndefineSymbol(symbols_math, ams, rel, \"\\u226E\", \"\\\\nless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE010\", \"\\\\nleqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE011\", \"\\\\nleqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A87\", \"\\\\lneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2268\", \"\\\\lneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00C\", \"\\\\lvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E6\", \"\\\\lnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A89\", \"\\\\lnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2280\", \"\\\\nprec\", true);\n// unicode-math maps \\u22e0 to \\npreccurlyeq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u22E0\", \"\\\\npreceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E8\", \"\\\\precnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB9\", \"\\\\precnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2241\", \"\\\\nsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE006\", \"\\\\nshortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2224\", \"\\\\nmid\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AC\", \"\\\\nvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AD\", \"\\\\nvDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EA\", \"\\\\ntriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22EC\", \"\\\\ntrianglelefteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228A\", \"\\\\subsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01A\", \"\\\\varsubsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACB\", \"\\\\subsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE017\", \"\\\\varsubsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226F\", \"\\\\ngtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00F\", \"\\\\ngeqslant\");\ndefineSymbol(symbols_math, ams, rel, \"\\uE00E\", \"\\\\ngeqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2A88\", \"\\\\gneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2269\", \"\\\\gneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE00D\", \"\\\\gvertneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22E7\", \"\\\\gnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8A\", \"\\\\gnapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2281\", \"\\\\nsucc\", true);\n// unicode-math maps \\u22e1 to \\nsucccurlyeq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u22E1\", \"\\\\nsucceq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22E9\", \"\\\\succnsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2ABA\", \"\\\\succnapprox\", true);\n// unicode-math maps \\u2246 to \\simneqq. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u2246\", \"\\\\ncong\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE007\", \"\\\\nshortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2226\", \"\\\\nparallel\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AF\", \"\\\\nVDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22EB\", \"\\\\ntriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22ED\", \"\\\\ntrianglerighteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE018\", \"\\\\nsupseteqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u228B\", \"\\\\supsetneq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE01B\", \"\\\\varsupsetneq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2ACC\", \"\\\\supsetneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE019\", \"\\\\varsupsetneqq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22AE\", \"\\\\nVdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB5\", \"\\\\precneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB6\", \"\\\\succneqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\uE016\", \"\\\\nsubseteqq\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B4\", \"\\\\unlhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B5\", \"\\\\unrhd\");\n\n// AMS Negated Arrows\ndefineSymbol(symbols_math, ams, rel, \"\\u219A\", \"\\\\nleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219B\", \"\\\\nrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CD\", \"\\\\nLeftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CF\", \"\\\\nRightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AE\", \"\\\\nleftrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CE\", \"\\\\nLeftrightarrow\", true);\n\n// AMS Misc\ndefineSymbol(symbols_math, ams, rel, \"\\u25B3\", \"\\\\vartriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u210F\", \"\\\\hslash\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BD\", \"\\\\triangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\lozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u24C8\", \"\\\\circledS\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xAE\", \"\\\\circledR\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2221\", \"\\\\measuredangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2204\", \"\\\\nexists\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2127\", \"\\\\mho\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2132\", \"\\\\Finv\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2141\", \"\\\\Game\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"k\", \"\\\\Bbbk\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2035\", \"\\\\backprime\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25B2\", \"\\\\blacktriangle\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25BC\", \"\\\\blacktriangledown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A0\", \"\\\\blacksquare\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u29EB\", \"\\\\blacklozenge\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2605\", \"\\\\bigstar\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2222\", \"\\\\sphericalangle\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2201\", \"\\\\complement\", true);\n// unicode-math maps U+F0 (ð) to \\matheth. We map to AMS function \\eth\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xF0\", \"\\\\eth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2571\", \"\\\\diagup\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2572\", \"\\\\diagdown\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\square\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25A1\", \"\\\\Box\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u25CA\", \"\\\\Diamond\");\n// unicode-math maps U+A5 to \\mathyen. We map to AMS function \\yen\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\xA5\", \"\\\\yen\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\", true);\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2713\", \"\\\\checkmark\");\n\n// AMS Hebrew\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2136\", \"\\\\beth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2138\", \"\\\\daleth\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2137\", \"\\\\gimel\", true);\n\n// AMS Greek\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03DD\", \"\\\\digamma\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u03F0\", \"\\\\varkappa\");\n\n// AMS Delimiters\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u250C\", \"\\\\ulcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2510\", \"\\\\urcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_open, \"\\u2514\", \"\\\\llcorner\", true);\ndefineSymbol(symbols_math, ams, symbols_close, \"\\u2518\", \"\\\\lrcorner\", true);\n\n// AMS Binary Relations\ndefineSymbol(symbols_math, ams, rel, \"\\u2266\", \"\\\\leqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7D\", \"\\\\leqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A95\", \"\\\\eqslantless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2272\", \"\\\\lesssim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A85\", \"\\\\lessapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224A\", \"\\\\approxeq\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D6\", \"\\\\lessdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\lll\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2276\", \"\\\\lessgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DA\", \"\\\\lesseqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8B\", \"\\\\lesseqqgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\doteqdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2253\", \"\\\\risingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2252\", \"\\\\fallingdotseq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223D\", \"\\\\backsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22CD\", \"\\\\backsimeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC5\", \"\\\\subseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D0\", \"\\\\Subset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u228F\", \"\\\\sqsubset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227C\", \"\\\\preccurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DE\", \"\\\\curlyeqprec\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227E\", \"\\\\precsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB7\", \"\\\\precapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B2\", \"\\\\vartriangleleft\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B4\", \"\\\\trianglelefteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A8\", \"\\\\vDash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22AA\", \"\\\\Vvdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2323\", \"\\\\smallsmile\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2322\", \"\\\\smallfrown\");\ndefineSymbol(symbols_math, ams, rel, \"\\u224F\", \"\\\\bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u224E\", \"\\\\Bumpeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2267\", \"\\\\geqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A7E\", \"\\\\geqslant\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A96\", \"\\\\eqslantgtr\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2273\", \"\\\\gtrsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A86\", \"\\\\gtrapprox\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D7\", \"\\\\gtrdot\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\ggg\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2277\", \"\\\\gtrless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DB\", \"\\\\gtreqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2A8C\", \"\\\\gtreqqless\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2256\", \"\\\\eqcirc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2257\", \"\\\\circeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u225C\", \"\\\\triangleq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u223C\", \"\\\\thicksim\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2248\", \"\\\\thickapprox\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2AC6\", \"\\\\supseteqq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D1\", \"\\\\Supset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2290\", \"\\\\sqsupset\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227D\", \"\\\\succcurlyeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22DF\", \"\\\\curlyeqsucc\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u227F\", \"\\\\succsim\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2AB8\", \"\\\\succapprox\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B3\", \"\\\\vartriangleright\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22B5\", \"\\\\trianglerighteq\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22A9\", \"\\\\Vdash\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2223\", \"\\\\shortmid\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2225\", \"\\\\shortparallel\");\ndefineSymbol(symbols_math, ams, rel, \"\\u226C\", \"\\\\between\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D4\", \"\\\\pitchfork\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u221D\", \"\\\\varpropto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25C0\", \"\\\\blacktriangleleft\");\n// unicode-math says that \\therefore is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(symbols_math, ams, rel, \"\\u2234\", \"\\\\therefore\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u220D\", \"\\\\backepsilon\");\ndefineSymbol(symbols_math, ams, rel, \"\\u25B6\", \"\\\\blacktriangleright\");\n// unicode-math says that \\because is a mathord atom.\n// We kept the amssymb atom type, which is rel.\ndefineSymbol(symbols_math, ams, rel, \"\\u2235\", \"\\\\because\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22D8\", \"\\\\llless\");\ndefineSymbol(symbols_math, ams, rel, \"\\u22D9\", \"\\\\gggtr\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B2\", \"\\\\lhd\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22B3\", \"\\\\rhd\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2242\", \"\\\\eqsim\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22C8\", \"\\\\Join\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2251\", \"\\\\Doteq\", true);\n\n// AMS Binary Operators\ndefineSymbol(symbols_math, ams, bin, \"\\u2214\", \"\\\\dotplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2216\", \"\\\\smallsetminus\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\Cap\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\Cup\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u2A5E\", \"\\\\doublebarwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229F\", \"\\\\boxminus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229E\", \"\\\\boxplus\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C7\", \"\\\\divideontimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C9\", \"\\\\ltimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CA\", \"\\\\rtimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CB\", \"\\\\leftthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CC\", \"\\\\rightthreetimes\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CF\", \"\\\\curlywedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22CE\", \"\\\\curlyvee\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229D\", \"\\\\circleddash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229B\", \"\\\\circledast\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22C5\", \"\\\\centerdot\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BA\", \"\\\\intercal\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22D2\", \"\\\\doublecap\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22D3\", \"\\\\doublecup\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22A0\", \"\\\\boxtimes\", true);\n\n// AMS Arrows\n// Note: unicode-math maps \\u21e2 to their own function \\rightdasharrow.\n// We'll map it to AMS function \\dashrightarrow. It produces the same atom.\ndefineSymbol(symbols_math, ams, rel, \"\\u21E2\", \"\\\\dashrightarrow\", true);\n// unicode-math maps \\u21e0 to \\leftdasharrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21E0\", \"\\\\dashleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C7\", \"\\\\leftleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C6\", \"\\\\leftrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DA\", \"\\\\Lleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u219E\", \"\\\\twoheadleftarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A2\", \"\\\\leftarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AB\", \"\\\\looparrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CB\", \"\\\\leftrightharpoons\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B6\", \"\\\\curvearrowleft\", true);\n// unicode-math maps \\u21ba to \\acwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21BA\", \"\\\\circlearrowleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B0\", \"\\\\Lsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C8\", \"\\\\upuparrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BF\", \"\\\\upharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C3\", \"\\\\downharpoonleft\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u22B8\", \"\\\\multimap\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AD\", \"\\\\leftrightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C9\", \"\\\\rightrightarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C4\", \"\\\\rightleftarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A0\", \"\\\\twoheadrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21A3\", \"\\\\rightarrowtail\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21AC\", \"\\\\looparrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B7\", \"\\\\curvearrowright\", true);\n// unicode-math maps \\u21bb to \\cwopencirclearrow. We'll use the AMS synonym.\ndefineSymbol(symbols_math, ams, rel, \"\\u21BB\", \"\\\\circlearrowright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21B1\", \"\\\\Rsh\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21CA\", \"\\\\downdownarrows\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\upharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21C2\", \"\\\\downharpoonright\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\rightsquigarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21DD\", \"\\\\leadsto\");\ndefineSymbol(symbols_math, ams, rel, \"\\u21DB\", \"\\\\Rrightarrow\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u21BE\", \"\\\\restriction\");\n\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_math, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\$\");\ndefineSymbol(symbols_text, main, symbols_textord, \"$\", \"\\\\textdollar\");\ndefineSymbol(symbols_math, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_text, main, symbols_textord, \"%\", \"\\\\%\");\ndefineSymbol(symbols_math, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\_\");\ndefineSymbol(symbols_text, main, symbols_textord, \"_\", \"\\\\textunderscore\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2220\", \"\\\\angle\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221E\", \"\\\\infty\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2032\", \"\\\\prime\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u25B3\", \"\\\\triangle\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0393\", \"\\\\Gamma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0394\", \"\\\\Delta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u0398\", \"\\\\Theta\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039B\", \"\\\\Lambda\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u039E\", \"\\\\Xi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A0\", \"\\\\Pi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A3\", \"\\\\Sigma\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A5\", \"\\\\Upsilon\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A6\", \"\\\\Phi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A8\", \"\\\\Psi\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u03A9\", \"\\\\Omega\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"A\", \"\\u0391\");\ndefineSymbol(symbols_math, main, symbols_textord, \"B\", \"\\u0392\");\ndefineSymbol(symbols_math, main, symbols_textord, \"E\", \"\\u0395\");\ndefineSymbol(symbols_math, main, symbols_textord, \"Z\", \"\\u0396\");\ndefineSymbol(symbols_math, main, symbols_textord, \"H\", \"\\u0397\");\ndefineSymbol(symbols_math, main, symbols_textord, \"I\", \"\\u0399\");\ndefineSymbol(symbols_math, main, symbols_textord, \"K\", \"\\u039A\");\ndefineSymbol(symbols_math, main, symbols_textord, \"M\", \"\\u039C\");\ndefineSymbol(symbols_math, main, symbols_textord, \"N\", \"\\u039D\");\ndefineSymbol(symbols_math, main, symbols_textord, \"O\", \"\\u039F\");\ndefineSymbol(symbols_math, main, symbols_textord, \"P\", \"\\u03A1\");\ndefineSymbol(symbols_math, main, symbols_textord, \"T\", \"\\u03A4\");\ndefineSymbol(symbols_math, main, symbols_textord, \"X\", \"\\u03A7\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\neg\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xAC\", \"\\\\lnot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A4\", \"\\\\top\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22A5\", \"\\\\bot\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2205\", \"\\\\emptyset\");\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2205\", \"\\\\varnothing\");\ndefineSymbol(symbols_math, main, mathord, \"\\u03B1\", \"\\\\alpha\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B2\", \"\\\\beta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B3\", \"\\\\gamma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B4\", \"\\\\delta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F5\", \"\\\\epsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B6\", \"\\\\zeta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B7\", \"\\\\eta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B8\", \"\\\\theta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B9\", \"\\\\iota\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BA\", \"\\\\kappa\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BB\", \"\\\\lambda\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BC\", \"\\\\mu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BD\", \"\\\\nu\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BE\", \"\\\\xi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03BF\", \"\\\\omicron\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C0\", \"\\\\pi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C1\", \"\\\\rho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C3\", \"\\\\sigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C4\", \"\\\\tau\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C5\", \"\\\\upsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D5\", \"\\\\phi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C7\", \"\\\\chi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C8\", \"\\\\psi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C9\", \"\\\\omega\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03B5\", \"\\\\varepsilon\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D1\", \"\\\\vartheta\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03D6\", \"\\\\varpi\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03F1\", \"\\\\varrho\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C2\", \"\\\\varsigma\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u03C6\", \"\\\\varphi\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2217\", \"*\");\ndefineSymbol(symbols_math, main, bin, \"+\", \"+\");\ndefineSymbol(symbols_math, main, bin, \"\\u2212\", \"-\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C5\", \"\\\\cdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2218\", \"\\\\circ\");\ndefineSymbol(symbols_math, main, bin, \"\\xF7\", \"\\\\div\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xB1\", \"\\\\pm\", true);\ndefineSymbol(symbols_math, main, bin, \"\\xD7\", \"\\\\times\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2229\", \"\\\\cap\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u222A\", \"\\\\cup\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2216\", \"\\\\setminus\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\land\");\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\lor\");\ndefineSymbol(symbols_math, main, bin, \"\\u2227\", \"\\\\wedge\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2228\", \"\\\\vee\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u221A\", \"\\\\surd\");\ndefineSymbol(symbols_math, main, symbols_open, \"(\", \"(\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"[\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u27E8\", \"\\\\langle\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2223\", \"\\\\lvert\");\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2225\", \"\\\\lVert\");\ndefineSymbol(symbols_math, main, symbols_close, \")\", \")\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"]\");\ndefineSymbol(symbols_math, main, symbols_close, \"?\", \"?\");\ndefineSymbol(symbols_math, main, symbols_close, \"!\", \"!\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u27E9\", \"\\\\rangle\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2223\", \"\\\\rvert\");\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2225\", \"\\\\rVert\");\ndefineSymbol(symbols_math, main, rel, \"=\", \"=\");\ndefineSymbol(symbols_math, main, rel, \"<\", \"<\");\ndefineSymbol(symbols_math, main, rel, \">\", \">\");\ndefineSymbol(symbols_math, main, rel, \":\", \":\");\ndefineSymbol(symbols_math, main, rel, \"\\u2248\", \"\\\\approx\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2245\", \"\\\\cong\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\ge\");\ndefineSymbol(symbols_math, main, rel, \"\\u2265\", \"\\\\geq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\gets\");\ndefineSymbol(symbols_math, main, rel, \">\", \"\\\\gt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2208\", \"\\\\in\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u0338\", \"\\\\@not\");\ndefineSymbol(symbols_math, main, rel, \"\\u2282\", \"\\\\subset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2283\", \"\\\\supset\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2286\", \"\\\\subseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2287\", \"\\\\supseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2288\", \"\\\\nsubseteq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2289\", \"\\\\nsupseteq\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u22A8\", \"\\\\models\");\ndefineSymbol(symbols_math, main, rel, \"\\u2190\", \"\\\\leftarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\le\");\ndefineSymbol(symbols_math, main, rel, \"\\u2264\", \"\\\\leq\", true);\ndefineSymbol(symbols_math, main, rel, \"<\", \"\\\\lt\");\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\rightarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2192\", \"\\\\to\");\ndefineSymbol(symbols_math, ams, rel, \"\\u2271\", \"\\\\ngeq\", true);\ndefineSymbol(symbols_math, ams, rel, \"\\u2270\", \"\\\\nleq\", true);\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\space\");\n// Ref: LaTeX Source 2e: \\DeclareRobustCommand{\\nobreakspace}{%\ndefineSymbol(symbols_math, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\space\");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\nobreakspace\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\nobreak\");\ndefineSymbol(symbols_math, main, spacing, null, \"\\\\allowbreak\");\ndefineSymbol(symbols_math, main, punct, \",\", \",\");\ndefineSymbol(symbols_math, main, punct, \";\", \";\");\ndefineSymbol(symbols_math, ams, bin, \"\\u22BC\", \"\\\\barwedge\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22BB\", \"\\\\veebar\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2299\", \"\\\\odot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2295\", \"\\\\oplus\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2297\", \"\\\\otimes\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2202\", \"\\\\partial\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u2298\", \"\\\\oslash\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u229A\", \"\\\\circledcirc\", true);\ndefineSymbol(symbols_math, ams, bin, \"\\u22A1\", \"\\\\boxdot\", true);\ndefineSymbol(symbols_math, main, bin, \"\\u25B3\", \"\\\\bigtriangleup\");\ndefineSymbol(symbols_math, main, bin, \"\\u25BD\", \"\\\\bigtriangledown\");\ndefineSymbol(symbols_math, main, bin, \"\\u2020\", \"\\\\dagger\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C4\", \"\\\\diamond\");\ndefineSymbol(symbols_math, main, bin, \"\\u22C6\", \"\\\\star\");\ndefineSymbol(symbols_math, main, bin, \"\\u25C3\", \"\\\\triangleleft\");\ndefineSymbol(symbols_math, main, bin, \"\\u25B9\", \"\\\\triangleright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\{\");\ndefineSymbol(symbols_text, main, symbols_textord, \"{\", \"\\\\textbraceleft\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\}\");\ndefineSymbol(symbols_text, main, symbols_textord, \"}\", \"\\\\textbraceright\");\ndefineSymbol(symbols_math, main, symbols_open, \"{\", \"\\\\lbrace\");\ndefineSymbol(symbols_math, main, symbols_close, \"}\", \"\\\\rbrace\");\ndefineSymbol(symbols_math, main, symbols_open, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"[\", \"\\\\lbrack\");\ndefineSymbol(symbols_math, main, symbols_close, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"]\", \"\\\\rbrack\");\ndefineSymbol(symbols_text, main, symbols_textord, \"<\", \"\\\\textless\"); // in T1 fontenc\ndefineSymbol(symbols_text, main, symbols_textord, \">\", \"\\\\textgreater\"); // in T1 fontenc\ndefineSymbol(symbols_math, main, symbols_open, \"\\u230A\", \"\\\\lfloor\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u230B\", \"\\\\rfloor\", true);\ndefineSymbol(symbols_math, main, symbols_open, \"\\u2308\", \"\\\\lceil\", true);\ndefineSymbol(symbols_math, main, symbols_close, \"\\u2309\", \"\\\\rceil\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\\\\", \"\\\\backslash\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2223\", \"\\\\vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"|\", \"\\\\textbar\"); // in T1 fontenc\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\|\");\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u2225\", \"\\\\Vert\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2225\", \"\\\\textbardbl\");\ndefineSymbol(symbols_text, main, symbols_textord, \"~\", \"\\\\textasciitilde\");\ndefineSymbol(symbols_math, main, rel, \"\\u2191\", \"\\\\uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D1\", \"\\\\Uparrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2193\", \"\\\\downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D3\", \"\\\\Downarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u2195\", \"\\\\updownarrow\", true);\ndefineSymbol(symbols_math, main, rel, \"\\u21D5\", \"\\\\Updownarrow\", true);\ndefineSymbol(symbols_math, main, op, \"\\u2210\", \"\\\\coprod\");\ndefineSymbol(symbols_math, main, op, \"\\u22C1\", \"\\\\bigvee\");\ndefineSymbol(symbols_math, main, op, \"\\u22C0\", \"\\\\bigwedge\");\ndefineSymbol(symbols_math, main, op, \"\\u2A04\", \"\\\\biguplus\");\ndefineSymbol(symbols_math, main, op, \"\\u22C2\", \"\\\\bigcap\");\ndefineSymbol(symbols_math, main, op, \"\\u22C3\", \"\\\\bigcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\int\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\intop\");\ndefineSymbol(symbols_math, main, op, \"\\u222C\", \"\\\\iint\");\ndefineSymbol(symbols_math, main, op, \"\\u222D\", \"\\\\iiint\");\ndefineSymbol(symbols_math, main, op, \"\\u220F\", \"\\\\prod\");\ndefineSymbol(symbols_math, main, op, \"\\u2211\", \"\\\\sum\");\ndefineSymbol(symbols_math, main, op, \"\\u2A02\", \"\\\\bigotimes\");\ndefineSymbol(symbols_math, main, op, \"\\u2A01\", \"\\\\bigoplus\");\ndefineSymbol(symbols_math, main, op, \"\\u2A00\", \"\\\\bigodot\");\ndefineSymbol(symbols_math, main, op, \"\\u222E\", \"\\\\oint\");\ndefineSymbol(symbols_math, main, op, \"\\u222F\", \"\\\\oiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2230\", \"\\\\oiiint\");\ndefineSymbol(symbols_math, main, op, \"\\u2A06\", \"\\\\bigsqcup\");\ndefineSymbol(symbols_math, main, op, \"\\u222B\", \"\\\\smallint\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\textellipsis\");\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\mathellipsis\");\ndefineSymbol(symbols_text, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u2026\", \"\\\\ldots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22EF\", \"\\\\@cdots\", true);\ndefineSymbol(symbols_math, main, symbols_inner, \"\\u22F1\", \"\\\\ddots\", true);\ndefineSymbol(symbols_math, main, symbols_textord, \"\\u22EE\", \"\\\\varvdots\"); // \\vdots is a macro\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CA\", \"\\\\acute\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02CB\", \"\\\\grave\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\xA8\", \"\\\\ddot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"~\", \"\\\\tilde\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C9\", \"\\\\bar\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D8\", \"\\\\breve\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02C7\", \"\\\\check\");\ndefineSymbol(symbols_math, main, symbols_accent, \"^\", \"\\\\hat\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u20D7\", \"\\\\vec\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02D9\", \"\\\\dot\");\ndefineSymbol(symbols_math, main, symbols_accent, \"\\u02DA\", \"\\\\mathring\");\ndefineSymbol(symbols_math, main, mathord, \"\\u0131\", \"\\\\imath\", true);\ndefineSymbol(symbols_math, main, mathord, \"\\u0237\", \"\\\\jmath\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0131\", \"\\\\i\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0237\", \"\\\\j\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xDF\", \"\\\\ss\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xE6\", \"\\\\ae\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0153\", \"\\\\oe\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xF8\", \"\\\\o\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xC6\", \"\\\\AE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u0152\", \"\\\\OE\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xD8\", \"\\\\O\", true);\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CA\", \"\\\\'\"); // acute\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02CB\", \"\\\\`\"); // grave\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C6\", \"\\\\^\"); // circumflex\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DC\", \"\\\\~\"); // tilde\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C9\", \"\\\\=\"); // macron\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D8\", \"\\\\u\"); // breve\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02D9\", \"\\\\.\"); // dot above\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DA\", \"\\\\r\"); // ring above\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02C7\", \"\\\\v\"); // caron\ndefineSymbol(symbols_text, main, symbols_accent, \"\\xA8\", '\\\\\"'); // diaresis\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u02DD\", \"\\\\H\"); // double acute\ndefineSymbol(symbols_text, main, symbols_accent, \"\\u25EF\", \"\\\\textcircled\"); // \\bigcirc glyph\n\n// These ligatures are detected and created in Parser.js's `formLigatures`.\nvar ligatures = {\n    \"--\": true,\n    \"---\": true,\n    \"``\": true,\n    \"''\": true\n};\n\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"--\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"\\\\textendash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"---\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"\\\\textemdash\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"`\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"\\\\textquoteleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"'\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"\\\\textquoteright\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"``\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"\\\\textquotedblleft\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"''\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"\\\\textquotedblright\");\n//  \\degree from gensymb package\ndefineSymbol(symbols_math, main, symbols_textord, \"\\xB0\", \"\\\\degree\", true);\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\degree\");\n// \\textdegree from inputenc package\ndefineSymbol(symbols_text, main, symbols_textord, \"\\xB0\", \"\\\\textdegree\", true);\n// TODO: In LaTeX, \\pounds can generate a different character in text and math\n// mode, but among our fonts, only Main-Italic defines this character \"163\".\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_math, main, mathord, \"\\xA3\", \"\\\\mathsterling\", true);\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\pounds\");\ndefineSymbol(symbols_text, main, mathord, \"\\xA3\", \"\\\\textsterling\", true);\ndefineSymbol(symbols_math, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\ndefineSymbol(symbols_text, ams, symbols_textord, \"\\u2720\", \"\\\\maltese\");\n\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"\\\\ \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \" \");\ndefineSymbol(symbols_text, main, spacing, \"\\xA0\", \"~\");\n\n// There are lots of symbols which are the same, so we add them in afterwards.\n// All of these are textords in math mode\nvar mathTextSymbols = \"0123456789/@.\\\"\";\nfor (var symbols_i = 0; symbols_i < mathTextSymbols.length; symbols_i++) {\n    var symbols_ch = mathTextSymbols.charAt(symbols_i);\n    defineSymbol(symbols_math, main, symbols_textord, symbols_ch, symbols_ch);\n}\n\n// All of these are textords in text mode\nvar textSymbols = \"0123456789!@*()-=+[]<>|\\\";:?/.,\";\nfor (var src_symbols_i = 0; src_symbols_i < textSymbols.length; src_symbols_i++) {\n    var _ch = textSymbols.charAt(src_symbols_i);\n    defineSymbol(symbols_text, main, symbols_textord, _ch, _ch);\n}\n\n// All of these are textords in text mode, and mathords in math mode\nvar letters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nfor (var symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {\n    var _ch2 = letters.charAt(symbols_i2);\n    defineSymbol(symbols_math, main, mathord, _ch2, _ch2);\n    defineSymbol(symbols_text, main, symbols_textord, _ch2, _ch2);\n}\n\n// The next loop loads wide (surrogate pair) characters.\n// We support some letters in the Unicode range U+1D400 to U+1D7FF,\n// Mathematical Alphanumeric Symbols.\n// Some editors do not deal well with wide characters. So don't write the\n// string into this file. Instead, create the string from the surrogate pair.\nvar symbols_wideChar = \"\";\nfor (var _i3 = 0; _i3 < letters.length; _i3++) {\n    var _ch3 = letters.charAt(_i3);\n\n    // The hex numbers in the next line are a surrogate pair.\n    // 0xD835 is the high surrogate for all letters in the range we support.\n    // 0xDC00 is the low surrogate for bold A.\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC00 + _i3); // A-Z a-z bold\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC34 + _i3); // A-Z a-z italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDC68 + _i3); // A-Z a-z bold italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDD04 + _i3); // A-Z a-z Fractur\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDDA0 + _i3); // A-Z a-z sans-serif\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDDD4 + _i3); // A-Z a-z sans bold\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDE08 + _i3); // A-Z a-z sans italic\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDE70 + _i3); // A-Z a-z monospace\n    defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n    if (_i3 < 26) {\n        // KaTeX fonts have only capital letters for blackboard bold and script.\n        // See exception for k below.\n        symbols_wideChar = String.fromCharCode(0xD835, 0xDD38 + _i3); // A-Z double struck\n        defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n        defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n\n        symbols_wideChar = String.fromCharCode(0xD835, 0xDC9C + _i3); // A-Z script\n        defineSymbol(symbols_math, main, mathord, _ch3, symbols_wideChar);\n        defineSymbol(symbols_text, main, symbols_textord, _ch3, symbols_wideChar);\n    }\n\n    // TODO: Add bold script when it is supported by a KaTeX font.\n}\n// \"k\" is the only double struck lower case letter in the KaTeX fonts.\nsymbols_wideChar = String.fromCharCode(0xD835, 0xDD5C); // k double struck\ndefineSymbol(symbols_math, main, mathord, \"k\", symbols_wideChar);\ndefineSymbol(symbols_text, main, symbols_textord, \"k\", symbols_wideChar);\n\n// Next, some wide character numerals\nfor (var _i4 = 0; _i4 < 10; _i4++) {\n    var _ch4 = _i4.toString();\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFCE + _i4); // 0-9 bold\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFE2 + _i4); // 0-9 sans serif\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFEC + _i4); // 0-9 bold sans\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n\n    symbols_wideChar = String.fromCharCode(0xD835, 0xDFF6 + _i4); // 0-9 monospace\n    defineSymbol(symbols_math, main, mathord, _ch4, symbols_wideChar);\n    defineSymbol(symbols_text, main, symbols_textord, _ch4, symbols_wideChar);\n}\n\n// We add these Latin-1 letters as symbols for backwards-compatibility,\n// but they are not actually in the font, nor are they supported by the\n// Unicode accent mechanism, so they fall back to Times font and look ugly.\n// TODO(edemaine): Fix this.\nvar extraLatin = \"ÇÐÞçþ\";\nfor (var _i5 = 0; _i5 < extraLatin.length; _i5++) {\n    var _ch5 = extraLatin.charAt(_i5);\n    defineSymbol(symbols_math, main, mathord, _ch5, _ch5);\n    defineSymbol(symbols_text, main, symbols_textord, _ch5, _ch5);\n}\ndefineSymbol(symbols_text, main, symbols_textord, \"ð\", \"ð\");\n\n// Unicode versions of existing characters\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2013\", \"–\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2014\", \"—\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2018\", \"‘\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u2019\", \"’\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201C\", \"“\");\ndefineSymbol(symbols_text, main, symbols_textord, \"\\u201D\", \"”\");\n// CONCATENATED MODULE: ./src/wide-character.js\n\n\n\n/**\n * Data below is from https://www.unicode.org/charts/PDF/U1D400.pdf\n * That document sorts characters into groups by font type, say bold or italic.\n *\n * In the arrays below, each subarray consists three elements:\n *      * The CSS class of that group when in math mode.\n *      * The CSS class of that group when in text mode.\n *      * The font name, so that KaTeX can get font metrics.\n */\n\n/**\n * This file provides support for Unicode range U+1D400 to U+1D7FF,\n * Mathematical Alphanumeric Symbols.\n *\n * Function wideCharacterFont takes a wide character as input and returns\n * the font information necessary to render it properly.\n */\n\nvar wideLatinLetterData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // A-Z bold upright\n[\"mathbf\", \"textbf\", \"Main-Bold\"], // a-z bold upright\n\n[\"mathit\", \"textit\", \"Math-Italic\"], // A-Z italic\n[\"mathit\", \"textit\", \"Math-Italic\"], // a-z italic\n\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // A-Z bold italic\n[\"boldsymbol\", \"boldsymbol\", \"Main-BoldItalic\"], // a-z bold italic\n\n// Map fancy A-Z letters to script, not calligraphic.\n// This aligns with unicode-math and math fonts (except Cambria Math).\n[\"mathscr\", \"textscr\", \"Script-Regular\"], // A-Z script\n[\"\", \"\", \"\"], // a-z script.  No font\n\n[\"\", \"\", \"\"], // A-Z bold script. No font\n[\"\", \"\", \"\"], // a-z bold script. No font\n\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // A-Z Fraktur\n[\"mathfrak\", \"textfrak\", \"Fraktur-Regular\"], // a-z Fraktur\n\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // A-Z double-struck\n[\"mathbb\", \"textbb\", \"AMS-Regular\"], // k double-struck\n\n[\"\", \"\", \"\"], // A-Z bold Fraktur No font metrics\n[\"\", \"\", \"\"], // a-z bold Fraktur.   No font.\n\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // A-Z sans-serif\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // a-z sans-serif\n\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // A-Z bold sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // a-z bold sans-serif\n\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // A-Z italic sans-serif\n[\"mathitsf\", \"textitsf\", \"SansSerif-Italic\"], // a-z italic sans-serif\n\n[\"\", \"\", \"\"], // A-Z bold italic sans. No font\n[\"\", \"\", \"\"], // a-z bold italic sans. No font\n\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"], // A-Z monospace\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\n\nvar wideNumeralData = [[\"mathbf\", \"textbf\", \"Main-Bold\"], // 0-9 bold\n[\"\", \"\", \"\"], // 0-9 double-struck. No KaTeX font.\n[\"mathsf\", \"textsf\", \"SansSerif-Regular\"], // 0-9 sans-serif\n[\"mathboldsf\", \"textboldsf\", \"SansSerif-Bold\"], // 0-9 bold sans-serif\n[\"mathtt\", \"texttt\", \"Typewriter-Regular\"]];\n\nvar wide_character_wideCharacterFont = function wideCharacterFont(wideChar, mode) {\n\n    // IE doesn't support codePointAt(). So work with the surrogate pair.\n    var H = wideChar.charCodeAt(0); // high surrogate\n    var L = wideChar.charCodeAt(1); // low surrogate\n    var codePoint = (H - 0xD800) * 0x400 + (L - 0xDC00) + 0x10000;\n\n    var j = mode === \"math\" ? 0 : 1; // column index for CSS class.\n\n    if (0x1D400 <= codePoint && codePoint < 0x1D6A4) {\n        // wideLatinLetterData contains exactly 26 chars on each row.\n        // So we can calculate the relevant row. No traverse necessary.\n        var i = Math.floor((codePoint - 0x1D400) / 26);\n        return [wideLatinLetterData[i][2], wideLatinLetterData[i][j]];\n    } else if (0x1D7CE <= codePoint && codePoint <= 0x1D7FF) {\n        // Numerals, ten per row.\n        var _i = Math.floor((codePoint - 0x1D7CE) / 10);\n        return [wideNumeralData[_i][2], wideNumeralData[_i][j]];\n    } else if (codePoint === 0x1D6A5 || codePoint === 0x1D6A6) {\n        // dotless i or j\n        return [wideLatinLetterData[0][2], wideLatinLetterData[0][j]];\n    } else if (0x1D6A6 < codePoint && codePoint < 0x1D7CE) {\n        // Greek letters. Not supported, yet.\n        return [\"\", \"\"];\n    } else {\n        // We don't support any wide characters outside 1D400–1D7FF.\n        throw new src_ParseError(\"Unsupported character: \" + wideChar);\n    }\n};\n// CONCATENATED MODULE: ./src/Options.js\n\n\n/**\n * This file contains information about the options that the Parser carries\n * around with it while parsing. Data is held in an `Options` object, and when\n * recursing, a new `Options` object can be created with the `.with*` and\n * `.reset` functions.\n */\n\n\n\n\nvar sizeStyleMap = [\n// Each element contains [textsize, scriptsize, scriptscriptsize].\n// The size mappings are taken from TeX with \\normalsize=10pt.\n[1, 1, 1], // size1: [5, 5, 5]              \\tiny\n[2, 1, 1], // size2: [6, 5, 5]\n[3, 1, 1], // size3: [7, 5, 5]              \\scriptsize\n[4, 2, 1], // size4: [8, 6, 5]              \\footnotesize\n[5, 2, 1], // size5: [9, 6, 5]              \\small\n[6, 3, 1], // size6: [10, 7, 5]             \\normalsize\n[7, 4, 2], // size7: [12, 8, 6]             \\large\n[8, 6, 3], // size8: [14.4, 10, 7]          \\Large\n[9, 7, 6], // size9: [17.28, 12, 10]        \\LARGE\n[10, 8, 7], // size10: [20.74, 14.4, 12]     \\huge\n[11, 10, 9]];\n\nvar sizeMultipliers = [\n// fontMetrics.js:getGlobalMetrics also uses size indexes, so if\n// you change size indexes, change that function.\n0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.2, 1.44, 1.728, 2.074, 2.488];\n\nvar sizeAtStyle = function sizeAtStyle(size, style) {\n    return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];\n};\n\n/**\n * This is the main options class. It contains the current style, size, color,\n * and font.\n *\n * Options objects should not be modified. To create a new Options with\n * different properties, call a `.having*` method.\n */\nvar Options_Options = function () {\n    // A font family applies to a group of fonts (i.e. SansSerif), while a font\n    // represents a specific font (i.e. SansSerif Bold).\n    // See: https://tex.stackexchange.com/questions/22350/difference-between-textrm-and-mathrm\n    function Options(data) {\n        classCallCheck_default()(this, Options);\n\n        this.style = data.style;\n        this.color = data.color;\n        this.size = data.size || Options.BASESIZE;\n        this.textSize = data.textSize || this.size;\n        this.phantom = !!data.phantom;\n        this.font = data.font || \"\";\n        this.fontFamily = data.fontFamily || \"\";\n        this.fontWeight = data.fontWeight || '';\n        this.fontShape = data.fontShape || '';\n        this.sizeMultiplier = sizeMultipliers[this.size - 1];\n        this.maxSize = data.maxSize;\n        this._fontMetrics = undefined;\n    }\n\n    /**\n     * Returns a new options object with the same properties as \"this\".  Properties\n     * from \"extension\" will be copied to the new options object.\n     */\n\n\n    /**\n     * The base size index.\n     */\n\n\n    Options.prototype.extend = function extend(extension) {\n        var data = {\n            style: this.style,\n            size: this.size,\n            textSize: this.textSize,\n            color: this.color,\n            phantom: this.phantom,\n            font: this.font,\n            fontFamily: this.fontFamily,\n            fontWeight: this.fontWeight,\n            fontShape: this.fontShape,\n            maxSize: this.maxSize\n        };\n\n        for (var key in extension) {\n            if (extension.hasOwnProperty(key)) {\n                data[key] = extension[key];\n            }\n        }\n\n        return new Options(data);\n    };\n\n    /**\n     * Return an options object with the given style. If `this.style === style`,\n     * returns `this`.\n     */\n\n\n    Options.prototype.havingStyle = function havingStyle(style) {\n        if (this.style === style) {\n            return this;\n        } else {\n            return this.extend({\n                style: style,\n                size: sizeAtStyle(this.textSize, style)\n            });\n        }\n    };\n\n    /**\n     * Return an options object with a cramped version of the current style. If\n     * the current style is cramped, returns `this`.\n     */\n\n\n    Options.prototype.havingCrampedStyle = function havingCrampedStyle() {\n        return this.havingStyle(this.style.cramp());\n    };\n\n    /**\n     * Return an options object with the given size and in at least `\\textstyle`.\n     * Returns `this` if appropriate.\n     */\n\n\n    Options.prototype.havingSize = function havingSize(size) {\n        if (this.size === size && this.textSize === size) {\n            return this;\n        } else {\n            return this.extend({\n                style: this.style.text(),\n                size: size,\n                textSize: size,\n                sizeMultiplier: sizeMultipliers[size - 1]\n            });\n        }\n    };\n\n    /**\n     * Like `this.havingSize(BASESIZE).havingStyle(style)`. If `style` is omitted,\n     * changes to at least `\\textstyle`.\n     */\n\n\n    Options.prototype.havingBaseStyle = function havingBaseStyle(style) {\n        style = style || this.style.text();\n        var wantSize = sizeAtStyle(Options.BASESIZE, style);\n        if (this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style) {\n            return this;\n        } else {\n            return this.extend({\n                style: style,\n                size: wantSize\n            });\n        }\n    };\n\n    /**\n     * Remove the effect of sizing changes such as \\Huge.\n     * Keep the effect of the current style, such as \\scriptstyle.\n     */\n\n\n    Options.prototype.havingBaseSizing = function havingBaseSizing() {\n        var size = void 0;\n        switch (this.style.id) {\n            case 4:\n            case 5:\n                size = 3; // normalsize in scriptstyle\n                break;\n            case 6:\n            case 7:\n                size = 1; // normalsize in scriptscriptstyle\n                break;\n            default:\n                size = 6; // normalsize in textstyle or displaystyle\n        }\n        return this.extend({\n            style: this.style.text(),\n            size: size\n        });\n    };\n\n    /**\n     * Create a new options object with the given color.\n     */\n\n\n    Options.prototype.withColor = function withColor(color) {\n        return this.extend({\n            color: color\n        });\n    };\n\n    /**\n     * Create a new options object with \"phantom\" set to true.\n     */\n\n\n    Options.prototype.withPhantom = function withPhantom() {\n        return this.extend({\n            phantom: true\n        });\n    };\n\n    /**\n     * Creates a new options object with the given math font or old text font.\n     * @type {[type]}\n     */\n\n\n    Options.prototype.withFont = function withFont(font) {\n        return this.extend({\n            font: font\n        });\n    };\n\n    /**\n     * Create a new options objects with the given fontFamily.\n     */\n\n\n    Options.prototype.withTextFontFamily = function withTextFontFamily(fontFamily) {\n        return this.extend({\n            fontFamily: fontFamily,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Creates a new options object with the given font weight\n     */\n\n\n    Options.prototype.withTextFontWeight = function withTextFontWeight(fontWeight) {\n        return this.extend({\n            fontWeight: fontWeight,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Creates a new options object with the given font weight\n     */\n\n\n    Options.prototype.withTextFontShape = function withTextFontShape(fontShape) {\n        return this.extend({\n            fontShape: fontShape,\n            font: \"\"\n        });\n    };\n\n    /**\n     * Return the CSS sizing classes required to switch from enclosing options\n     * `oldOptions` to `this`. Returns an array of classes.\n     */\n\n\n    Options.prototype.sizingClasses = function sizingClasses(oldOptions) {\n        if (oldOptions.size !== this.size) {\n            return [\"sizing\", \"reset-size\" + oldOptions.size, \"size\" + this.size];\n        } else {\n            return [];\n        }\n    };\n\n    /**\n     * Return the CSS sizing classes required to switch to the base size. Like\n     * `this.havingSize(BASESIZE).sizingClasses(this)`.\n     */\n\n\n    Options.prototype.baseSizingClasses = function baseSizingClasses() {\n        if (this.size !== Options.BASESIZE) {\n            return [\"sizing\", \"reset-size\" + this.size, \"size\" + Options.BASESIZE];\n        } else {\n            return [];\n        }\n    };\n\n    /**\n     * Return the font metrics for this size.\n     */\n\n\n    Options.prototype.fontMetrics = function fontMetrics() {\n        if (!this._fontMetrics) {\n            this._fontMetrics = getGlobalMetrics(this.size);\n        }\n        return this._fontMetrics;\n    };\n\n    /**\n     * A map of color names to CSS colors.\n     * TODO(emily): Remove this when we have real macros\n     */\n\n\n    /**\n     * Gets the CSS color of the current options object, accounting for the\n     * `colorMap`.\n     */\n    Options.prototype.getColor = function getColor() {\n        if (this.phantom) {\n            return \"transparent\";\n        } else if (this.color != null && Options.colorMap.hasOwnProperty(this.color)) {\n            return Options.colorMap[this.color];\n        } else {\n            return this.color;\n        }\n    };\n\n    return Options;\n}();\n\nOptions_Options.BASESIZE = 6;\nOptions_Options.colorMap = {\n    \"katex-blue\": \"#6495ed\",\n    \"katex-orange\": \"#ffa500\",\n    \"katex-pink\": \"#ff00af\",\n    \"katex-red\": \"#df0030\",\n    \"katex-green\": \"#28ae7b\",\n    \"katex-gray\": \"gray\",\n    \"katex-purple\": \"#9d38bd\",\n    \"katex-blueA\": \"#ccfaff\",\n    \"katex-blueB\": \"#80f6ff\",\n    \"katex-blueC\": \"#63d9ea\",\n    \"katex-blueD\": \"#11accd\",\n    \"katex-blueE\": \"#0c7f99\",\n    \"katex-tealA\": \"#94fff5\",\n    \"katex-tealB\": \"#26edd5\",\n    \"katex-tealC\": \"#01d1c1\",\n    \"katex-tealD\": \"#01a995\",\n    \"katex-tealE\": \"#208170\",\n    \"katex-greenA\": \"#b6ffb0\",\n    \"katex-greenB\": \"#8af281\",\n    \"katex-greenC\": \"#74cf70\",\n    \"katex-greenD\": \"#1fab54\",\n    \"katex-greenE\": \"#0d923f\",\n    \"katex-goldA\": \"#ffd0a9\",\n    \"katex-goldB\": \"#ffbb71\",\n    \"katex-goldC\": \"#ff9c39\",\n    \"katex-goldD\": \"#e07d10\",\n    \"katex-goldE\": \"#a75a05\",\n    \"katex-redA\": \"#fca9a9\",\n    \"katex-redB\": \"#ff8482\",\n    \"katex-redC\": \"#f9685d\",\n    \"katex-redD\": \"#e84d39\",\n    \"katex-redE\": \"#bc2612\",\n    \"katex-maroonA\": \"#ffbde0\",\n    \"katex-maroonB\": \"#ff92c6\",\n    \"katex-maroonC\": \"#ed5fa6\",\n    \"katex-maroonD\": \"#ca337c\",\n    \"katex-maroonE\": \"#9e034e\",\n    \"katex-purpleA\": \"#ddd7ff\",\n    \"katex-purpleB\": \"#c6b9fc\",\n    \"katex-purpleC\": \"#aa87ff\",\n    \"katex-purpleD\": \"#7854ab\",\n    \"katex-purpleE\": \"#543b78\",\n    \"katex-mintA\": \"#f5f9e8\",\n    \"katex-mintB\": \"#edf2df\",\n    \"katex-mintC\": \"#e0e5cc\",\n    \"katex-grayA\": \"#f6f7f7\",\n    \"katex-grayB\": \"#f0f1f2\",\n    \"katex-grayC\": \"#e3e5e6\",\n    \"katex-grayD\": \"#d6d8da\",\n    \"katex-grayE\": \"#babec2\",\n    \"katex-grayF\": \"#888d93\",\n    \"katex-grayG\": \"#626569\",\n    \"katex-grayH\": \"#3b3e40\",\n    \"katex-grayI\": \"#21242c\",\n    \"katex-kaBlue\": \"#314453\",\n    \"katex-kaGreen\": \"#71B307\"\n};\n\n\n/* harmony default export */ var src_Options = (Options_Options);\n// CONCATENATED MODULE: ./src/units.js\n\n\n/**\n * This file does conversion between units.  In particular, it provides\n * calculateSize to convert other units into ems.\n */\n\n\n\n\n// This table gives the number of TeX pts in one of each *absolute* TeX unit.\n// Thus, multiplying a length by this number converts the length from units\n// into pts.  Dividing the result by ptPerEm gives the number of ems\n// *assuming* a font size of ptPerEm (normal size, normal style).\nvar ptPerUnit = {\n    // https://en.wikibooks.org/wiki/LaTeX/Lengths and\n    // https://tex.stackexchange.com/a/8263\n    \"pt\": 1, // TeX point\n    \"mm\": 7227 / 2540, // millimeter\n    \"cm\": 7227 / 254, // centimeter\n    \"in\": 72.27, // inch\n    \"bp\": 803 / 800, // big (PostScript) points\n    \"pc\": 12, // pica\n    \"dd\": 1238 / 1157, // didot\n    \"cc\": 14856 / 1157, // cicero (12 didot)\n    \"nd\": 685 / 642, // new didot\n    \"nc\": 1370 / 107, // new cicero (12 new didot)\n    \"sp\": 1 / 65536, // scaled point (TeX's internal smallest unit)\n    // https://tex.stackexchange.com/a/41371\n    \"px\": 803 / 800 // \\pdfpxdimen defaults to 1 bp in pdfTeX and LuaTeX\n};\n\n// Dictionary of relative units, for fast validity testing.\nvar relativeUnit = {\n    \"ex\": true,\n    \"em\": true,\n    \"mu\": true\n};\n\n/**\n * Determine whether the specified unit (either a string defining the unit\n * or a \"size\" parse node containing a unit field) is valid.\n */\nvar validUnit = function validUnit(unit) {\n    if (typeof unit !== \"string\") {\n        unit = unit.unit;\n    }\n    return unit in ptPerUnit || unit in relativeUnit || unit === \"ex\";\n};\n\n/*\n * Convert a \"size\" parse node (with numeric \"number\" and string \"unit\" fields,\n * as parsed by functions.js argType \"size\") into a CSS em value for the\n * current style/scale.  `options` gives the current options.\n */\nvar units_calculateSize = function calculateSize(sizeValue, options) {\n    var scale = void 0;\n    if (sizeValue.unit in ptPerUnit) {\n        // Absolute units\n        scale = ptPerUnit[sizeValue.unit] // Convert unit to pt\n        / options.fontMetrics().ptPerEm // Convert pt to CSS em\n        / options.sizeMultiplier; // Unscale to make absolute units\n    } else if (sizeValue.unit === \"mu\") {\n        // `mu` units scale with scriptstyle/scriptscriptstyle.\n        scale = options.fontMetrics().cssEmPerMu;\n    } else {\n        // Other relative units always refer to the *textstyle* font\n        // in the current size.\n        var unitOptions = void 0;\n        if (options.style.isTight()) {\n            // isTight() means current style is script/scriptscript.\n            unitOptions = options.havingStyle(options.style.text());\n        } else {\n            unitOptions = options;\n        }\n        // TODO: In TeX these units are relative to the quad of the current\n        // *text* font, e.g. cmr10. KaTeX instead uses values from the\n        // comparably-sized *Computer Modern symbol* font. At 10pt, these\n        // match. At 7pt and 5pt, they differ: cmr7=1.138894, cmsy7=1.170641;\n        // cmr5=1.361133, cmsy5=1.472241. Consider $\\scriptsize a\\kern1emb$.\n        // TeX \\showlists shows a kern of 1.13889 * fontsize;\n        // KaTeX shows a kern of 1.171 * fontsize.\n        if (sizeValue.unit === \"ex\") {\n            scale = unitOptions.fontMetrics().xHeight;\n        } else if (sizeValue.unit === \"em\") {\n            scale = unitOptions.fontMetrics().quad;\n        } else {\n            throw new src_ParseError(\"Invalid unit: '\" + sizeValue.unit + \"'\");\n        }\n        if (unitOptions !== options) {\n            scale *= unitOptions.sizeMultiplier / options.sizeMultiplier;\n        }\n    }\n    return Math.min(sizeValue.number * scale, options.maxSize);\n};\n// CONCATENATED MODULE: ./src/buildCommon.js\n\n/* eslint no-console:0 */\n/**\n * This module contains general functions that can be used for building\n * different kinds of domTree nodes in a consistent manner.\n */\n\n\n\n\n\n\n\n\n\n// The following have to be loaded from Main-Italic font, using class mainit\nvar mainitLetters = [\"\\\\imath\", \"ı\", // dotless i\n\"\\\\jmath\", \"ȷ\", // dotless j\n\"\\\\pounds\", \"\\\\mathsterling\", \"\\\\textsterling\", \"£\"];\n\n/**\n * Looks up the given symbol in fontMetrics, after applying any symbol\n * replacements defined in symbol.js\n */\nvar buildCommon_lookupSymbol = function lookupSymbol(value,\n// TODO(#963): Use a union type for this.\nfontName, mode) {\n    // Replace the value with its replaced value from symbol.js\n    if (src_symbols[mode][value] && src_symbols[mode][value].replace) {\n        value = src_symbols[mode][value].replace;\n    }\n    return {\n        value: value,\n        metrics: getCharacterMetrics(value, fontName, mode)\n    };\n};\n\n/**\n * Makes a symbolNode after translation via the list of symbols in symbols.js.\n * Correctly pulls out metrics for the character, and optionally takes a list of\n * classes to be attached to the node.\n *\n * TODO: make argument order closer to makeSpan\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\nvar buildCommon_makeSymbol = function makeSymbol(value, fontName, mode, options, classes) {\n    var lookup = buildCommon_lookupSymbol(value, fontName, mode);\n    var metrics = lookup.metrics;\n    value = lookup.value;\n\n    var symbolNode = void 0;\n    if (metrics) {\n        var italic = metrics.italic;\n        if (mode === \"text\") {\n            italic = 0;\n        }\n        symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);\n    } else {\n        // TODO(emily): Figure out a good way to only print this in development\n        typeof console !== \"undefined\" && console.warn(\"No character metrics for '\" + value + \"' in style '\" + fontName + \"'\");\n        symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);\n    }\n\n    if (options) {\n        symbolNode.maxFontSize = options.sizeMultiplier;\n        if (options.style.isTight()) {\n            symbolNode.classes.push(\"mtight\");\n        }\n        var color = options.getColor();\n        if (color) {\n            symbolNode.style.color = color;\n        }\n    }\n\n    return symbolNode;\n};\n\n/**\n * Makes a symbol in Main-Regular or AMS-Regular.\n * Used for rel, bin, open, close, inner, and punct.\n *\n * TODO(#953): Make `options` mandatory and always pass it in.\n */\nvar buildCommon_mathsym = function mathsym(value, mode, options) {\n    var classes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    // Decide what font to render the symbol in by its entry in the symbols\n    // table.\n    // Have a special case for when the value = \\ because the \\ is used as a\n    // textord in unsupported command errors but cannot be parsed as a regular\n    // text ordinal and is therefore not present as a symbol in the symbols\n    // table for text, as well as a special case for boldsymbol because it\n    // can be used for bold + and -\n    if (options && options.font && options.font === \"boldsymbol\" && buildCommon_lookupSymbol(value, \"Main-Bold\", mode).metrics) {\n        return buildCommon_makeSymbol(value, \"Main-Bold\", mode, options, classes.concat([\"mathbf\"]));\n    } else if (value === \"\\\\\" || src_symbols[mode][value].font === \"main\") {\n        return buildCommon_makeSymbol(value, \"Main-Regular\", mode, options, classes);\n    } else {\n        return buildCommon_makeSymbol(value, \"AMS-Regular\", mode, options, classes.concat([\"amsrm\"]));\n    }\n};\n\n/**\n * Makes a symbol in the default font for mathords and textords.\n */\nvar buildCommon_mathDefault = function mathDefault(value, mode, options, classes, type) {\n    if (type === \"mathord\") {\n        var fontLookup = buildCommon_mathit(value, mode, options, classes);\n        return buildCommon_makeSymbol(value, fontLookup.fontName, mode, options, classes.concat([fontLookup.fontClass]));\n    } else if (type === \"textord\") {\n        var font = src_symbols[mode][value] && src_symbols[mode][value].font;\n        if (font === \"ams\") {\n            var _fontName = retrieveTextFontName(\"amsrm\", options.fontWeight, options.fontShape);\n            return buildCommon_makeSymbol(value, _fontName, mode, options, classes.concat(\"amsrm\", options.fontWeight, options.fontShape));\n        } else if (font === \"main\" || !font) {\n            var _fontName2 = retrieveTextFontName(\"textrm\", options.fontWeight, options.fontShape);\n            return buildCommon_makeSymbol(value, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));\n        } else {\n            // fonts added by plugins\n            var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape);\n            // We add font name as a css class\n            return buildCommon_makeSymbol(value, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));\n        }\n    } else {\n        throw new Error(\"unexpected type: \" + type + \" in mathDefault\");\n    }\n};\n\n/**\n * Determines which of the two font names (Main-Italic and Math-Italic) and\n * corresponding style tags (mainit or mathit) to use for font \"mathit\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"mathit\".\n */\nvar buildCommon_mathit = function mathit(value, mode, options, classes) {\n    if (/[0-9]/.test(value.charAt(0)) ||\n    // glyphs for \\imath and \\jmath do not exist in Math-Italic so we\n    // need to use Main-Italic instead\n    utils.contains(mainitLetters, value)) {\n        return {\n            fontName: \"Main-Italic\",\n            fontClass: \"mainit\"\n        };\n    } else {\n        return {\n            fontName: \"Math-Italic\",\n            fontClass: \"mathit\"\n        };\n    }\n};\n\n/**\n * Determines which of the two font names (Main-Bold and Math-BoldItalic) and\n * corresponding style tags (mathbf or boldsymbol) to use for font \"boldsymbol\",\n * depending on the symbol.  Use this function instead of fontMap for font\n * \"boldsymbol\".\n */\nvar boldsymbol = function boldsymbol(value, mode, options, classes) {\n    if (buildCommon_lookupSymbol(value, \"Math-BoldItalic\", mode).metrics) {\n        return {\n            fontName: \"Math-BoldItalic\",\n            fontClass: \"boldsymbol\"\n        };\n    } else {\n        // Some glyphs do not exist in Math-BoldItalic so we need to use\n        // Main-Bold instead.\n        return {\n            fontName: \"Main-Bold\",\n            fontClass: \"mathbf\"\n        };\n    }\n};\n\n/**\n * Makes either a mathord or textord in the correct font and color.\n */\nvar buildCommon_makeOrd = function makeOrd(group, options, type) {\n    var mode = group.mode;\n    var text = group.text;\n\n    var classes = [\"mord\"];\n\n    // Math mode or Old font (i.e. \\rm)\n    var isFont = mode === \"math\" || mode === \"text\" && options.font;\n    var fontOrFamily = isFont ? options.font : options.fontFamily;\n    if (text.charCodeAt(0) === 0xD835) {\n        // surrogate pairs get special treatment\n        var _wideCharacterFont = wide_character_wideCharacterFont(text, mode),\n            wideFontName = _wideCharacterFont[0],\n            wideFontClass = _wideCharacterFont[1];\n\n        return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));\n    } else if (fontOrFamily) {\n        var _fontName4 = void 0;\n        var fontClasses = void 0;\n        if (fontOrFamily === \"boldsymbol\") {\n            var fontData = boldsymbol(text, mode, options, classes);\n            _fontName4 = fontData.fontName;\n            fontClasses = [fontData.fontClass];\n        } else if (fontOrFamily === \"mathit\" || utils.contains(mainitLetters, text)) {\n            var _fontData = buildCommon_mathit(text, mode, options, classes);\n            _fontName4 = _fontData.fontName;\n            fontClasses = [_fontData.fontClass];\n        } else if (isFont) {\n            _fontName4 = fontMap[fontOrFamily].fontName;\n            fontClasses = [fontOrFamily];\n        } else {\n            _fontName4 = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape);\n            fontClasses = [fontOrFamily, options.fontWeight, options.fontShape];\n        }\n\n        if (buildCommon_lookupSymbol(text, _fontName4, mode).metrics) {\n            return buildCommon_makeSymbol(text, _fontName4, mode, options, classes.concat(fontClasses));\n        } else if (ligatures.hasOwnProperty(text) && _fontName4.substr(0, 10) === \"Typewriter\") {\n            // Deconstruct ligatures in monospace fonts (\\texttt, \\tt).\n            var parts = [];\n            for (var i = 0; i < text.length; i++) {\n                parts.push(buildCommon_makeSymbol(text[i], _fontName4, mode, options, classes.concat(fontClasses)));\n            }\n            return buildCommon_makeFragment(parts);\n        } else {\n            return buildCommon_mathDefault(text, mode, options, classes, type);\n        }\n    } else {\n        return buildCommon_mathDefault(text, mode, options, classes, type);\n    }\n};\n\n/**\n * Combine as many characters as possible in the given array of characters\n * via their tryCombine method.\n */\nvar tryCombineChars = function tryCombineChars(chars) {\n    for (var i = 0; i < chars.length - 1; i++) {\n        if (chars[i].tryCombine(chars[i + 1])) {\n            chars.splice(i + 1, 1);\n            i--;\n        }\n    }\n    return chars;\n};\n\n/**\n * Calculate the height, depth, and maxFontSize of an element based on its\n * children.\n */\nvar sizeElementFromChildren = function sizeElementFromChildren(elem) {\n    var height = 0;\n    var depth = 0;\n    var maxFontSize = 0;\n\n    for (var i = 0; i < elem.children.length; i++) {\n        var child = elem.children[i];\n        if (child.height > height) {\n            height = child.height;\n        }\n        if (child.depth > depth) {\n            depth = child.depth;\n        }\n        if (child.maxFontSize > maxFontSize) {\n            maxFontSize = child.maxFontSize;\n        }\n    }\n\n    elem.height = height;\n    elem.depth = depth;\n    elem.maxFontSize = maxFontSize;\n};\n\n/**\n * Makes a span with the given list of classes, list of children, and options.\n *\n * TODO(#953): Ensure that `options` is always provided (currently some call\n * sites don't pass it) and make the type below mandatory.\n * TODO: add a separate argument for math class (e.g. `mop`, `mbin`), which\n * should if present come first in `classes`.\n */\nvar buildCommon_makeSpan = function makeSpan(classes, children, options, style) {\n    var span = new domTree_Span(classes, children, options, style);\n\n    sizeElementFromChildren(span);\n\n    return span;\n};\n\n// SVG one is simpler -- doesn't require height, depth, max-font setting.\n// This is also a separate method for typesafety.\nvar buildCommon_makeSvgSpan = function makeSvgSpan(classes, children, options, style) {\n    return new domTree_Span(classes, children, options, style);\n};\n\nvar makeLineSpan = function makeLineSpan(className, options, thickness) {\n    var line = buildCommon_makeSpan([className], [], options);\n    line.height = thickness || options.fontMetrics().defaultRuleThickness;\n    line.style.borderBottomWidth = line.height + \"em\";\n    line.maxFontSize = 1.0;\n    return line;\n};\n\n/**\n * Makes an anchor with the given href, list of classes, list of children,\n * and options.\n */\nvar buildCommon_makeAnchor = function makeAnchor(href, classes, children, options) {\n    var anchor = new domTree_Anchor(href, classes, children, options);\n\n    sizeElementFromChildren(anchor);\n\n    return anchor;\n};\n\n/**\n * Makes a document fragment with the given list of children.\n */\nvar buildCommon_makeFragment = function makeFragment(children) {\n    var fragment = new tree_DocumentFragment(children);\n\n    sizeElementFromChildren(fragment);\n\n    return fragment;\n};\n\n// These are exact object types to catch typos in the names of the optional fields.\n\n\n// A list of child or kern nodes to be stacked on top of each other (i.e. the\n// first element will be at the bottom, and the last at the top).\n\n\n// Computes the updated `children` list and the overall depth.\n//\n// This helper function for makeVList makes it easier to enforce type safety by\n// allowing early exits (returns) in the logic.\nvar getVListChildrenAndDepth = function getVListChildrenAndDepth(params) {\n    if (params.positionType === \"individualShift\") {\n        var oldChildren = params.children;\n        var _children = [oldChildren[0]];\n\n        // Add in kerns to the list of params.children to get each element to be\n        // shifted to the correct specified shift\n        var _depth = -oldChildren[0].shift - oldChildren[0].elem.depth;\n        var currPos = _depth;\n        for (var i = 1; i < oldChildren.length; i++) {\n            var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth;\n            var _size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);\n\n            currPos = currPos + diff;\n\n            _children.push({ type: \"kern\", size: _size });\n            _children.push(oldChildren[i]);\n        }\n\n        return { children: _children, depth: _depth };\n    }\n\n    var depth = void 0;\n    if (params.positionType === \"top\") {\n        // We always start at the bottom, so calculate the bottom by adding up\n        // all the sizes\n        var bottom = params.positionData;\n        for (var _i = 0; _i < params.children.length; _i++) {\n            var child = params.children[_i];\n            bottom -= child.type === \"kern\" ? child.size : child.elem.height + child.elem.depth;\n        }\n        depth = bottom;\n    } else if (params.positionType === \"bottom\") {\n        depth = -params.positionData;\n    } else {\n        var firstChild = params.children[0];\n        if (firstChild.type !== \"elem\") {\n            throw new Error('First child must have type \"elem\".');\n        }\n        if (params.positionType === \"shift\") {\n            depth = -firstChild.elem.depth - params.positionData;\n        } else if (params.positionType === \"firstBaseline\") {\n            depth = -firstChild.elem.depth;\n        } else {\n            throw new Error(\"Invalid positionType \" + params.positionType + \".\");\n        }\n    }\n    return { children: params.children, depth: depth };\n};\n\n/**\n * Makes a vertical list by stacking elements and kerns on top of each other.\n * Allows for many different ways of specifying the positioning method.\n *\n * See VListParam documentation above.\n */\nvar buildCommon_makeVList = function makeVList(params, options) {\n    var _getVListChildrenAndD = getVListChildrenAndDepth(params),\n        children = _getVListChildrenAndD.children,\n        depth = _getVListChildrenAndD.depth;\n\n    // Create a strut that is taller than any list item. The strut is added to\n    // each item, where it will determine the item's baseline. Since it has\n    // `overflow:hidden`, the strut's top edge will sit on the item's line box's\n    // top edge and the strut's bottom edge will sit on the item's baseline,\n    // with no additional line-height spacing. This allows the item baseline to\n    // be positioned precisely without worrying about font ascent and\n    // line-height.\n\n\n    var pstrutSize = 0;\n    for (var i = 0; i < children.length; i++) {\n        var child = children[i];\n        if (child.type === \"elem\") {\n            var _elem = child.elem;\n            pstrutSize = Math.max(pstrutSize, _elem.maxFontSize, _elem.height);\n        }\n    }\n    pstrutSize += 2;\n    var pstrut = buildCommon_makeSpan([\"pstrut\"], []);\n    pstrut.style.height = pstrutSize + \"em\";\n\n    // Create a new list of actual children at the correct offsets\n    var realChildren = [];\n    var minPos = depth;\n    var maxPos = depth;\n    var currPos = depth;\n    for (var _i2 = 0; _i2 < children.length; _i2++) {\n        var _child = children[_i2];\n        if (_child.type === \"kern\") {\n            currPos += _child.size;\n        } else {\n            var _elem2 = _child.elem;\n            var classes = _child.wrapperClasses || [];\n            var style = _child.wrapperStyle || {};\n\n            var childWrap = buildCommon_makeSpan(classes, [pstrut, _elem2], undefined, style);\n            childWrap.style.top = -pstrutSize - currPos - _elem2.depth + \"em\";\n            if (_child.marginLeft) {\n                childWrap.style.marginLeft = _child.marginLeft;\n            }\n            if (_child.marginRight) {\n                childWrap.style.marginRight = _child.marginRight;\n            }\n\n            realChildren.push(childWrap);\n            currPos += _elem2.height + _elem2.depth;\n        }\n        minPos = Math.min(minPos, currPos);\n        maxPos = Math.max(maxPos, currPos);\n    }\n\n    // The vlist contents go in a table-cell with `vertical-align:bottom`.\n    // This cell's bottom edge will determine the containing table's baseline\n    // without overly expanding the containing line-box.\n    var vlist = buildCommon_makeSpan([\"vlist\"], realChildren);\n    vlist.style.height = maxPos + \"em\";\n\n    // A second row is used if necessary to represent the vlist's depth.\n    var rows = void 0;\n    if (minPos < 0) {\n        // We will define depth in an empty span with display: table-cell.\n        // It should render with the height that we define. But Chrome, in\n        // contenteditable mode only, treats that span as if it contains some\n        // text content. And that min-height over-rides our desired height.\n        // So we put another empty span inside the depth strut span.\n        var emptySpan = buildCommon_makeSpan([], []);\n        var depthStrut = buildCommon_makeSpan([\"vlist\"], [emptySpan]);\n        depthStrut.style.height = -minPos + \"em\";\n\n        // Safari wants the first row to have inline content; otherwise it\n        // puts the bottom of the *second* row on the baseline.\n        var topStrut = buildCommon_makeSpan([\"vlist-s\"], [new domTree_SymbolNode(\"\\u200B\")]);\n\n        rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist, topStrut]), buildCommon_makeSpan([\"vlist-r\"], [depthStrut])];\n    } else {\n        rows = [buildCommon_makeSpan([\"vlist-r\"], [vlist])];\n    }\n\n    var vtable = buildCommon_makeSpan([\"vlist-t\"], rows);\n    if (rows.length === 2) {\n        vtable.classes.push(\"vlist-t2\");\n    }\n    vtable.height = maxPos;\n    vtable.depth = -minPos;\n    return vtable;\n};\n\n// Converts verb group into body string, dealing with \\verb* form\nvar makeVerb = function makeVerb(group, options) {\n    var text = group.body;\n    if (group.star) {\n        text = text.replace(/ /g, \"\\u2423\"); // Open Box\n    } else {\n        text = text.replace(/ /g, '\\xA0'); // No-Break Space\n        // (so that, in particular, spaces don't coalesce)\n    }\n    return text;\n};\n\n// Glue is a concept from TeX which is a flexible space between elements in\n// either a vertical or horizontal list. In KaTeX, at least for now, it's\n// static space between elements in a horizontal layout.\nvar buildCommon_makeGlue = function makeGlue(measurement, options) {\n    // Make an empty span for the space\n    var rule = buildCommon_makeSpan([\"mspace\"], [], options);\n    var size = units_calculateSize(measurement, options);\n    rule.style.marginRight = size + \"em\";\n    return rule;\n};\n\n// Takes font options, and returns the appropriate fontLookup name\nvar retrieveTextFontName = function retrieveTextFontName(fontFamily, fontWeight, fontShape) {\n    var baseFontName = \"\";\n    switch (fontFamily) {\n        case \"amsrm\":\n            baseFontName = \"AMS\";\n            break;\n        case \"textrm\":\n            baseFontName = \"Main\";\n            break;\n        case \"textsf\":\n            baseFontName = \"SansSerif\";\n            break;\n        case \"texttt\":\n            baseFontName = \"Typewriter\";\n            break;\n        default:\n            baseFontName = fontFamily; // use fonts added by a plugin\n    }\n\n    var fontStylesName = void 0;\n    if (fontWeight === \"textbf\" && fontShape === \"textit\") {\n        fontStylesName = \"BoldItalic\";\n    } else if (fontWeight === \"textbf\") {\n        fontStylesName = \"Bold\";\n    } else if (fontWeight === \"textit\") {\n        fontStylesName = \"Italic\";\n    } else {\n        fontStylesName = \"Regular\";\n    }\n\n    return baseFontName + \"-\" + fontStylesName;\n};\n\n// A map of CSS-based spacing functions to their CSS class.\nvar cssSpace = {\n    \"\\\\nobreak\": \"nobreak\",\n    \"\\\\allowbreak\": \"allowbreak\"\n};\n\n// A lookup table to determine whether a spacing function/symbol should be\n// treated like a regular space character.  If a symbol or command is a key\n// in this table, then it should be a regular space character.  Furthermore,\n// the associated value may have a `className` specifying an extra CSS class\n// to add to the created `span`.\nvar regularSpace = {\n    \" \": {},\n    \"\\\\ \": {},\n    \"~\": {\n        className: \"nobreak\"\n    },\n    \"\\\\space\": {},\n    \"\\\\nobreakspace\": {\n        className: \"nobreak\"\n    }\n};\n\n/**\n * Maps TeX font commands to objects containing:\n * - variant: string used for \"mathvariant\" attribute in buildMathML.js\n * - fontName: the \"style\" parameter to fontMetrics.getCharacterMetrics\n */\n// A map between tex font commands an MathML mathvariant attribute values\nvar fontMap = {\n    // styles\n    \"mathbf\": {\n        variant: \"bold\",\n        fontName: \"Main-Bold\"\n    },\n    \"mathrm\": {\n        variant: \"normal\",\n        fontName: \"Main-Regular\"\n    },\n    \"textit\": {\n        variant: \"italic\",\n        fontName: \"Main-Italic\"\n    },\n\n    // \"mathit\" and \"boldsymbol\" are missing because they require the use of two\n    // fonts: Main-Italic and Math-Italic for \"mathit\", and Math-BoldItalic and\n    // Main-Bold for \"boldsymbol\".  This is handled by a special case in makeOrd\n    // which ends up calling mathit and boldsymbol.\n\n    // families\n    \"mathbb\": {\n        variant: \"double-struck\",\n        fontName: \"AMS-Regular\"\n    },\n    \"mathcal\": {\n        variant: \"script\",\n        fontName: \"Caligraphic-Regular\"\n    },\n    \"mathfrak\": {\n        variant: \"fraktur\",\n        fontName: \"Fraktur-Regular\"\n    },\n    \"mathscr\": {\n        variant: \"script\",\n        fontName: \"Script-Regular\"\n    },\n    \"mathsf\": {\n        variant: \"sans-serif\",\n        fontName: \"SansSerif-Regular\"\n    },\n    \"mathtt\": {\n        variant: \"monospace\",\n        fontName: \"Typewriter-Regular\"\n    }\n};\n\nvar svgData = {\n    //   path, width, height\n    vec: [\"vec\", 0.471, 0.714], // values from the font glyph\n    oiintSize1: [\"oiintSize1\", 0.957, 0.499], // oval to overlay the integrand\n    oiintSize2: [\"oiintSize2\", 1.472, 0.659],\n    oiiintSize1: [\"oiiintSize1\", 1.304, 0.499],\n    oiiintSize2: [\"oiiintSize2\", 1.98, 0.659]\n};\n\nvar buildCommon_staticSvg = function staticSvg(value, options) {\n    // Create a span with inline SVG for the element.\n    var _svgData$value = svgData[value],\n        pathName = _svgData$value[0],\n        width = _svgData$value[1],\n        height = _svgData$value[2];\n\n    var path = new domTree_PathNode(pathName);\n    var svgNode = new domTree_SvgNode([path], {\n        \"width\": width + \"em\",\n        \"height\": height + \"em\",\n        // Override CSS rule `.katex svg { width: 100% }`\n        \"style\": \"width:\" + width + \"em\",\n        \"viewBox\": \"0 0 \" + 1000 * width + \" \" + 1000 * height,\n        \"preserveAspectRatio\": \"xMinYMin\"\n    });\n    var span = buildCommon_makeSvgSpan([\"overlay\"], [svgNode], options);\n    span.height = height;\n    span.style.height = height + \"em\";\n    span.style.width = width + \"em\";\n    return span;\n};\n\n/* harmony default export */ var buildCommon = ({\n    fontMap: fontMap,\n    makeSymbol: buildCommon_makeSymbol,\n    mathsym: buildCommon_mathsym,\n    makeSpan: buildCommon_makeSpan,\n    makeSvgSpan: buildCommon_makeSvgSpan,\n    makeLineSpan: makeLineSpan,\n    makeAnchor: buildCommon_makeAnchor,\n    makeFragment: buildCommon_makeFragment,\n    makeVList: buildCommon_makeVList,\n    makeOrd: buildCommon_makeOrd,\n    makeVerb: makeVerb,\n    makeGlue: buildCommon_makeGlue,\n    staticSvg: buildCommon_staticSvg,\n    svgData: svgData,\n    tryCombineChars: tryCombineChars,\n    cssSpace: cssSpace,\n    regularSpace: regularSpace\n});\n// CONCATENATED MODULE: ./src/parseNode.js\n\n\n// ParseNode's corresponding to Symbol `Group`s in symbols.js.\n\n\n// Union of all possible `ParseNode<>` types.\n\n\n// Map from `NodeType` to the corresponding `ParseNode`.\n\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertNodeType(node, type) {\n    var typedNode = checkNodeType(node, type);\n    if (!typedNode) {\n        throw new Error(\"Expected node of type \" + type + \", but got \" + (node ? \"node of type \" + node.type : String(node)));\n    }\n    // $FlowFixMe: Unsure why.\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkNodeType(node, type) {\n    if (node && node.type === type) {\n        // The definition of ParseNode<TYPE> doesn't communicate to flow that\n        // `type: TYPE` (as that's not explicitly mentioned anywhere), though that\n        // happens to be true for all our value types.\n        // $FlowFixMe\n        return node;\n    }\n    return null;\n}\n\n/**\n * Asserts that the node is of the given type and returns it with stricter\n * typing. Throws if the node's type does not match.\n */\nfunction assertAtomFamily(node, family) {\n    var typedNode = checkAtomFamily(node, family);\n    if (!typedNode) {\n        throw new Error(\"Expected node of type \\\"atom\\\" and family \\\"\" + family + \"\\\", but got \" + (node ? node.type === \"atom\" ? \"atom of family \" + node.family : \"node of type \" + node.type : String(node)));\n    }\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkAtomFamily(node, family) {\n    return node && node.type === \"atom\" && node.family === family ? node : null;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction assertSymbolNodeType(node) {\n    var typedNode = checkSymbolNodeType(node);\n    if (!typedNode) {\n        throw new Error(\"Expected node of symbol group type, but got \" + (node ? \"node of type \" + node.type : String(node)));\n    }\n    return typedNode;\n}\n\n/**\n * Returns the node more strictly typed iff it is of the given type. Otherwise,\n * returns null.\n */\nfunction checkSymbolNodeType(node) {\n    if (node && (node.type === \"atom\" || NON_ATOMS.hasOwnProperty(node.type))) {\n        // $FlowFixMe\n        return node;\n    }\n    return null;\n}\n// CONCATENATED MODULE: ./src/spacingData.js\n\n\nvar thinspace = {\n    number: 3,\n    unit: \"mu\"\n};\n/**\n * Describes spaces between different classes of atoms.\n */\n\nvar mediumspace = {\n    number: 4,\n    unit: \"mu\"\n};\nvar thickspace = {\n    number: 5,\n    unit: \"mu\"\n};\n\n// Making the type below exact with all optional fields doesn't work due to\n// - https://github.com/facebook/flow/issues/4582\n// - https://github.com/facebook/flow/issues/5688\n// However, since *all* fields are optional, $Shape<> works as suggested in 5688\n// above.\n\n\n// Spacing relationships for display and text styles\nvar spacings = {\n    mord: {\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mop: {\n        mord: thinspace,\n        mop: thinspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mbin: {\n        mord: mediumspace,\n        mop: mediumspace,\n        mopen: mediumspace,\n        minner: mediumspace\n    },\n    mrel: {\n        mord: thickspace,\n        mop: thickspace,\n        mopen: thickspace,\n        minner: thickspace\n    },\n    mopen: {},\n    mclose: {\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        minner: thinspace\n    },\n    mpunct: {\n        mord: thinspace,\n        mop: thinspace,\n        mrel: thickspace,\n        mopen: thinspace,\n        mclose: thinspace,\n        mpunct: thinspace,\n        minner: thinspace\n    },\n    minner: {\n        mord: thinspace,\n        mop: thinspace,\n        mbin: mediumspace,\n        mrel: thickspace,\n        mopen: thinspace,\n        mpunct: thinspace,\n        minner: thinspace\n    }\n};\n\n// Spacing relationships for script and scriptscript styles\nvar tightSpacings = {\n    mord: {\n        mop: thinspace\n    },\n    mop: {\n        mord: thinspace,\n        mop: thinspace\n    },\n    mbin: {},\n    mrel: {},\n    mopen: {},\n    mclose: {\n        mop: thinspace\n    },\n    mpunct: {},\n    minner: {\n        mop: thinspace\n    }\n};\n// CONCATENATED MODULE: ./src/defineFunction.js\n\n\n/** Context provided to function handlers for error messages. */\n\n\n// More general version of `HtmlBuilder` for nodes (e.g. \\sum, accent types)\n// whose presence impacts super/subscripting. In this case, ParseNode<\"supsub\">\n// delegates its HTML building to the HtmlBuilder corresponding to these nodes.\n\n\n/**\n * Final function spec for use at parse time.\n * This is almost identical to `FunctionPropSpec`, except it\n * 1. includes the function handler, and\n * 2. requires all arguments except argTypes.\n * It is generated by `defineFunction()` below.\n */\n\n\n/**\n * All registered functions.\n * `functions.js` just exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary.\n */\nvar _functions = {};\n\n/**\n * All HTML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\nvar _htmlGroupBuilders = {};\n\n/**\n * All MathML builders. Should be only used in the `define*` and the `build*ML`\n * functions.\n */\nvar _mathmlGroupBuilders = {};\n\nfunction defineFunction(_ref) {\n    var type = _ref.type,\n        nodeType = _ref.nodeType,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of functions\n    var data = {\n        type: type,\n        numArgs: props.numArgs,\n        argTypes: props.argTypes,\n        greediness: props.greediness === undefined ? 1 : props.greediness,\n        allowedInText: !!props.allowedInText,\n        allowedInMath: props.allowedInMath === undefined ? true : props.allowedInMath,\n        numOptionalArgs: props.numOptionalArgs || 0,\n        infix: !!props.infix,\n        consumeMode: props.consumeMode,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        // TODO: The value type of _functions should be a type union of all\n        // possible `FunctionSpec<>` possibilities instead of `FunctionSpec<*>`,\n        // which is an existential type.\n        // $FlowFixMe\n        _functions[names[i]] = data;\n    }\n    if (type) {\n        if (htmlBuilder) {\n            _htmlGroupBuilders[type] = htmlBuilder;\n        }\n        if (mathmlBuilder) {\n            _mathmlGroupBuilders[type] = mathmlBuilder;\n        }\n    }\n}\n\n/**\n * Use this to register only the HTML and MathML builders for a function (e.g.\n * if the function's ParseNode is generated in Parser.js rather than via a\n * stand-alone handler provided to `defineFunction`).\n */\nfunction defineFunctionBuilders(_ref2) {\n    var type = _ref2.type,\n        htmlBuilder = _ref2.htmlBuilder,\n        mathmlBuilder = _ref2.mathmlBuilder;\n\n    defineFunction({\n        type: type,\n        names: [],\n        props: { numArgs: 0 },\n        handler: function handler() {\n            throw new Error('Should never be called.');\n        },\n\n        htmlBuilder: htmlBuilder,\n        mathmlBuilder: mathmlBuilder\n    });\n}\n\n// Since the corresponding buildHTML/buildMathML function expects a\n// list of elements, we normalize for different kinds of arguments\nvar defineFunction_ordargument = function ordargument(arg) {\n    var node = checkNodeType(arg, \"ordgroup\");\n    return node ? node.body : [arg];\n};\n// CONCATENATED MODULE: ./src/buildHTML.js\n\n/**\n * This file does the main work of building a domTree structure from a parse\n * tree. The entry point is the `buildHTML` function, which takes a parse tree.\n * Then, the buildExpression, buildGroup, and various groupBuilders functions\n * are called, to produce a final HTML tree.\n */\n\n\n\n\n\n\n\n\n\n\n\nvar buildHTML_makeSpan = buildCommon.makeSpan;\n\n// Binary atoms (first class `mbin`) change into ordinary atoms (`mord`)\n// depending on their surroundings. See TeXbook pg. 442-446, Rules 5 and 6,\n// and the text before Rule 19.\nvar buildHTML_isBinLeftCanceller = function isBinLeftCanceller(node, isRealGroup) {\n    // TODO: This code assumes that a node's math class is the first element\n    // of its `classes` array. A later cleanup should ensure this, for\n    // instance by changing the signature of `makeSpan`.\n    if (node) {\n        return utils.contains([\"mbin\", \"mopen\", \"mrel\", \"mop\", \"mpunct\"], getTypeOfDomTree(node, \"right\"));\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar buildHTML_isBinRightCanceller = function isBinRightCanceller(node, isRealGroup) {\n    if (node) {\n        return utils.contains([\"mrel\", \"mclose\", \"mpunct\"], getTypeOfDomTree(node, \"left\"));\n    } else {\n        return isRealGroup;\n    }\n};\n\nvar buildHTML_styleMap = {\n    \"display\": src_Style.DISPLAY,\n    \"text\": src_Style.TEXT,\n    \"script\": src_Style.SCRIPT,\n    \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\n\nvar DomEnum = {\n    mord: \"mord\",\n    mop: \"mop\",\n    mbin: \"mbin\",\n    mrel: \"mrel\",\n    mopen: \"mopen\",\n    mclose: \"mclose\",\n    mpunct: \"mpunct\",\n    minner: \"minner\"\n};\n\n\n/**\n * Take a list of nodes, build them in order, and return a list of the built\n * nodes. documentFragments are flattened into their contents, so the\n * returned list contains no fragments. `isRealGroup` is true if `expression`\n * is a real group (no atoms will be added on either side), as opposed to\n * a partial group (e.g. one created by \\color). `surrounding` is an array\n * consisting type of nodes that will be added to the left and right.\n */\nvar buildHTML_buildExpression = function buildExpression(expression, options, isRealGroup) {\n    var surrounding = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [null, null];\n\n    // Parse expressions into `groups`.\n    var rawGroups = [];\n    for (var i = 0; i < expression.length; i++) {\n        var output = buildHTML_buildGroup(expression[i], options);\n        if (output instanceof tree_DocumentFragment) {\n            var children = output.children;\n            rawGroups.push.apply(rawGroups, children);\n        } else {\n            rawGroups.push(output);\n        }\n    }\n    // At this point `rawGroups` consists entirely of `symbolNode`s and `span`s.\n\n    // Ignore explicit spaces (e.g., \\;, \\,) when determining what implicit\n    // spacing should go between atoms of different classes, and add dummy\n    // spans for determining spacings between surrounding atoms.\n    var nonSpaces = [surrounding[0] ? buildHTML_makeSpan([surrounding[0]], [], options) : null].concat(rawGroups.filter(function (group) {\n        return group && group.classes[0] !== \"mspace\";\n    }), [surrounding[1] ? buildHTML_makeSpan([surrounding[1]], [], options) : null]);\n\n    // Before determining what spaces to insert, perform bin cancellation.\n    // Binary operators change to ordinary symbols in some contexts.\n    for (var _i = 1; _i < nonSpaces.length - 1; _i++) {\n        var nonSpacesI = assert(nonSpaces[_i]);\n        var left = buildHTML_getOutermostNode(nonSpacesI, \"left\");\n        if (left.classes[0] === \"mbin\" && buildHTML_isBinLeftCanceller(nonSpaces[_i - 1], isRealGroup)) {\n            left.classes[0] = \"mord\";\n        }\n\n        var right = buildHTML_getOutermostNode(nonSpacesI, \"right\");\n        if (right.classes[0] === \"mbin\" && buildHTML_isBinRightCanceller(nonSpaces[_i + 1], isRealGroup)) {\n            right.classes[0] = \"mord\";\n        }\n    }\n\n    var groups = [];\n    var j = 0;\n    for (var _i2 = 0; _i2 < rawGroups.length; _i2++) {\n        groups.push(rawGroups[_i2]);\n\n        // For any group that is not a space, get the next non-space.  Then\n        // lookup what implicit space should be placed between those atoms and\n        // add it to groups.\n        if (rawGroups[_i2].classes[0] !== \"mspace\" && j < nonSpaces.length - 1) {\n            // if current non-space node is left dummy span, add a glue before\n            // first real non-space node\n            if (j === 0) {\n                groups.pop();\n                _i2--;\n            }\n\n            // Get the type of the current non-space node.  If it's a document\n            // fragment, get the type of the rightmost node in the fragment.\n            var _left = getTypeOfDomTree(nonSpaces[j], \"right\");\n\n            // Get the type of the next non-space node.  If it's a document\n            // fragment, get the type of the leftmost node in the fragment.\n            var _right = getTypeOfDomTree(nonSpaces[j + 1], \"left\");\n\n            // We use buildExpression inside of sizingGroup, but it returns a\n            // document fragment of elements.  sizingGroup sets `isRealGroup`\n            // to false to avoid processing spans multiple times.\n            if (_left && _right && isRealGroup) {\n                var nonSpacesJp1 = assert(nonSpaces[j + 1]);\n                var space = isLeftTight(nonSpacesJp1) ? tightSpacings[_left][_right] : spacings[_left][_right];\n\n                if (space) {\n                    var glueOptions = options;\n\n                    if (expression.length === 1) {\n                        var node = checkNodeType(expression[0], \"sizing\") || checkNodeType(expression[0], \"styling\");\n                        if (!node) {\n                            // No match.\n                        } else if (node.type === \"sizing\") {\n                            glueOptions = options.havingSize(node.size);\n                        } else if (node.type === \"styling\") {\n                            glueOptions = options.havingStyle(buildHTML_styleMap[node.style]);\n                        }\n                    }\n\n                    groups.push(buildCommon.makeGlue(space, glueOptions));\n                }\n            }\n            j++;\n        }\n    }\n\n    return groups;\n};\n\n// Return the outermost node of a domTree.\nvar buildHTML_getOutermostNode = function getOutermostNode(node, side) {\n    if (node instanceof tree_DocumentFragment || node instanceof domTree_Anchor) {\n        var children = node.children;\n        if (children.length) {\n            if (side === \"right\") {\n                return getOutermostNode(children[children.length - 1], \"right\");\n            } else if (side === \"left\") {\n                return getOutermostNode(children[0], \"right\");\n            }\n        }\n    }\n    return node;\n};\n\n// Return math atom class (mclass) of a domTree.\nvar getTypeOfDomTree = function getTypeOfDomTree(node, side) {\n    if (!node) {\n        return null;\n    }\n\n    node = buildHTML_getOutermostNode(node, side);\n    // This makes a lot of assumptions as to where the type of atom\n    // appears.  We should do a better job of enforcing this.\n    return DomEnum[node.classes[0]] || null;\n};\n\n// If `node` is an atom return whether it's been assigned the mtight class.\n// If `node` is a document fragment, return the value of isLeftTight() for the\n// leftmost node in the fragment.\n// 'mtight' indicates that the node is script or scriptscript style.\nvar isLeftTight = function isLeftTight(node) {\n    node = buildHTML_getOutermostNode(node, \"left\");\n    return node.hasClass(\"mtight\");\n};\n\nvar makeNullDelimiter = function makeNullDelimiter(options, classes) {\n    var moreClasses = [\"nulldelimiter\"].concat(options.baseSizingClasses());\n    return buildHTML_makeSpan(classes.concat(moreClasses));\n};\n\n/**\n * buildGroup is the function that takes a group and calls the correct groupType\n * function for it. It also handles the interaction of size and style changes\n * between parents and children.\n */\nvar buildHTML_buildGroup = function buildGroup(group, options, baseOptions) {\n    if (!group) {\n        return buildHTML_makeSpan();\n    }\n\n    if (_htmlGroupBuilders[group.type]) {\n        // Call the groupBuilders function\n        var groupNode = _htmlGroupBuilders[group.type](group, options);\n\n        // If the size changed between the parent and the current group, account\n        // for that size difference.\n        if (baseOptions && options.size !== baseOptions.size) {\n            groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [groupNode], options);\n\n            var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n            groupNode.height *= multiplier;\n            groupNode.depth *= multiplier;\n        }\n\n        return groupNode;\n    } else {\n        throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Combine an array of HTML DOM nodes (e.g., the output of `buildExpression`)\n * into an unbreakable HTML node of class .base, with proper struts to\n * guarantee correct vertical extent.  `buildHTML` calls this repeatedly to\n * make up the entire expression as a sequence of unbreakable units.\n */\nfunction buildHTMLUnbreakable(children, options) {\n    // Compute height and depth of this chunk.\n    var body = buildHTML_makeSpan([\"base\"], children, options);\n\n    // Add strut, which ensures that the top of the HTML element falls at\n    // the height of the expression, and the bottom of the HTML element\n    // falls at the depth of the expression.\n    // We used to have separate top and bottom struts, where the bottom strut\n    // would like to use `vertical-align: top`, but in IE 9 this lowers the\n    // baseline of the box to the bottom of this strut (instead of staying in\n    // the normal place) so we use an absolute value for vertical-align instead.\n    var strut = buildHTML_makeSpan([\"strut\"]);\n    strut.style.height = body.height + body.depth + \"em\";\n    strut.style.verticalAlign = -body.depth + \"em\";\n    body.children.unshift(strut);\n\n    return body;\n}\n\n/**\n * Take an entire parse tree, and build it into an appropriate set of HTML\n * nodes.\n */\nfunction buildHTML(tree, options) {\n    // Strip off outer tag wrapper for processing below.\n    var tag = null;\n    if (tree.length === 1 && tree[0].type === \"tag\") {\n        tag = tree[0].tag;\n        tree = tree[0].body;\n    }\n\n    // Build the expression contained in the tree\n    var expression = buildHTML_buildExpression(tree, options, true);\n\n    var children = [];\n\n    // Create one base node for each chunk between potential line breaks.\n    // The TeXBook [p.173] says \"A formula will be broken only after a\n    // relation symbol like $=$ or $<$ or $\\rightarrow$, or after a binary\n    // operation symbol like $+$ or $-$ or $\\times$, where the relation or\n    // binary operation is on the ``outer level'' of the formula (i.e., not\n    // enclosed in {...} and not part of an \\over construction).\"\n\n    var parts = [];\n    for (var i = 0; i < expression.length; i++) {\n        parts.push(expression[i]);\n        if (expression[i].hasClass(\"mbin\") || expression[i].hasClass(\"mrel\") || expression[i].hasClass(\"allowbreak\")) {\n            // Put any post-operator glue on same line as operator.\n            // Watch for \\nobreak along the way.\n            var nobreak = false;\n            while (i < expression.length - 1 && expression[i + 1].hasClass(\"mspace\")) {\n                i++;\n                parts.push(expression[i]);\n                if (expression[i].hasClass(\"nobreak\")) {\n                    nobreak = true;\n                }\n            }\n            // Don't allow break if \\nobreak among the post-operator glue.\n            if (!nobreak) {\n                children.push(buildHTMLUnbreakable(parts, options));\n                parts = [];\n            }\n        } else if (expression[i].hasClass(\"newline\")) {\n            // Write the line except the newline\n            parts.pop();\n            if (parts.length > 0) {\n                children.push(buildHTMLUnbreakable(parts, options));\n                parts = [];\n            }\n            // Put the newline at the top level\n            children.push(expression[i]);\n        }\n    }\n    if (parts.length > 0) {\n        children.push(buildHTMLUnbreakable(parts, options));\n    }\n\n    // Now, if there was a tag, build it too and append it as a final child.\n    var tagChild = void 0;\n    if (tag) {\n        tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, true));\n        tagChild.classes = [\"tag\"];\n        children.push(tagChild);\n    }\n\n    var htmlNode = buildHTML_makeSpan([\"katex-html\"], children);\n    htmlNode.setAttribute(\"aria-hidden\", \"true\");\n\n    // Adjust the strut of the tag to be the maximum height of all children\n    // (the height of the enclosing htmlNode) for proper vertical alignment.\n    if (tagChild) {\n        var strut = tagChild.children[0];\n        strut.style.height = htmlNode.height + htmlNode.depth + \"em\";\n        strut.style.verticalAlign = -htmlNode.depth + \"em\";\n    }\n\n    return htmlNode;\n}\n// CONCATENATED MODULE: ./src/mathMLTree.js\n\n\n/**\n * These objects store data about MathML nodes. This is the MathML equivalent\n * of the types in domTree.js. Since MathML handles its own rendering, and\n * since we're mainly using MathML to improve accessibility, we don't manage\n * any of the styling state that the plain DOM nodes do.\n *\n * The `toNode` and `toMarkup` functions work simlarly to how they do in\n * domTree.js, creating namespaced DOM nodes and HTML text markup respectively.\n */\n\n\n\n\n/**\n * MathML node types used in KaTeX. For a complete list of MathML nodes, see\n * https://developer.mozilla.org/en-US/docs/Web/MathML/Element.\n */\n\nfunction newDocumentFragment(children) {\n    return new tree_DocumentFragment(children);\n}\n\n/**\n * This node represents a general purpose MathML node of any type. The\n * constructor requires the type of node to create (for example, `\"mo\"` or\n * `\"mspace\"`, corresponding to `<mo>` and `<mspace>` tags).\n */\nvar mathMLTree_MathNode = function () {\n    function MathNode(type, children) {\n        classCallCheck_default()(this, MathNode);\n\n        this.type = type;\n        this.attributes = {};\n        this.children = children || [];\n    }\n\n    /**\n     * Sets an attribute on a MathML node. MathML depends on attributes to convey a\n     * semantic content, so this is used heavily.\n     */\n\n\n    MathNode.prototype.setAttribute = function setAttribute(name, value) {\n        this.attributes[name] = value;\n    };\n\n    /**\n     * Gets an attribute on a MathML node.\n     */\n\n\n    MathNode.prototype.getAttribute = function getAttribute(name) {\n        return this.attributes[name];\n    };\n\n    /**\n     * Converts the math node into a MathML-namespaced DOM element.\n     */\n\n\n    MathNode.prototype.toNode = function toNode() {\n        var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", this.type);\n\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                node.setAttribute(attr, this.attributes[attr]);\n            }\n        }\n\n        for (var i = 0; i < this.children.length; i++) {\n            node.appendChild(this.children[i].toNode());\n        }\n\n        return node;\n    };\n\n    /**\n     * Converts the math node into an HTML markup string.\n     */\n\n\n    MathNode.prototype.toMarkup = function toMarkup() {\n        var markup = \"<\" + this.type;\n\n        // Add the attributes\n        for (var attr in this.attributes) {\n            if (Object.prototype.hasOwnProperty.call(this.attributes, attr)) {\n                markup += \" \" + attr + \"=\\\"\";\n                markup += utils.escape(this.attributes[attr]);\n                markup += \"\\\"\";\n            }\n        }\n\n        markup += \">\";\n\n        for (var i = 0; i < this.children.length; i++) {\n            markup += this.children[i].toMarkup();\n        }\n\n        markup += \"</\" + this.type + \">\";\n\n        return markup;\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText, but escaped.\n     */\n\n\n    MathNode.prototype.toText = function toText() {\n        return this.children.map(function (child) {\n            return child.toText();\n        }).join(\"\");\n    };\n\n    return MathNode;\n}();\n\n/**\n * This node represents a piece of text.\n */\nvar mathMLTree_TextNode = function () {\n    function TextNode(text) {\n        var needsEscape = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        classCallCheck_default()(this, TextNode);\n\n        this.text = text;\n        this.needsEscape = needsEscape;\n    }\n\n    /**\n     * Converts the text node into a DOM text node.\n     */\n\n\n    TextNode.prototype.toNode = function toNode() {\n        return document.createTextNode(this.toText());\n    };\n\n    /**\n     * Converts the text node into escaped HTML markup\n     * (representing the text itself).\n     */\n\n\n    TextNode.prototype.toMarkup = function toMarkup() {\n        return this.toText();\n    };\n\n    /**\n     * Converts the text node into an escaped string\n     * (representing the text iteself).\n     */\n\n\n    TextNode.prototype.toText = function toText() {\n        return this.needsEscape ? utils.escape(this.text) : this.text;\n    };\n\n    return TextNode;\n}();\n\n/**\n * This node represents a space, but may render as <mspace.../> or as text,\n * depending on the width.\n */\n\nvar mathMLTree_SpaceNode = function () {\n\n    /**\n     * Create a Space node with width given in CSS ems.\n     */\n    function SpaceNode(width) {\n        classCallCheck_default()(this, SpaceNode);\n\n        this.width = width;\n        // See https://www.w3.org/TR/2000/WD-MathML2-20000328/chapter6.html\n        // for a table of space-like characters.  We consistently use the\n        // &LongNames; because Unicode does not have single characters for\n        // &ThickSpace; (\\u2005\\u200a) and all negative spaces.\n        if (width >= 0.05555 && width <= 0.05556) {\n            this.character = \"&VeryThinSpace;\"; // \\u200a\n        } else if (width >= 0.1666 && width <= 0.1667) {\n            this.character = \"&ThinSpace;\"; // \\u2009\n        } else if (width >= 0.2222 && width <= 0.2223) {\n            this.character = \"&MediumSpace;\"; // \\u2005\n        } else if (width >= 0.2777 && width <= 0.2778) {\n            this.character = \"&ThickSpace;\"; // \\u2005\\u200a\n        } else if (width >= -0.05556 && width <= -0.05555) {\n            this.character = \"&NegativeVeryThinSpace;\";\n        } else if (width >= -0.1667 && width <= -0.1666) {\n            this.character = \"&NegativeThinSpace;\";\n        } else if (width >= -0.2223 && width <= -0.2222) {\n            this.character = \"&NegativeMediumSpace;\";\n        } else if (width >= -0.2778 && width <= -0.2777) {\n            this.character = \"&NegativeThickSpace;\";\n        } else {\n            this.character = null;\n        }\n    }\n\n    /**\n     * Converts the math node into a MathML-namespaced DOM element.\n     */\n\n\n    SpaceNode.prototype.toNode = function toNode() {\n        if (this.character) {\n            return document.createTextNode(this.character);\n        } else {\n            var node = document.createElementNS(\"http://www.w3.org/1998/Math/MathML\", \"mspace\");\n            node.setAttribute(\"width\", this.width + \"em\");\n            return node;\n        }\n    };\n\n    /**\n     * Converts the math node into an HTML markup string.\n     */\n\n\n    SpaceNode.prototype.toMarkup = function toMarkup() {\n        if (this.character) {\n            return \"<mtext>\" + this.character + \"</mtext>\";\n        } else {\n            return \"<mspace width=\\\"\" + this.width + \"em\\\"/>\";\n        }\n    };\n\n    /**\n     * Converts the math node into a string, similar to innerText.\n     */\n\n\n    SpaceNode.prototype.toText = function toText() {\n        if (this.character) {\n            return this.character;\n        } else {\n            return \" \";\n        }\n    };\n\n    return SpaceNode;\n}();\n\n/* harmony default export */ var mathMLTree = ({\n    MathNode: mathMLTree_MathNode,\n    TextNode: mathMLTree_TextNode,\n    SpaceNode: mathMLTree_SpaceNode,\n    newDocumentFragment: newDocumentFragment\n});\n// CONCATENATED MODULE: ./src/buildMathML.js\n\n/**\n * This file converts a parse tree into a cooresponding MathML tree. The main\n * entry point is the `buildMathML` function, which takes a parse tree from the\n * parser.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Takes a symbol and converts it into a MathML text node after performing\n * optional replacement from symbols.js.\n */\nvar buildMathML_makeText = function makeText(text, mode, options) {\n    if (src_symbols[mode][text] && src_symbols[mode][text].replace && text.charCodeAt(0) !== 0xD835 && !(ligatures.hasOwnProperty(text) && options && (options.fontFamily && options.fontFamily.substr(4, 2) === \"tt\" || options.font && options.font.substr(4, 2) === \"tt\"))) {\n        text = src_symbols[mode][text].replace;\n    }\n\n    return new mathMLTree.TextNode(text);\n};\n\n/**\n * Wrap the given array of nodes in an <mrow> node if needed, i.e.,\n * unless the array has length 1.  Always returns a single node.\n */\nvar buildMathML_makeRow = function makeRow(body) {\n    if (body.length === 1) {\n        return body[0];\n    } else {\n        return new mathMLTree.MathNode(\"mrow\", body);\n    }\n};\n\n/**\n * Returns the math variant as a string or null if none is required.\n */\nvar buildMathML_getVariant = function getVariant(group, options) {\n    // Handle \\text... font specifiers as best we can.\n    // MathML has a limited list of allowable mathvariant specifiers; see\n    // https://www.w3.org/TR/MathML3/chapter3.html#presm.commatt\n    if (options.fontFamily === \"texttt\") {\n        return \"monospace\";\n    } else if (options.fontFamily === \"textsf\") {\n        if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n            return \"sans-serif-bold-italic\";\n        } else if (options.fontShape === \"textit\") {\n            return \"sans-serif-italic\";\n        } else if (options.fontWeight === \"textbf\") {\n            return \"bold-sans-serif\";\n        } else {\n            return \"sans-serif\";\n        }\n    } else if (options.fontShape === \"textit\" && options.fontWeight === \"textbf\") {\n        return \"bold-italic\";\n    } else if (options.fontShape === \"textit\") {\n        return \"italic\";\n    } else if (options.fontWeight === \"textbf\") {\n        return \"bold\";\n    }\n\n    var font = options.font;\n    if (!font) {\n        return null;\n    }\n\n    var mode = group.mode;\n    if (font === \"mathit\") {\n        return \"italic\";\n    } else if (font === \"boldsymbol\") {\n        return \"bold-italic\";\n    }\n\n    var text = group.text;\n    if (utils.contains([\"\\\\imath\", \"\\\\jmath\"], text)) {\n        return null;\n    }\n\n    if (src_symbols[mode][text] && src_symbols[mode][text].replace) {\n        text = src_symbols[mode][text].replace;\n    }\n\n    var fontName = buildCommon.fontMap[font].fontName;\n    if (getCharacterMetrics(text, fontName, mode)) {\n        return buildCommon.fontMap[font].variant;\n    }\n\n    return null;\n};\n\n/**\n * Takes a list of nodes, builds them, and returns a list of the generated\n * MathML nodes.  Also combine consecutive <mtext> outputs into a single\n * <mtext> tag.\n */\nvar buildMathML_buildExpression = function buildExpression(expression, options) {\n    var groups = [];\n    var lastGroup = void 0;\n    for (var i = 0; i < expression.length; i++) {\n        var group = buildMathML_buildGroup(expression[i], options);\n        if (group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {\n            // Concatenate adjacent <mtext>s\n            if (group.type === 'mtext' && lastGroup.type === 'mtext' && group.getAttribute('mathvariant') === lastGroup.getAttribute('mathvariant')) {\n                var _lastGroup$children;\n\n                (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, group.children);\n                continue;\n                // Concatenate adjacent <mn>s\n            } else if (group.type === 'mn' && lastGroup.type === 'mn') {\n                var _lastGroup$children2;\n\n                (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, group.children);\n                continue;\n                // Concatenate <mn>...</mn> followed by <mi>.</mi>\n            } else if (group.type === 'mi' && group.children.length === 1 && lastGroup.type === 'mn') {\n                var child = group.children[0];\n                if (child instanceof mathMLTree_TextNode && child.text === '.') {\n                    var _lastGroup$children3;\n\n                    (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, group.children);\n                    continue;\n                }\n            }\n        }\n        groups.push(group);\n        lastGroup = group;\n    }\n\n    // TODO(kevinb): combine \\\\not with mrels and mords\n\n    return groups;\n};\n\n/**\n * Equivalent to buildExpression, but wraps the elements in an <mrow>\n * if there's more than one.  Returns a single node instead of an array.\n */\nvar buildExpressionRow = function buildExpressionRow(expression, options) {\n    return buildMathML_makeRow(buildMathML_buildExpression(expression, options));\n};\n\n/**\n * Takes a group from the parser and calls the appropriate groupBuilders function\n * on it to produce a MathML node.\n */\nvar buildMathML_buildGroup = function buildGroup(group, options) {\n    if (!group) {\n        return new mathMLTree.MathNode(\"mrow\");\n    }\n\n    if (_mathmlGroupBuilders[group.type]) {\n        // Call the groupBuilders function\n        var result = _mathmlGroupBuilders[group.type](group, options);\n        return result;\n    } else {\n        throw new src_ParseError(\"Got group of unknown type: '\" + group.type + \"'\");\n    }\n};\n\n/**\n * Takes a full parse tree and settings and builds a MathML representation of\n * it. In particular, we put the elements from building the parse tree into a\n * <semantics> tag so we can also include that TeX source as an annotation.\n *\n * Note that we actually return a domTree element with a `<math>` inside it so\n * we can do appropriate styling.\n */\nfunction buildMathML(tree, texExpression, options) {\n    var expression = buildMathML_buildExpression(tree, options);\n\n    // Wrap up the expression in an mrow so it is presented in the semantics\n    // tag correctly, unless it's a single <mrow> or <mtable>.\n    var wrapper = void 0;\n    if (expression.length === 1 && expression[0] instanceof mathMLTree_MathNode && utils.contains([\"mrow\", \"mtable\"], expression[0].type)) {\n        wrapper = expression[0];\n    } else {\n        wrapper = new mathMLTree.MathNode(\"mrow\", expression);\n    }\n\n    // Build a TeX annotation of the source\n    var annotation = new mathMLTree.MathNode(\"annotation\", [new mathMLTree.TextNode(texExpression)]);\n\n    annotation.setAttribute(\"encoding\", \"application/x-tex\");\n\n    var semantics = new mathMLTree.MathNode(\"semantics\", [wrapper, annotation]);\n\n    var math = new mathMLTree.MathNode(\"math\", [semantics]);\n\n    // You can't style <math> nodes, so we wrap the node in a span.\n    // NOTE: The span class is not typed to have <math> nodes as children, and\n    // we don't want to make the children type more generic since the children\n    // of span are expected to have more fields in `buildHtml` contexts.\n    // $FlowFixMe\n    return buildCommon.makeSpan([\"katex-mathml\"], [math]);\n}\n// CONCATENATED MODULE: ./src/buildTree.js\n\n\n\n\n\n\n\nvar buildTree_optionsFromSettings = function optionsFromSettings(settings) {\n    return new src_Options({\n        style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,\n        maxSize: settings.maxSize\n    });\n};\n\nvar buildTree_buildTree = function buildTree(tree, expression, settings) {\n    var options = buildTree_optionsFromSettings(settings);\n    var mathMLNode = buildMathML(tree, expression, options);\n    var htmlNode = buildHTML(tree, options);\n\n    var katexNode = buildCommon.makeSpan([\"katex\"], [mathMLNode, htmlNode]);\n\n    if (settings.displayMode) {\n        return buildCommon.makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\nvar buildTree_buildHTMLTree = function buildHTMLTree(tree, expression, settings) {\n    var options = buildTree_optionsFromSettings(settings);\n    var htmlNode = buildHTML(tree, options);\n    var katexNode = buildCommon.makeSpan([\"katex\"], [htmlNode]);\n    if (settings.displayMode) {\n        return buildCommon.makeSpan([\"katex-display\"], [katexNode]);\n    } else {\n        return katexNode;\n    }\n};\n\n/* harmony default export */ var src_buildTree = (buildTree_buildTree);\n// CONCATENATED MODULE: ./src/stretchy.js\n\n/**\n * This file provides support to buildMathML.js and buildHTML.js\n * for stretchy wide elements rendered from SVG files\n * and other CSS trickery.\n */\n\n\n\n\n\n\nvar stretchyCodePoint = {\n    widehat: \"^\",\n    widecheck: \"ˇ\",\n    widetilde: \"~\",\n    utilde: \"~\",\n    overleftarrow: \"\\u2190\",\n    underleftarrow: \"\\u2190\",\n    xleftarrow: \"\\u2190\",\n    overrightarrow: \"\\u2192\",\n    underrightarrow: \"\\u2192\",\n    xrightarrow: \"\\u2192\",\n    underbrace: \"\\u23B5\",\n    overbrace: \"\\u23DE\",\n    overleftrightarrow: \"\\u2194\",\n    underleftrightarrow: \"\\u2194\",\n    xleftrightarrow: \"\\u2194\",\n    Overrightarrow: \"\\u21D2\",\n    xRightarrow: \"\\u21D2\",\n    overleftharpoon: \"\\u21BC\",\n    xleftharpoonup: \"\\u21BC\",\n    overrightharpoon: \"\\u21C0\",\n    xrightharpoonup: \"\\u21C0\",\n    xLeftarrow: \"\\u21D0\",\n    xLeftrightarrow: \"\\u21D4\",\n    xhookleftarrow: \"\\u21A9\",\n    xhookrightarrow: \"\\u21AA\",\n    xmapsto: \"\\u21A6\",\n    xrightharpoondown: \"\\u21C1\",\n    xleftharpoondown: \"\\u21BD\",\n    xrightleftharpoons: \"\\u21CC\",\n    xleftrightharpoons: \"\\u21CB\",\n    xtwoheadleftarrow: \"\\u219E\",\n    xtwoheadrightarrow: \"\\u21A0\",\n    xlongequal: \"=\",\n    xtofrom: \"\\u21C4\",\n    xrightleftarrows: \"\\u21C4\",\n    xrightequilibrium: \"\\u21CC\", // Not a perfect match.\n    xleftequilibrium: \"\\u21CB\" // None better available.\n};\n\nvar stretchy_mathMLnode = function mathMLnode(label) {\n    var node = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)])]);\n    node.setAttribute(\"stretchy\", \"true\");\n    return node;\n};\n\n// Many of the KaTeX SVG images have been adapted from glyphs in KaTeX fonts.\n// Copyright (c) 2009-2010, Design Science, Inc. (<www.mathjax.org>)\n// Copyright (c) 2014-2017 Khan Academy (<www.khanacademy.org>)\n// Licensed under the SIL Open Font License, Version 1.1.\n// See \\nhttp://scripts.sil.org/OFL\n\n// Very Long SVGs\n//    Many of the KaTeX stretchy wide elements use a long SVG image and an\n//    overflow: hidden tactic to achieve a stretchy image while avoiding\n//    distortion of arrowheads or brace corners.\n\n//    The SVG typically contains a very long (400 em) arrow.\n\n//    The SVG is in a container span that has overflow: hidden, so the span\n//    acts like a window that exposes only part of the  SVG.\n\n//    The SVG always has a longer, thinner aspect ratio than the container span.\n//    After the SVG fills 100% of the height of the container span,\n//    there is a long arrow shaft left over. That left-over shaft is not shown.\n//    Instead, it is sliced off because the span's CSS has overflow: hidden.\n\n//    Thus, the reader sees an arrow that matches the subject matter width\n//    without distortion.\n\n//    Some functions, such as \\cancel, need to vary their aspect ratio. These\n//    functions do not get the overflow SVG treatment.\n\n// Second Brush Stroke\n//    Low resolution monitors struggle to display images in fine detail.\n//    So browsers apply anti-aliasing. A long straight arrow shaft therefore\n//    will sometimes appear as if it has a blurred edge.\n\n//    To mitigate this, these SVG files contain a second \"brush-stroke\" on the\n//    arrow shafts. That is, a second long thin rectangular SVG path has been\n//    written directly on top of each arrow shaft. This reinforcement causes\n//    some of the screen pixels to display as black instead of the anti-aliased\n//    gray pixel that a  single path would generate. So we get arrow shafts\n//    whose edges appear to be sharper.\n\n// In the katexImagesData object just below, the dimensions all\n// correspond to path geometry inside the relevant SVG.\n// For example, \\overrightarrow uses the same arrowhead as glyph U+2192\n// from the KaTeX Main font. The scaling factor is 1000.\n// That is, inside the font, that arrowhead is 522 units tall, which\n// corresponds to 0.522 em inside the document.\n\nvar katexImagesData = {\n    //   path(s), minWidth, height, align\n    overrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    overleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    underrightarrow: [[\"rightarrow\"], 0.888, 522, \"xMaxYMin\"],\n    underleftarrow: [[\"leftarrow\"], 0.888, 522, \"xMinYMin\"],\n    xrightarrow: [[\"rightarrow\"], 1.469, 522, \"xMaxYMin\"],\n    xleftarrow: [[\"leftarrow\"], 1.469, 522, \"xMinYMin\"],\n    Overrightarrow: [[\"doublerightarrow\"], 0.888, 560, \"xMaxYMin\"],\n    xRightarrow: [[\"doublerightarrow\"], 1.526, 560, \"xMaxYMin\"],\n    xLeftarrow: [[\"doubleleftarrow\"], 1.526, 560, \"xMinYMin\"],\n    overleftharpoon: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoonup: [[\"leftharpoon\"], 0.888, 522, \"xMinYMin\"],\n    xleftharpoondown: [[\"leftharpoondown\"], 0.888, 522, \"xMinYMin\"],\n    overrightharpoon: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoonup: [[\"rightharpoon\"], 0.888, 522, \"xMaxYMin\"],\n    xrightharpoondown: [[\"rightharpoondown\"], 0.888, 522, \"xMaxYMin\"],\n    xlongequal: [[\"longequal\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadleftarrow: [[\"twoheadleftarrow\"], 0.888, 334, \"xMinYMin\"],\n    xtwoheadrightarrow: [[\"twoheadrightarrow\"], 0.888, 334, \"xMaxYMin\"],\n\n    overleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    overbrace: [[\"leftbrace\", \"midbrace\", \"rightbrace\"], 1.6, 548],\n    underbrace: [[\"leftbraceunder\", \"midbraceunder\", \"rightbraceunder\"], 1.6, 548],\n    underleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 0.888, 522],\n    xleftrightarrow: [[\"leftarrow\", \"rightarrow\"], 1.75, 522],\n    xLeftrightarrow: [[\"doubleleftarrow\", \"doublerightarrow\"], 1.75, 560],\n    xrightleftharpoons: [[\"leftharpoondownplus\", \"rightharpoonplus\"], 1.75, 716],\n    xleftrightharpoons: [[\"leftharpoonplus\", \"rightharpoondownplus\"], 1.75, 716],\n    xhookleftarrow: [[\"leftarrow\", \"righthook\"], 1.08, 522],\n    xhookrightarrow: [[\"lefthook\", \"rightarrow\"], 1.08, 522],\n    overlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    underlinesegment: [[\"leftlinesegment\", \"rightlinesegment\"], 0.888, 522],\n    overgroup: [[\"leftgroup\", \"rightgroup\"], 0.888, 342],\n    undergroup: [[\"leftgroupunder\", \"rightgroupunder\"], 0.888, 342],\n    xmapsto: [[\"leftmapsto\", \"rightarrow\"], 1.5, 522],\n    xtofrom: [[\"leftToFrom\", \"rightToFrom\"], 1.75, 528],\n\n    // The next three arrows are from the mhchem package.\n    // In mhchem.sty, min-length is 2.0em. But these arrows might appear in the\n    // document as \\xrightarrow or \\xrightleftharpoons. Those have\n    // min-length = 1.75em, so we set min-length on these next three to match.\n    xrightleftarrows: [[\"baraboveleftarrow\", \"rightarrowabovebar\"], 1.75, 901],\n    xrightequilibrium: [[\"baraboveshortleftharpoon\", \"rightharpoonaboveshortbar\"], 1.75, 716],\n    xleftequilibrium: [[\"shortbaraboveleftharpoon\", \"shortrightharpoonabovebar\"], 1.75, 716]\n};\n\nvar groupLength = function groupLength(arg) {\n    if (arg.type === \"ordgroup\") {\n        return arg.body.length;\n    } else {\n        return 1;\n    }\n};\n\nvar stretchy_svgSpan = function svgSpan(group, options) {\n    // Create a span with inline SVG for the element.\n    function buildSvgSpan_() {\n        var viewBoxWidth = 400000; // default\n        var label = group.label.substr(1);\n        if (utils.contains([\"widehat\", \"widecheck\", \"widetilde\", \"utilde\"], label)) {\n            // Each type in the `if` statement corresponds to one of the ParseNode\n            // types below. This narrowing is required to access `grp.base`.\n            var grp = group;\n            // There are four SVG images available for each function.\n            // Choose a taller image when there are more characters.\n            var numChars = groupLength(grp.base);\n            var viewBoxHeight = void 0;\n            var pathName = void 0;\n            var _height = void 0;\n\n            if (numChars > 5) {\n                if (label === \"widehat\" || label === \"widecheck\") {\n                    viewBoxHeight = 420;\n                    viewBoxWidth = 2364;\n                    _height = 0.42;\n                    pathName = label + \"4\";\n                } else {\n                    viewBoxHeight = 312;\n                    viewBoxWidth = 2340;\n                    _height = 0.34;\n                    pathName = \"tilde4\";\n                }\n            } else {\n                var imgIndex = [1, 1, 2, 2, 3, 3][numChars];\n                if (label === \"widehat\" || label === \"widecheck\") {\n                    viewBoxWidth = [0, 1062, 2364, 2364, 2364][imgIndex];\n                    viewBoxHeight = [0, 239, 300, 360, 420][imgIndex];\n                    _height = [0, 0.24, 0.3, 0.3, 0.36, 0.42][imgIndex];\n                    pathName = label + imgIndex;\n                } else {\n                    viewBoxWidth = [0, 600, 1033, 2339, 2340][imgIndex];\n                    viewBoxHeight = [0, 260, 286, 306, 312][imgIndex];\n                    _height = [0, 0.26, 0.286, 0.3, 0.306, 0.34][imgIndex];\n                    pathName = \"tilde\" + imgIndex;\n                }\n            }\n            var path = new domTree_PathNode(pathName);\n            var svgNode = new domTree_SvgNode([path], {\n                \"width\": \"100%\",\n                \"height\": _height + \"em\",\n                \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + viewBoxHeight,\n                \"preserveAspectRatio\": \"none\"\n            });\n            return {\n                span: buildCommon.makeSvgSpan([], [svgNode], options),\n                minWidth: 0,\n                height: _height\n            };\n        } else {\n            var spans = [];\n\n            var data = katexImagesData[label];\n            var paths = data[0],\n                _minWidth = data[1],\n                _viewBoxHeight = data[2];\n\n            var _height2 = _viewBoxHeight / 1000;\n\n            var numSvgChildren = paths.length;\n            var widthClasses = void 0;\n            var aligns = void 0;\n            if (numSvgChildren === 1) {\n                // $FlowFixMe: All these cases must be of the 4-tuple type.\n                var align1 = data[3];\n                widthClasses = [\"hide-tail\"];\n                aligns = [align1];\n            } else if (numSvgChildren === 2) {\n                widthClasses = [\"halfarrow-left\", \"halfarrow-right\"];\n                aligns = [\"xMinYMin\", \"xMaxYMin\"];\n            } else if (numSvgChildren === 3) {\n                widthClasses = [\"brace-left\", \"brace-center\", \"brace-right\"];\n                aligns = [\"xMinYMin\", \"xMidYMin\", \"xMaxYMin\"];\n            } else {\n                throw new Error(\"Correct katexImagesData or update code here to support\\n                    \" + numSvgChildren + \" children.\");\n            }\n\n            for (var i = 0; i < numSvgChildren; i++) {\n                var _path = new domTree_PathNode(paths[i]);\n\n                var _svgNode = new domTree_SvgNode([_path], {\n                    \"width\": \"400em\",\n                    \"height\": _height2 + \"em\",\n                    \"viewBox\": \"0 0 \" + viewBoxWidth + \" \" + _viewBoxHeight,\n                    \"preserveAspectRatio\": aligns[i] + \" slice\"\n                });\n\n                var _span = buildCommon.makeSvgSpan([widthClasses[i]], [_svgNode], options);\n                if (numSvgChildren === 1) {\n                    return { span: _span, minWidth: _minWidth, height: _height2 };\n                } else {\n                    _span.style.height = _height2 + \"em\";\n                    spans.push(_span);\n                }\n            }\n\n            return {\n                span: buildCommon.makeSpan([\"stretchy\"], spans, options),\n                minWidth: _minWidth,\n                height: _height2\n            };\n        }\n    } // buildSvgSpan_()\n\n    var _buildSvgSpan_ = buildSvgSpan_(),\n        span = _buildSvgSpan_.span,\n        minWidth = _buildSvgSpan_.minWidth,\n        height = _buildSvgSpan_.height;\n\n    // Note that we are returning span.depth = 0.\n    // Any adjustments relative to the baseline must be done in buildHTML.\n\n\n    span.height = height;\n    span.style.height = height + \"em\";\n    if (minWidth > 0) {\n        span.style.minWidth = minWidth + \"em\";\n    }\n\n    return span;\n};\n\nvar stretchy_encloseSpan = function encloseSpan(inner, label, pad, options) {\n    // Return an image span for \\cancel, \\bcancel, \\xcancel, or \\fbox\n    var img = void 0;\n    var totalHeight = inner.height + inner.depth + 2 * pad;\n\n    if (/fbox|color/.test(label)) {\n        img = buildCommon.makeSpan([\"stretchy\", label], [], options);\n\n        if (label === \"fbox\") {\n            var color = options.color && options.getColor();\n            if (color) {\n                img.style.borderColor = color;\n            }\n        }\n    } else {\n        // \\cancel, \\bcancel, or \\xcancel\n        // Since \\cancel's SVG is inline and it omits the viewBox attribute,\n        // its stroke-width will not vary with span area.\n\n        var lines = [];\n        if (/^[bx]cancel$/.test(label)) {\n            lines.push(new domTree_LineNode({\n                \"x1\": \"0\",\n                \"y1\": \"0\",\n                \"x2\": \"100%\",\n                \"y2\": \"100%\",\n                \"stroke-width\": \"0.046em\"\n            }));\n        }\n\n        if (/^x?cancel$/.test(label)) {\n            lines.push(new domTree_LineNode({\n                \"x1\": \"0\",\n                \"y1\": \"100%\",\n                \"x2\": \"100%\",\n                \"y2\": \"0\",\n                \"stroke-width\": \"0.046em\"\n            }));\n        }\n\n        var svgNode = new domTree_SvgNode(lines, {\n            \"width\": \"100%\",\n            \"height\": totalHeight + \"em\"\n        });\n\n        img = buildCommon.makeSvgSpan([], [svgNode], options);\n    }\n\n    img.height = totalHeight;\n    img.style.height = totalHeight + \"em\";\n\n    return img;\n};\n\n/* harmony default export */ var stretchy = ({\n    encloseSpan: stretchy_encloseSpan,\n    mathMLnode: stretchy_mathMLnode,\n    svgSpan: stretchy_svgSpan\n});\n// CONCATENATED MODULE: ./src/functions/accent.js\n\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"accent\", but\n// also \"supsub\" since an accent can affect super/subscripting.\nvar accent_htmlBuilder = function htmlBuilder(grp, options) {\n    // Accents are handled in the TeXbook pg. 443, rule 12.\n    var base = void 0;\n    var group = void 0;\n\n    var supSub = checkNodeType(grp, \"supsub\");\n    var supSubGroup = void 0;\n    if (supSub) {\n        // If our base is a character box, and we have superscripts and\n        // subscripts, the supsub will defer to us. In particular, we want\n        // to attach the superscripts and subscripts to the inner body (so\n        // that the position of the superscripts and subscripts won't be\n        // affected by the height of the accent). We accomplish this by\n        // sticking the base of the accent into the base of the supsub, and\n        // rendering that, while keeping track of where the accent is.\n\n        // The real accent group is the base of the supsub group\n        group = assertNodeType(supSub.base, \"accent\");\n        // The character box is the base of the accent group\n        base = group.base;\n        // Stick the character box into the base of the supsub group\n        supSub.base = base;\n\n        // Rerender the supsub group with its new base, and store that\n        // result.\n        supSubGroup = assertSpan(buildHTML_buildGroup(supSub, options));\n\n        // reset original base\n        supSub.base = group;\n    } else {\n        group = assertNodeType(grp, \"accent\");\n        base = group.base;\n    }\n\n    // Build the base group\n    var body = buildHTML_buildGroup(base, options.havingCrampedStyle());\n\n    // Does the accent need to shift for the skew of a character?\n    var mustShift = group.isShifty && utils.isCharacterBox(base);\n\n    // Calculate the skew of the accent. This is based on the line \"If the\n    // nucleus is not a single character, let s = 0; otherwise set s to the\n    // kern amount for the nucleus followed by the \\skewchar of its font.\"\n    // Note that our skew metrics are just the kern between each character\n    // and the skewchar.\n    var skew = 0;\n    if (mustShift) {\n        // If the base is a character box, then we want the skew of the\n        // innermost character. To do that, we find the innermost character:\n        var baseChar = utils.getBaseElem(base);\n        // Then, we render its group to get the symbol inside it\n        var baseGroup = buildHTML_buildGroup(baseChar, options.havingCrampedStyle());\n        // Finally, we pull the skew off of the symbol.\n        skew = assertSymbolDomNode(baseGroup).skew;\n        // Note that we now throw away baseGroup, because the layers we\n        // removed with getBaseElem might contain things like \\color which\n        // we can't get rid of.\n        // TODO(emily): Find a better way to get the skew\n    }\n\n    // calculate the amount of space between the body and the accent\n    var clearance = Math.min(body.height, options.fontMetrics().xHeight);\n\n    // Build the accent\n    var accentBody = void 0;\n    if (!group.isStretchy) {\n        var accent = void 0;\n        var width = void 0;\n        if (group.label === \"\\\\vec\") {\n            // Before version 0.9, \\vec used the combining font glyph U+20D7.\n            // But browsers, especially Safari, are not consistent in how they\n            // render combining characters when not preceded by a character.\n            // So now we use an SVG.\n            // If Safari reforms, we should consider reverting to the glyph.\n            accent = buildCommon.staticSvg(\"vec\", options);\n            width = buildCommon.svgData.vec[1];\n        } else {\n            accent = buildCommon.makeSymbol(group.label, \"Main-Regular\", group.mode, options);\n            // Remove the italic correction of the accent, because it only serves to\n            // shift the accent over to a place we don't want.\n            accent.italic = 0;\n            width = accent.width;\n        }\n\n        accentBody = buildCommon.makeSpan([\"accent-body\"], [accent]);\n\n        // \"Full\" accents expand the width of the resulting symbol to be\n        // at least the width of the accent, and overlap directly onto the\n        // character without any vertical offset.\n        var accentFull = group.label === \"\\\\textcircled\";\n        if (accentFull) {\n            accentBody.classes.push('accent-full');\n            clearance = body.height;\n        }\n\n        // Shift the accent over by the skew.\n        var left = skew;\n\n        // CSS defines `.katex .accent .accent-body:not(.accent-full) { width: 0 }`\n        // so that the accent doesn't contribute to the bounding box.\n        // We need to shift the character by its width (effectively half\n        // its width) to compensate.\n        if (!accentFull) {\n            left -= width / 2;\n        }\n\n        accentBody.style.left = left + \"em\";\n\n        // \\textcircled uses the \\bigcirc glyph, so it needs some\n        // vertical adjustment to match LaTeX.\n        if (group.label === \"\\\\textcircled\") {\n            accentBody.style.top = \".2em\";\n        }\n\n        accentBody = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, { type: \"kern\", size: -clearance }, { type: \"elem\", elem: accentBody }]\n        }, options);\n    } else {\n        accentBody = stretchy.svgSpan(group, options);\n\n        accentBody = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, {\n                type: \"elem\",\n                elem: accentBody,\n                wrapperClasses: [\"svg-align\"],\n                wrapperStyle: skew > 0 ? {\n                    width: \"calc(100% - \" + 2 * skew + \"em)\",\n                    marginLeft: 2 * skew + \"em\"\n                } : undefined\n            }]\n        }, options);\n    }\n\n    var accentWrap = buildCommon.makeSpan([\"mord\", \"accent\"], [accentBody], options);\n\n    if (supSubGroup) {\n        // Here, we replace the \"base\" child of the supsub with our newly\n        // generated accent.\n        supSubGroup.children[0] = accentWrap;\n\n        // Since we don't rerun the height calculation after replacing the\n        // accent, we manually recalculate height.\n        supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height);\n\n        // Accents should always be ords, even when their innards are not.\n        supSubGroup.classes[0] = \"mord\";\n\n        return supSubGroup;\n    } else {\n        return accentWrap;\n    }\n};\n\nvar accent_mathmlBuilder = function mathmlBuilder(group, options) {\n    var accentNode = group.isStretchy ? stretchy.mathMLnode(group.label) : new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.label, group.mode)]);\n\n    var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.base, options), accentNode]);\n\n    node.setAttribute(\"accent\", \"true\");\n\n    return node;\n};\n\nvar NON_STRETCHY_ACCENT_REGEX = new RegExp([\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\"].map(function (accent) {\n    return \"\\\\\" + accent;\n}).join(\"|\"));\n\n// Accents\ndefineFunction({\n    type: \"accent\",\n    names: [\"\\\\acute\", \"\\\\grave\", \"\\\\ddot\", \"\\\\tilde\", \"\\\\bar\", \"\\\\breve\", \"\\\\check\", \"\\\\hat\", \"\\\\vec\", \"\\\\dot\", \"\\\\mathring\", \"\\\\widecheck\", \"\\\\widehat\", \"\\\\widetilde\", \"\\\\overrightarrow\", \"\\\\overleftarrow\", \"\\\\Overrightarrow\", \"\\\\overleftrightarrow\", \"\\\\overgroup\", \"\\\\overlinesegment\", \"\\\\overleftharpoon\", \"\\\\overrightharpoon\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var base = args[0];\n\n        var isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName);\n        var isShifty = !isStretchy || context.funcName === \"\\\\widehat\" || context.funcName === \"\\\\widetilde\" || context.funcName === \"\\\\widecheck\";\n\n        return {\n            type: \"accent\",\n            mode: context.parser.mode,\n            label: context.funcName,\n            isStretchy: isStretchy,\n            isShifty: isShifty,\n            base: base\n        };\n    },\n    htmlBuilder: accent_htmlBuilder,\n    mathmlBuilder: accent_mathmlBuilder\n});\n\n// Text-mode accents\ndefineFunction({\n    type: \"accent\",\n    names: [\"\\\\'\", \"\\\\`\", \"\\\\^\", \"\\\\~\", \"\\\\=\", \"\\\\u\", \"\\\\.\", '\\\\\"', \"\\\\r\", \"\\\\H\", \"\\\\v\", \"\\\\textcircled\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        allowedInMath: false\n    },\n    handler: function handler(context, args) {\n        var base = args[0];\n\n        return {\n            type: \"accent\",\n            mode: context.parser.mode,\n            label: context.funcName,\n            isStretchy: false,\n            isShifty: true,\n            base: base\n        };\n    },\n    htmlBuilder: accent_htmlBuilder,\n    mathmlBuilder: accent_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/accentunder.js\n\n// Horizontal overlap functions\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"accentUnder\",\n    names: [\"\\\\underleftarrow\", \"\\\\underrightarrow\", \"\\\\underleftrightarrow\", \"\\\\undergroup\", \"\\\\underlinesegment\", \"\\\\utilde\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var base = args[0];\n        return {\n            type: \"accentUnder\",\n            mode: parser.mode,\n            label: funcName,\n            base: base\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Treat under accents much like underlines.\n        var innerGroup = buildHTML_buildGroup(group.base, options);\n\n        var accentBody = stretchy.svgSpan(group, options);\n        var kern = group.label === \"\\\\utilde\" ? 0.12 : 0;\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"bottom\",\n            positionData: accentBody.height + kern,\n            children: [{ type: \"elem\", elem: accentBody, wrapperClasses: [\"svg-align\"] }, { type: \"kern\", size: kern }, { type: \"elem\", elem: innerGroup }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"accentunder\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var accentNode = stretchy.mathMLnode(group.label);\n        var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n        node.setAttribute(\"accentunder\", \"true\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/arrow.js\n\n\n\n\n\n\n\n\n// Stretchy arrows with an optional argument\ndefineFunction({\n    type: \"xArrow\",\n    names: [\"\\\\xleftarrow\", \"\\\\xrightarrow\", \"\\\\xLeftarrow\", \"\\\\xRightarrow\", \"\\\\xleftrightarrow\", \"\\\\xLeftrightarrow\", \"\\\\xhookleftarrow\", \"\\\\xhookrightarrow\", \"\\\\xmapsto\", \"\\\\xrightharpoondown\", \"\\\\xrightharpoonup\", \"\\\\xleftharpoondown\", \"\\\\xleftharpoonup\", \"\\\\xrightleftharpoons\", \"\\\\xleftrightharpoons\", \"\\\\xlongequal\", \"\\\\xtwoheadrightarrow\", \"\\\\xtwoheadleftarrow\", \"\\\\xtofrom\",\n    // The next 3 functions are here to support the mhchem extension.\n    // Direct use of these functions is discouraged and may break someday.\n    \"\\\\xrightleftarrows\", \"\\\\xrightequilibrium\", \"\\\\xleftequilibrium\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        return {\n            type: \"xArrow\",\n            mode: parser.mode,\n            label: funcName,\n            body: args[0],\n            below: optArgs[0]\n        };\n    },\n\n    // Flow is unable to correctly infer the type of `group`, even though it's\n    // unamibiguously determined from the passed-in `type` above.\n    htmlBuilder: function htmlBuilder(group, options) {\n        var style = options.style;\n\n        // Build the argument groups in the appropriate style.\n        // Ref: amsmath.dtx:   \\hbox{$\\scriptstyle\\mkern#3mu{#6}\\mkern#4mu$}%\n\n        var newOptions = options.havingStyle(style.sup());\n        var upperGroup = buildHTML_buildGroup(group.body, newOptions, options);\n        upperGroup.classes.push(\"x-arrow-pad\");\n\n        var lowerGroup = void 0;\n        if (group.below) {\n            // Build the lower group\n            newOptions = options.havingStyle(style.sub());\n            lowerGroup = buildHTML_buildGroup(group.below, newOptions, options);\n            lowerGroup.classes.push(\"x-arrow-pad\");\n        }\n\n        var arrowBody = stretchy.svgSpan(group, options);\n\n        // Re shift: Note that stretchy.svgSpan returned arrowBody.depth = 0.\n        // The point we want on the math axis is at 0.5 * arrowBody.height.\n        var arrowShift = -options.fontMetrics().axisHeight + 0.5 * arrowBody.height;\n        // 2 mu kern. Ref: amsmath.dtx: #7\\if0#2\\else\\mkern#2mu\\fi\n        var upperShift = -options.fontMetrics().axisHeight - 0.5 * arrowBody.height - 0.111; // 0.111 em = 2 mu\n        if (upperGroup.depth > 0.25 || group.label === \"\\\\xleftequilibrium\") {\n            upperShift -= upperGroup.depth; // shift up if depth encroaches\n        }\n\n        // Generate the vlist\n        var vlist = void 0;\n        if (lowerGroup) {\n            var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + 0.5 * arrowBody.height + 0.111;\n            vlist = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }, { type: \"elem\", elem: lowerGroup, shift: lowerShift }]\n            }, options);\n        } else {\n            vlist = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: upperGroup, shift: upperShift }, { type: \"elem\", elem: arrowBody, shift: arrowShift }]\n            }, options);\n        }\n\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n\n        return buildCommon.makeSpan([\"mrel\", \"x-arrow\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var arrowNode = stretchy.mathMLnode(group.label);\n        var node = void 0;\n        var lowerNode = void 0;\n\n        if (group.body) {\n            var upperNode = buildMathML_buildGroup(group.body, options);\n            if (group.below) {\n                lowerNode = buildMathML_buildGroup(group.below, options);\n                node = new mathMLTree.MathNode(\"munderover\", [arrowNode, lowerNode, upperNode]);\n            } else {\n                node = new mathMLTree.MathNode(\"mover\", [arrowNode, upperNode]);\n            }\n        } else if (group.below) {\n            lowerNode = buildMathML_buildGroup(group.below, options);\n            node = new mathMLTree.MathNode(\"munder\", [arrowNode, lowerNode]);\n        } else {\n            node = new mathMLTree.MathNode(\"mover\", [arrowNode]);\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/char.js\n\n\n\n\n// \\@char is an internal function that takes a grouped decimal argument like\n// {123} and converts into symbol with code 123.  It is used by the *macro*\n// \\char defined in macros.js.\ndefineFunction({\n    type: \"textord\",\n    names: [\"\\\\@char\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var arg = assertNodeType(args[0], \"ordgroup\");\n        var group = arg.body;\n        var number = \"\";\n        for (var i = 0; i < group.length; i++) {\n            var node = assertNodeType(group[i], \"textord\");\n            number += node.text;\n        }\n        var code = parseInt(number);\n        if (isNaN(code)) {\n            throw new src_ParseError(\"\\\\@char has non-numeric argument \" + number);\n        }\n        return {\n            type: \"textord\",\n            mode: parser.mode,\n            text: String.fromCharCode(code)\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/color.js\n\n\n\n\n\n\n\n\nvar color_htmlBuilder = function htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), false);\n\n    // \\color isn't supposed to affect the type of the elements it contains.\n    // To accomplish this, we wrap the results in a fragment, so the inner\n    // elements will be able to directly interact with their neighbors. For\n    // example, `\\color{red}{2 +} 3` has the same spacing as `2 + 3`\n    return buildCommon.makeFragment(elements);\n};\n\nvar color_mathmlBuilder = function mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n\n    var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n    node.setAttribute(\"mathcolor\", group.color);\n\n    return node;\n};\n\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\textcolor\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"original\"]\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n        var body = args[1];\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: color,\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n\n// TODO(kevinb): define these using macros\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\blue\", \"\\\\orange\", \"\\\\pink\", \"\\\\red\", \"\\\\green\", \"\\\\gray\", \"\\\\purple\", \"\\\\blueA\", \"\\\\blueB\", \"\\\\blueC\", \"\\\\blueD\", \"\\\\blueE\", \"\\\\tealA\", \"\\\\tealB\", \"\\\\tealC\", \"\\\\tealD\", \"\\\\tealE\", \"\\\\greenA\", \"\\\\greenB\", \"\\\\greenC\", \"\\\\greenD\", \"\\\\greenE\", \"\\\\goldA\", \"\\\\goldB\", \"\\\\goldC\", \"\\\\goldD\", \"\\\\goldE\", \"\\\\redA\", \"\\\\redB\", \"\\\\redC\", \"\\\\redD\", \"\\\\redE\", \"\\\\maroonA\", \"\\\\maroonB\", \"\\\\maroonC\", \"\\\\maroonD\", \"\\\\maroonE\", \"\\\\purpleA\", \"\\\\purpleB\", \"\\\\purpleC\", \"\\\\purpleD\", \"\\\\purpleE\", \"\\\\mintA\", \"\\\\mintB\", \"\\\\mintC\", \"\\\\grayA\", \"\\\\grayB\", \"\\\\grayC\", \"\\\\grayD\", \"\\\\grayE\", \"\\\\grayF\", \"\\\\grayG\", \"\\\\grayH\", \"\\\\grayI\", \"\\\\kaBlue\", \"\\\\kaGreen\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        greediness: 3\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName;\n\n        var body = args[0];\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: \"katex-\" + funcName.slice(1),\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"color\",\n    names: [\"\\\\color\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\"]\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            breakOnTokenText = _ref3.breakOnTokenText;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n\n        // If we see a styling function, parse out the implicit body\n        var body = parser.parseExpression(true, breakOnTokenText);\n\n        return {\n            type: \"color\",\n            mode: parser.mode,\n            color: color,\n            body: body\n        };\n    },\n\n    htmlBuilder: color_htmlBuilder,\n    mathmlBuilder: color_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/cr.js\n\n// Row breaks within tabular environments, and line breaks at top level\n\n\n\n\n\n\n\n\n// \\\\ is a macro mapping to either \\cr or \\newline.  Because they have the\n// same signature, we implement them as one megafunction, with newRow\n// indicating whether we're in the \\cr case, and newLine indicating whether\n// to break the line in the \\newline case.\n\ndefineFunction({\n    type: \"cr\",\n    names: [\"\\\\cr\", \"\\\\newline\"],\n    props: {\n        numArgs: 0,\n        numOptionalArgs: 1,\n        argTypes: [\"size\"],\n        allowedInText: true\n    },\n\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var size = optArgs[0];\n        var newRow = funcName === \"\\\\cr\";\n        var newLine = false;\n        if (!newRow) {\n            if (parser.settings.displayMode && parser.settings.useStrictBehavior(\"newLineInDisplayMode\", \"In LaTeX, \\\\\\\\ or \\\\newline \" + \"does nothing in display mode\")) {\n                newLine = false;\n            } else {\n                newLine = true;\n            }\n        }\n        return {\n            type: \"cr\",\n            mode: parser.mode,\n            newLine: newLine,\n            newRow: newRow,\n            size: size && assertNodeType(size, \"size\").value\n        };\n    },\n\n\n    // The following builders are called only at the top level,\n    // not within tabular/array environments.\n\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.newRow) {\n            throw new src_ParseError(\"\\\\cr valid only within a tabular/array environment\");\n        }\n        var span = buildCommon.makeSpan([\"mspace\"], [], options);\n        if (group.newLine) {\n            span.classes.push(\"newline\");\n            if (group.size) {\n                span.style.marginTop = units_calculateSize(group.size, options) + \"em\";\n            }\n        }\n        return span;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mspace\");\n        if (group.newLine) {\n            node.setAttribute(\"linebreak\", \"newline\");\n            if (group.size) {\n                node.setAttribute(\"height\", units_calculateSize(group.size, options) + \"em\");\n            }\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/delimiter.js\n\n/**\n * This file deals with creating delimiters of various sizes. The TeXbook\n * discusses these routines on page 441-442, in the \"Another subroutine sets box\n * x to a specified variable delimiter\" paragraph.\n *\n * There are three main routines here. `makeSmallDelim` makes a delimiter in the\n * normal font, but in either text, script, or scriptscript style.\n * `makeLargeDelim` makes a delimiter in textstyle, but in one of the Size1,\n * Size2, Size3, or Size4 fonts. `makeStackedDelim` makes a delimiter out of\n * smaller pieces that are stacked on top of one another.\n *\n * The functions take a parameter `center`, which determines if the delimiter\n * should be centered around the axis.\n *\n * Then, there are three exposed functions. `sizedDelim` makes a delimiter in\n * one of the given sizes. This is used for things like `\\bigl`.\n * `customSizedDelim` makes a delimiter with a given total height+depth. It is\n * called in places like `\\sqrt`. `leftRightDelim` makes an appropriate\n * delimiter which surrounds an expression of a given height an depth. It is\n * used in `\\left` and `\\right`.\n */\n\n\n\n\n\n\n\n\n\n\n/**\n * Get the metrics for a given symbol and font, after transformation (i.e.\n * after following replacement from symbols.js)\n */\nvar delimiter_getMetrics = function getMetrics(symbol, font, mode) {\n    var replace = src_symbols.math[symbol] && src_symbols.math[symbol].replace;\n    var metrics = getCharacterMetrics(replace || symbol, font, mode);\n    if (!metrics) {\n        throw new Error(\"Unsupported symbol \" + symbol + \" and font size \" + font + \".\");\n    }\n    return metrics;\n};\n\n/**\n * Puts a delimiter span in a given style, and adds appropriate height, depth,\n * and maxFontSizes.\n */\nvar delimiter_styleWrap = function styleWrap(delim, toStyle, options, classes) {\n    var newOptions = options.havingBaseStyle(toStyle);\n\n    var span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [delim], options);\n\n    var delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;\n    span.height *= delimSizeMultiplier;\n    span.depth *= delimSizeMultiplier;\n    span.maxFontSize = newOptions.sizeMultiplier;\n\n    return span;\n};\n\nvar centerSpan = function centerSpan(span, options, style) {\n    var newOptions = options.havingBaseStyle(style);\n    var shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;\n\n    span.classes.push(\"delimcenter\");\n    span.style.top = shift + \"em\";\n    span.height -= shift;\n    span.depth += shift;\n};\n\n/**\n * Makes a small delimiter. This is a delimiter that comes in the Main-Regular\n * font, but is restyled to either be in textstyle, scriptstyle, or\n * scriptscriptstyle.\n */\nvar delimiter_makeSmallDelim = function makeSmallDelim(delim, style, center, options, mode, classes) {\n    var text = buildCommon.makeSymbol(delim, \"Main-Regular\", mode, options);\n    var span = delimiter_styleWrap(text, style, options, classes);\n    if (center) {\n        centerSpan(span, options, style);\n    }\n    return span;\n};\n\n/**\n * Builds a symbol in the given font size (note size is an integer)\n */\nvar delimiter_mathrmSize = function mathrmSize(value, size, mode, options) {\n    return buildCommon.makeSymbol(value, \"Size\" + size + \"-Regular\", mode, options);\n};\n\n/**\n * Makes a large delimiter. This is a delimiter that comes in the Size1, Size2,\n * Size3, or Size4 fonts. It is always rendered in textstyle.\n */\nvar delimiter_makeLargeDelim = function makeLargeDelim(delim, size, center, options, mode, classes) {\n    var inner = delimiter_mathrmSize(delim, size, mode, options);\n    var span = delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"size\" + size], [inner], options), src_Style.TEXT, options, classes);\n    if (center) {\n        centerSpan(span, options, src_Style.TEXT);\n    }\n    return span;\n};\n\n/**\n * Make an inner span with the given offset and in the given font. This is used\n * in `makeStackedDelim` to make the stacking pieces for the delimiter.\n */\nvar delimiter_makeInner = function makeInner(symbol, font, mode) {\n    var sizeClass = void 0;\n    // Apply the correct CSS class to choose the right font.\n    if (font === \"Size1-Regular\") {\n        sizeClass = \"delim-size1\";\n    } else /* if (font === \"Size4-Regular\") */{\n            sizeClass = \"delim-size4\";\n        }\n\n    var inner = buildCommon.makeSpan([\"delimsizinginner\", sizeClass], [buildCommon.makeSpan([], [buildCommon.makeSymbol(symbol, font, mode)])]);\n\n    // Since this will be passed into `makeVList` in the end, wrap the element\n    // in the appropriate tag that VList uses.\n    return { type: \"elem\", elem: inner };\n};\n\n/**\n * Make a stacked delimiter out of a given delimiter, with the total height at\n * least `heightTotal`. This routine is mentioned on page 442 of the TeXbook.\n */\nvar delimiter_makeStackedDelim = function makeStackedDelim(delim, heightTotal, center, options, mode, classes) {\n    // There are four parts, the top, an optional middle, a repeated part, and a\n    // bottom.\n    var top = void 0;\n    var middle = void 0;\n    var repeat = void 0;\n    var bottom = void 0;\n    top = repeat = bottom = delim;\n    middle = null;\n    // Also keep track of what font the delimiters are in\n    var font = \"Size1-Regular\";\n\n    // We set the parts and font based on the symbol. Note that we use\n    // '\\u23d0' instead of '|' and '\\u2016' instead of '\\\\|' for the\n    // repeats of the arrows\n    if (delim === \"\\\\uparrow\") {\n        repeat = bottom = \"\\u23D0\";\n    } else if (delim === \"\\\\Uparrow\") {\n        repeat = bottom = \"\\u2016\";\n    } else if (delim === \"\\\\downarrow\") {\n        top = repeat = \"\\u23D0\";\n    } else if (delim === \"\\\\Downarrow\") {\n        top = repeat = \"\\u2016\";\n    } else if (delim === \"\\\\updownarrow\") {\n        top = \"\\\\uparrow\";\n        repeat = \"\\u23D0\";\n        bottom = \"\\\\downarrow\";\n    } else if (delim === \"\\\\Updownarrow\") {\n        top = \"\\\\Uparrow\";\n        repeat = \"\\u2016\";\n        bottom = \"\\\\Downarrow\";\n    } else if (delim === \"[\" || delim === \"\\\\lbrack\") {\n        top = \"\\u23A1\";\n        repeat = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"]\" || delim === \"\\\\rbrack\") {\n        top = \"\\u23A4\";\n        repeat = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lfloor\" || delim === \"\\u230A\") {\n        repeat = top = \"\\u23A2\";\n        bottom = \"\\u23A3\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lceil\" || delim === \"\\u2308\") {\n        top = \"\\u23A1\";\n        repeat = bottom = \"\\u23A2\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rfloor\" || delim === \"\\u230B\") {\n        repeat = top = \"\\u23A5\";\n        bottom = \"\\u23A6\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rceil\" || delim === \"\\u2309\") {\n        top = \"\\u23A4\";\n        repeat = bottom = \"\\u23A5\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"(\") {\n        top = \"\\u239B\";\n        repeat = \"\\u239C\";\n        bottom = \"\\u239D\";\n        font = \"Size4-Regular\";\n    } else if (delim === \")\") {\n        top = \"\\u239E\";\n        repeat = \"\\u239F\";\n        bottom = \"\\u23A0\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\{\" || delim === \"\\\\lbrace\") {\n        top = \"\\u23A7\";\n        middle = \"\\u23A8\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\}\" || delim === \"\\\\rbrace\") {\n        top = \"\\u23AB\";\n        middle = \"\\u23AC\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lgroup\" || delim === \"\\u27EE\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rgroup\" || delim === \"\\u27EF\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\lmoustache\" || delim === \"\\u23B0\") {\n        top = \"\\u23A7\";\n        bottom = \"\\u23AD\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    } else if (delim === \"\\\\rmoustache\" || delim === \"\\u23B1\") {\n        top = \"\\u23AB\";\n        bottom = \"\\u23A9\";\n        repeat = \"\\u23AA\";\n        font = \"Size4-Regular\";\n    }\n\n    // Get the metrics of the four sections\n    var topMetrics = delimiter_getMetrics(top, font, mode);\n    var topHeightTotal = topMetrics.height + topMetrics.depth;\n    var repeatMetrics = delimiter_getMetrics(repeat, font, mode);\n    var repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth;\n    var bottomMetrics = delimiter_getMetrics(bottom, font, mode);\n    var bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth;\n    var middleHeightTotal = 0;\n    var middleFactor = 1;\n    if (middle !== null) {\n        var middleMetrics = delimiter_getMetrics(middle, font, mode);\n        middleHeightTotal = middleMetrics.height + middleMetrics.depth;\n        middleFactor = 2; // repeat symmetrically above and below middle\n    }\n\n    // Calcuate the minimal height that the delimiter can have.\n    // It is at least the size of the top, bottom, and optional middle combined.\n    var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal;\n\n    // Compute the number of copies of the repeat symbol we will need\n    var repeatCount = Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal));\n\n    // Compute the total height of the delimiter including all the symbols\n    var realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal;\n\n    // The center of the delimiter is placed at the center of the axis. Note\n    // that in this context, \"center\" means that the delimiter should be\n    // centered around the axis in the current style, while normally it is\n    // centered around the axis in textstyle.\n    var axisHeight = options.fontMetrics().axisHeight;\n    if (center) {\n        axisHeight *= options.sizeMultiplier;\n    }\n    // Calculate the depth\n    var depth = realHeightTotal / 2 - axisHeight;\n\n    // Now, we start building the pieces that will go into the vlist\n\n    // Keep a list of the inner pieces\n    var inners = [];\n\n    // Add the bottom symbol\n    inners.push(delimiter_makeInner(bottom, font, mode));\n\n    if (middle === null) {\n        // Add that many symbols\n        for (var i = 0; i < repeatCount; i++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n    } else {\n        // When there is a middle bit, we need the middle part and two repeated\n        // sections\n        for (var _i = 0; _i < repeatCount; _i++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n        inners.push(delimiter_makeInner(middle, font, mode));\n        for (var _i2 = 0; _i2 < repeatCount; _i2++) {\n            inners.push(delimiter_makeInner(repeat, font, mode));\n        }\n    }\n\n    // Add the top symbol\n    inners.push(delimiter_makeInner(top, font, mode));\n\n    // Finally, build the vlist\n    var newOptions = options.havingBaseStyle(src_Style.TEXT);\n    var inner = buildCommon.makeVList({\n        positionType: \"bottom\",\n        positionData: depth,\n        children: inners\n    }, newOptions);\n\n    return delimiter_styleWrap(buildCommon.makeSpan([\"delimsizing\", \"mult\"], [inner], newOptions), src_Style.TEXT, options, classes);\n};\n\n// All surds have 0.08em padding above the viniculum inside the SVG.\n// That keeps browser span height rounding error from pinching the line.\nvar vbPad = 80; // padding above the surd, measured inside the viewBox.\nvar emPad = 0.08; // padding, in ems, measured in the document.\n\nvar delimiter_sqrtSvg = function sqrtSvg(sqrtName, height, viewBoxHeight, options) {\n    var alternate = void 0;\n    if (sqrtName === \"sqrtTall\") {\n        // sqrtTall is from glyph U23B7 in the font KaTeX_Size4-Regular\n        // One path edge has a variable length. It runs from the viniculumn\n        // to a point near (14 units) the bottom of the surd. The viniculum\n        // is 40 units thick. So the length of the line in question is:\n        var vertSegment = viewBoxHeight - 54 - vbPad;\n        alternate = \"M702 \" + vbPad + \"H400000v40H742v\" + vertSegment + \"l-4 4-4 4c-.667.7\\n-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667\\n-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155\\n 77-156c66 199.333 139 419.667 219 661 l218 661zM702 \" + vbPad + \"H400000v40H742z\";\n    }\n    var pathNode = new domTree_PathNode(sqrtName, alternate);\n\n    var svg = new domTree_SvgNode([pathNode], {\n        // Note: 1000:1 ratio of viewBox to document em width.\n        \"width\": \"400em\",\n        \"height\": height + \"em\",\n        \"viewBox\": \"0 0 400000 \" + viewBoxHeight,\n        \"preserveAspectRatio\": \"xMinYMin slice\"\n    });\n\n    return buildCommon.makeSvgSpan([\"hide-tail\"], [svg], options);\n};\n\n/**\n * Make a sqrt image of the given height,\n */\nvar makeSqrtImage = function makeSqrtImage(height, options) {\n    // Define a newOptions that removes the effect of size changes such as \\Huge.\n    // We don't pick different a height surd for \\Huge. For it, we scale up.\n    var newOptions = options.havingBaseSizing();\n\n    // Pick the desired surd glyph from a sequence of surds.\n    var delim = traverseSequence(\"\\\\surd\", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions);\n\n    var sizeMultiplier = newOptions.sizeMultiplier; // default\n\n    // Create a span containing an SVG image of a sqrt symbol.\n    var span = void 0;\n    var spanHeight = 0;\n    var texHeight = 0;\n    var viewBoxHeight = 0;\n    var advanceWidth = void 0;\n\n    // We create viewBoxes with 80 units of \"padding\" above each surd.\n    // Then browser rounding error on the parent span height will not\n    // encroach on the ink of the viniculum. But that padding is not\n    // included in the TeX-like `height` used for calculation of\n    // vertical alignment. So texHeight = span.height < span.style.height.\n\n    if (delim.type === \"small\") {\n        // Get an SVG that is derived from glyph U+221A in font KaTeX-Main.\n        viewBoxHeight = 1000 + vbPad; // 1000 unit glyph height.\n        if (height < 1.0) {\n            sizeMultiplier = 1.0; // mimic a \\textfont radical\n        } else if (height < 1.4) {\n            sizeMultiplier = 0.7; // mimic a \\scriptfont radical\n        }\n        spanHeight = (1.0 + emPad) / sizeMultiplier;\n        texHeight = 1.00 / sizeMultiplier;\n        span = delimiter_sqrtSvg(\"sqrtMain\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.853em\";\n        advanceWidth = 0.833 / sizeMultiplier; // from the font.\n    } else if (delim.type === \"large\") {\n        // These SVGs come from fonts: KaTeX_Size1, _Size2, etc.\n        viewBoxHeight = (1000 + vbPad) * sizeToMaxHeight[delim.size];\n        texHeight = sizeToMaxHeight[delim.size] / sizeMultiplier;\n        spanHeight = (sizeToMaxHeight[delim.size] + emPad) / sizeMultiplier;\n        span = delimiter_sqrtSvg(\"sqrtSize\" + delim.size, spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"1.02em\";\n        advanceWidth = 1.0 / sizeMultiplier; // 1.0 from the font.\n    } else {\n        // Tall sqrt. In TeX, this would be stacked using multiple glyphs.\n        // We'll use a single SVG to accomplish the same thing.\n        spanHeight = height + emPad;\n        texHeight = height;\n        viewBoxHeight = Math.floor(1000 * height) + vbPad;\n        span = delimiter_sqrtSvg(\"sqrtTall\", spanHeight, viewBoxHeight, options);\n        span.style.minWidth = \"0.742em\";\n        advanceWidth = 1.056;\n    }\n\n    span.height = texHeight;\n    span.style.height = spanHeight + \"em\";\n\n    return {\n        span: span,\n        advanceWidth: advanceWidth,\n        // Calculate the actual line width.\n        // This actually should depend on the chosen font -- e.g. \\boldmath\n        // should use the thicker surd symbols from e.g. KaTeX_Main-Bold, and\n        // have thicker rules.\n        ruleWidth: options.fontMetrics().sqrtRuleThickness * sizeMultiplier\n    };\n};\n\n// There are three kinds of delimiters, delimiters that stack when they become\n// too large\nvar stackLargeDelimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"\\\\surd\"];\n\n// delimiters that always stack\nvar stackAlwaysDelimiters = [\"\\\\uparrow\", \"\\\\downarrow\", \"\\\\updownarrow\", \"\\\\Uparrow\", \"\\\\Downarrow\", \"\\\\Updownarrow\", \"|\", \"\\\\|\", \"\\\\vert\", \"\\\\Vert\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\"];\n\n// and delimiters that never stack\nvar stackNeverDelimiters = [\"<\", \">\", \"\\\\langle\", \"\\\\rangle\", \"/\", \"\\\\backslash\", \"\\\\lt\", \"\\\\gt\"];\n\n// Metrics of the different sizes. Found by looking at TeX's output of\n// $\\bigl| // \\Bigl| \\biggl| \\Biggl| \\showlists$\n// Used to create stacked delimiters of appropriate sizes in makeSizedDelim.\nvar sizeToMaxHeight = [0, 1.2, 1.8, 2.4, 3.0];\n\n/**\n * Used to create a delimiter of a specific size, where `size` is 1, 2, 3, or 4.\n */\nvar delimiter_makeSizedDelim = function makeSizedDelim(delim, size, options, mode, classes) {\n    // < and > turn into \\langle and \\rangle in delimiters\n    if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Sized delimiters are never centered.\n    if (utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) {\n        return delimiter_makeLargeDelim(delim, size, false, options, mode, classes);\n    } else if (utils.contains(stackAlwaysDelimiters, delim)) {\n        return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], false, options, mode, classes);\n    } else {\n        throw new src_ParseError(\"Illegal delimiter: '\" + delim + \"'\");\n    }\n};\n\n/**\n * There are three different sequences of delimiter sizes that the delimiters\n * follow depending on the kind of delimiter. This is used when creating custom\n * sized delimiters to decide whether to create a small, large, or stacked\n * delimiter.\n *\n * In real TeX, these sequences aren't explicitly defined, but are instead\n * defined inside the font metrics. Since there are only three sequences that\n * are possible for the delimiters that TeX defines, it is easier to just encode\n * them explicitly here.\n */\n\n// Delimiters that never stack try small delimiters and large delimiters only\nvar stackNeverDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }];\n\n// Delimiters that always stack try the small delimiters first, then stack\nvar stackAlwaysDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"stack\" }];\n\n// Delimiters that stack when large try the small and then large delimiters, and\n// stack afterwards\nvar stackLargeDelimiterSequence = [{ type: \"small\", style: src_Style.SCRIPTSCRIPT }, { type: \"small\", style: src_Style.SCRIPT }, { type: \"small\", style: src_Style.TEXT }, { type: \"large\", size: 1 }, { type: \"large\", size: 2 }, { type: \"large\", size: 3 }, { type: \"large\", size: 4 }, { type: \"stack\" }];\n\n/**\n * Get the font used in a delimiter based on what kind of delimiter it is.\n * TODO(#963) Use more specific font family return type once that is introduced.\n */\nvar delimTypeToFont = function delimTypeToFont(type) {\n    if (type.type === \"small\") {\n        return \"Main-Regular\";\n    } else if (type.type === \"large\") {\n        return \"Size\" + type.size + \"-Regular\";\n    } else if (type.type === \"stack\") {\n        return \"Size4-Regular\";\n    } else {\n        throw new Error(\"Add support for delim type '\" + type.type + \"' here.\");\n    }\n};\n\n/**\n * Traverse a sequence of types of delimiters to decide what kind of delimiter\n * should be used to create a delimiter of the given height+depth.\n */\nvar traverseSequence = function traverseSequence(delim, height, sequence, options) {\n    // Here, we choose the index we should start at in the sequences. In smaller\n    // sizes (which correspond to larger numbers in style.size) we start earlier\n    // in the sequence. Thus, scriptscript starts at index 3-3=0, script starts\n    // at index 3-2=1, text starts at 3-1=2, and display starts at min(2,3-0)=2\n    var start = Math.min(2, 3 - options.style.size);\n    for (var i = start; i < sequence.length; i++) {\n        if (sequence[i].type === \"stack\") {\n            // This is always the last delimiter, so we just break the loop now.\n            break;\n        }\n\n        var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), \"math\");\n        var heightDepth = metrics.height + metrics.depth;\n\n        // Small delimiters are scaled down versions of the same font, so we\n        // account for the style change size.\n\n        if (sequence[i].type === \"small\") {\n            var newOptions = options.havingBaseStyle(sequence[i].style);\n            heightDepth *= newOptions.sizeMultiplier;\n        }\n\n        // Check if the delimiter at this size works for the given height.\n        if (heightDepth > height) {\n            return sequence[i];\n        }\n    }\n\n    // If we reached the end of the sequence, return the last sequence element.\n    return sequence[sequence.length - 1];\n};\n\n/**\n * Make a delimiter of a given height+depth, with optional centering. Here, we\n * traverse the sequences, and create a delimiter that the sequence tells us to.\n */\nvar delimiter_makeCustomSizedDelim = function makeCustomSizedDelim(delim, height, center, options, mode, classes) {\n    if (delim === \"<\" || delim === \"\\\\lt\" || delim === \"\\u27E8\") {\n        delim = \"\\\\langle\";\n    } else if (delim === \">\" || delim === \"\\\\gt\" || delim === \"\\u27E9\") {\n        delim = \"\\\\rangle\";\n    }\n\n    // Decide what sequence to use\n    var sequence = void 0;\n    if (utils.contains(stackNeverDelimiters, delim)) {\n        sequence = stackNeverDelimiterSequence;\n    } else if (utils.contains(stackLargeDelimiters, delim)) {\n        sequence = stackLargeDelimiterSequence;\n    } else {\n        sequence = stackAlwaysDelimiterSequence;\n    }\n\n    // Look through the sequence\n    var delimType = traverseSequence(delim, height, sequence, options);\n\n    // Get the delimiter from font glyphs.\n    // Depending on the sequence element we decided on, call the\n    // appropriate function.\n    if (delimType.type === \"small\") {\n        return delimiter_makeSmallDelim(delim, delimType.style, center, options, mode, classes);\n    } else if (delimType.type === \"large\") {\n        return delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes);\n    } else /* if (delimType.type === \"stack\") */{\n            return delimiter_makeStackedDelim(delim, height, center, options, mode, classes);\n        }\n};\n\n/**\n * Make a delimiter for use with `\\left` and `\\right`, given a height and depth\n * of an expression that the delimiters surround.\n */\nvar makeLeftRightDelim = function makeLeftRightDelim(delim, height, depth, options, mode, classes) {\n    // We always center \\left/\\right delimiters, so the axis is always shifted\n    var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier;\n\n    // Taken from TeX source, tex.web, function make_left_right\n    var delimiterFactor = 901;\n    var delimiterExtend = 5.0 / options.fontMetrics().ptPerEm;\n\n    var maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight);\n\n    var totalHeight = Math.max(\n    // In real TeX, calculations are done using integral values which are\n    // 65536 per pt, or 655360 per em. So, the division here truncates in\n    // TeX but doesn't here, producing different results. If we wanted to\n    // exactly match TeX's calculation, we could do\n    //   Math.floor(655360 * maxDistFromAxis / 500) *\n    //    delimiterFactor / 655360\n    // (To see the difference, compare\n    //    x^{x^{\\left(\\rule{0.1em}{0.68em}\\right)}}\n    // in TeX and KaTeX)\n    maxDistFromAxis / 500 * delimiterFactor, 2 * maxDistFromAxis - delimiterExtend);\n\n    // Finally, we defer to `makeCustomSizedDelim` with our calculated total\n    // height\n    return delimiter_makeCustomSizedDelim(delim, totalHeight, true, options, mode, classes);\n};\n\n/* harmony default export */ var delimiter = ({\n    sqrtImage: makeSqrtImage,\n    sizedDelim: delimiter_makeSizedDelim,\n    customSizedDelim: delimiter_makeCustomSizedDelim,\n    leftRightDelim: makeLeftRightDelim\n});\n// CONCATENATED MODULE: ./src/functions/delimsizing.js\n\n\n\n\n\n\n\n\n\n\n\n// Extra data needed for the delimiter handler down below\nvar delimiterSizes = {\n    \"\\\\bigl\": { mclass: \"mopen\", size: 1 },\n    \"\\\\Bigl\": { mclass: \"mopen\", size: 2 },\n    \"\\\\biggl\": { mclass: \"mopen\", size: 3 },\n    \"\\\\Biggl\": { mclass: \"mopen\", size: 4 },\n    \"\\\\bigr\": { mclass: \"mclose\", size: 1 },\n    \"\\\\Bigr\": { mclass: \"mclose\", size: 2 },\n    \"\\\\biggr\": { mclass: \"mclose\", size: 3 },\n    \"\\\\Biggr\": { mclass: \"mclose\", size: 4 },\n    \"\\\\bigm\": { mclass: \"mrel\", size: 1 },\n    \"\\\\Bigm\": { mclass: \"mrel\", size: 2 },\n    \"\\\\biggm\": { mclass: \"mrel\", size: 3 },\n    \"\\\\Biggm\": { mclass: \"mrel\", size: 4 },\n    \"\\\\big\": { mclass: \"mord\", size: 1 },\n    \"\\\\Big\": { mclass: \"mord\", size: 2 },\n    \"\\\\bigg\": { mclass: \"mord\", size: 3 },\n    \"\\\\Bigg\": { mclass: \"mord\", size: 4 }\n};\n\nvar delimiters = [\"(\", \")\", \"[\", \"\\\\lbrack\", \"]\", \"\\\\rbrack\", \"\\\\{\", \"\\\\lbrace\", \"\\\\}\", \"\\\\rbrace\", \"\\\\lfloor\", \"\\\\rfloor\", \"\\u230A\", \"\\u230B\", \"\\\\lceil\", \"\\\\rceil\", \"\\u2308\", \"\\u2309\", \"<\", \">\", \"\\\\langle\", \"\\u27E8\", \"\\\\rangle\", \"\\u27E9\", \"\\\\lt\", \"\\\\gt\", \"\\\\lvert\", \"\\\\rvert\", \"\\\\lVert\", \"\\\\rVert\", \"\\\\lgroup\", \"\\\\rgroup\", \"\\u27EE\", \"\\u27EF\", \"\\\\lmoustache\", \"\\\\rmoustache\", \"\\u23B0\", \"\\u23B1\", \"/\", \"\\\\backslash\", \"|\", \"\\\\vert\", \"\\\\|\", \"\\\\Vert\", \"\\\\uparrow\", \"\\\\Uparrow\", \"\\\\downarrow\", \"\\\\Downarrow\", \"\\\\updownarrow\", \"\\\\Updownarrow\", \".\"];\n\n// Delimiter functions\nfunction checkDelimiter(delim, context) {\n    var symDelim = checkSymbolNodeType(delim);\n    if (symDelim && utils.contains(delimiters, symDelim.text)) {\n        return symDelim;\n    } else {\n        throw new src_ParseError(\"Invalid delimiter: '\" + (\n        // $FlowFixMe, do not polyfill\n        symDelim ? symDelim.text : JSON[\"stringify\"](delim)) + \"' after '\" + context.funcName + \"'\", delim);\n    }\n}\n\ndefineFunction({\n    type: \"delimsizing\",\n    names: [\"\\\\bigl\", \"\\\\Bigl\", \"\\\\biggl\", \"\\\\Biggl\", \"\\\\bigr\", \"\\\\Bigr\", \"\\\\biggr\", \"\\\\Biggr\", \"\\\\bigm\", \"\\\\Bigm\", \"\\\\biggm\", \"\\\\Biggm\", \"\\\\big\", \"\\\\Big\", \"\\\\bigg\", \"\\\\Bigg\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        return {\n            type: \"delimsizing\",\n            mode: context.parser.mode,\n            size: delimiterSizes[context.funcName].size,\n            mclass: delimiterSizes[context.funcName].mclass,\n            delim: delim.text\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.delim === \".\") {\n            // Empty delimiters still count as elements, even though they don't\n            // show anything.\n            return buildCommon.makeSpan([group.mclass]);\n        }\n\n        // Use delimiter.sizedDelim to generate the delimiter.\n        return delimiter.sizedDelim(group.delim, group.size, options, group.mode, [group.mclass]);\n    },\n    mathmlBuilder: function mathmlBuilder(group) {\n        var children = [];\n\n        if (group.delim !== \".\") {\n            children.push(buildMathML_makeText(group.delim, group.mode));\n        }\n\n        var node = new mathMLTree.MathNode(\"mo\", children);\n\n        if (group.mclass === \"mopen\" || group.mclass === \"mclose\") {\n            // Only some of the delimsizing functions act as fences, and they\n            // return \"mopen\" or \"mclose\" mclass.\n            node.setAttribute(\"fence\", \"true\");\n        } else {\n            // Explicitly disable fencing if it's not a fence, to override the\n            // defaults.\n            node.setAttribute(\"fence\", \"false\");\n        }\n\n        return node;\n    }\n});\n\nfunction assertParsed(group) {\n    if (!group.body) {\n        throw new Error(\"Bug: The leftright ParseNode wasn't fully parsed.\");\n    }\n}\n\ndefineFunction({\n    type: \"leftright-right\",\n    names: [\"\\\\right\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        // \\left case below triggers parsing of \\right in\n        //   `const right = parser.parseFunction();`\n        // uses this return value.\n        return {\n            type: \"leftright-right\",\n            mode: context.parser.mode,\n            delim: checkDelimiter(args[0], context).text\n        };\n    }\n});\n\ndefineFunction({\n    type: \"leftright\",\n    names: [\"\\\\left\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n\n        var parser = context.parser;\n        // Parse out the implicit body\n        ++parser.leftrightDepth;\n        // parseExpression stops before '\\\\right'\n        var body = parser.parseExpression(false);\n        --parser.leftrightDepth;\n        // Check the next token\n        parser.expect(\"\\\\right\", false);\n        var right = parser.parseFunction();\n        if (!right) {\n            throw new src_ParseError('failed to parse function after \\\\right');\n        }\n        return {\n            type: \"leftright\",\n            mode: parser.mode,\n            body: body,\n            left: delim.text,\n            right: assertNodeType(right, \"leftright-right\").delim\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        assertParsed(group);\n        // Build the inner expression\n        var inner = buildHTML_buildExpression(group.body, options, true, [null, \"mclose\"]);\n\n        var innerHeight = 0;\n        var innerDepth = 0;\n        var hadMiddle = false;\n\n        // Calculate its height and depth\n        for (var i = 0; i < inner.length; i++) {\n            // Property `isMiddle` not defined on `span`. See comment in\n            // \"middle\"'s htmlBuilder.\n            // $FlowFixMe\n            if (inner[i].isMiddle) {\n                hadMiddle = true;\n            } else {\n                innerHeight = Math.max(inner[i].height, innerHeight);\n                innerDepth = Math.max(inner[i].depth, innerDepth);\n            }\n        }\n\n        // The size of delimiters is the same, regardless of what style we are\n        // in. Thus, to correctly calculate the size of delimiter we need around\n        // a group, we scale down the inner size based on the size.\n        innerHeight *= options.sizeMultiplier;\n        innerDepth *= options.sizeMultiplier;\n\n        var leftDelim = void 0;\n        if (group.left === \".\") {\n            // Empty delimiters in \\left and \\right make null delimiter spaces.\n            leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n        } else {\n            // Otherwise, use leftRightDelim to generate the correct sized\n            // delimiter.\n            leftDelim = delimiter.leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [\"mopen\"]);\n        }\n        // Add it to the beginning of the expression\n        inner.unshift(leftDelim);\n\n        // Handle middle delimiters\n        if (hadMiddle) {\n            for (var _i = 1; _i < inner.length; _i++) {\n                var middleDelim = inner[_i];\n                // Property `isMiddle` not defined on `span`. See comment in\n                // \"middle\"'s htmlBuilder.\n                // $FlowFixMe\n                var isMiddle = middleDelim.isMiddle;\n                if (isMiddle) {\n                    // Apply the options that were active when \\middle was called\n                    inner[_i] = delimiter.leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []);\n                }\n            }\n        }\n\n        var rightDelim = void 0;\n        // Same for the right delimiter\n        if (group.right === \".\") {\n            rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n        } else {\n            rightDelim = delimiter.leftRightDelim(group.right, innerHeight, innerDepth, options, group.mode, [\"mclose\"]);\n        }\n        // Add it to the end of the expression.\n        inner.push(rightDelim);\n\n        return buildCommon.makeSpan([\"minner\"], inner, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        assertParsed(group);\n        var inner = buildMathML_buildExpression(group.body, options);\n\n        if (group.left !== \".\") {\n            var leftNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.left, group.mode)]);\n\n            leftNode.setAttribute(\"fence\", \"true\");\n\n            inner.unshift(leftNode);\n        }\n\n        if (group.right !== \".\") {\n            var rightNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.right, group.mode)]);\n\n            rightNode.setAttribute(\"fence\", \"true\");\n\n            inner.push(rightNode);\n        }\n\n        return buildMathML_makeRow(inner);\n    }\n});\n\ndefineFunction({\n    type: \"middle\",\n    names: [\"\\\\middle\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        var delim = checkDelimiter(args[0], context);\n        if (!context.parser.leftrightDepth) {\n            throw new src_ParseError(\"\\\\middle without preceding \\\\left\", delim);\n        }\n\n        return {\n            type: \"middle\",\n            mode: context.parser.mode,\n            delim: delim.text\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var middleDelim = void 0;\n        if (group.delim === \".\") {\n            middleDelim = makeNullDelimiter(options, []);\n        } else {\n            middleDelim = delimiter.sizedDelim(group.delim, 1, options, group.mode, []);\n\n            var isMiddle = { delim: group.delim, options: options };\n            // Property `isMiddle` not defined on `span`. It is only used in\n            // this file above.\n            // TODO: Fix this violation of the `span` type and possibly rename\n            // things since `isMiddle` sounds like a boolean, but is a struct.\n            // $FlowFixMe\n            middleDelim.isMiddle = isMiddle;\n        }\n        return middleDelim;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var middleNode = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.delim, group.mode)]);\n        middleNode.setAttribute(\"fence\", \"true\");\n        return middleNode;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/enclose.js\n\n\n\n\n\n\n\n\n\n\nvar enclose_htmlBuilder = function htmlBuilder(group, options) {\n    // \\cancel, \\bcancel, \\xcancel, \\sout, \\fbox, \\colorbox, \\fcolorbox\n    var inner = buildHTML_buildGroup(group.body, options);\n\n    var label = group.label.substr(1);\n    var scale = options.sizeMultiplier;\n    var img = void 0;\n    var imgShift = 0;\n\n    // In the LaTeX cancel package, line geometry is slightly different\n    // depending on whether the subject is wider than it is tall, or vice versa.\n    // We don't know the width of a group, so as a proxy, we test if\n    // the subject is a single character. This captures most of the\n    // subjects that should get the \"tall\" treatment.\n    var isSingleChar = utils.isCharacterBox(group.body);\n\n    if (label === \"sout\") {\n        img = buildCommon.makeSpan([\"stretchy\", \"sout\"]);\n        img.height = options.fontMetrics().defaultRuleThickness / scale;\n        imgShift = -0.5 * options.fontMetrics().xHeight;\n    } else {\n        // Add horizontal padding\n        if (/cancel/.test(label)) {\n            if (!isSingleChar) {\n                inner.classes.push(\"cancel-pad\");\n            }\n        } else {\n            inner.classes.push(\"boxpad\");\n        }\n\n        // Add vertical padding\n        var vertPad = 0;\n        // ref: LaTeX source2e: \\fboxsep = 3pt;  \\fboxrule = .4pt\n        // ref: cancel package: \\advance\\totalheight2\\p@ % \"+2\"\n        if (/box/.test(label)) {\n            vertPad = label === \"colorbox\" ? 0.3 : 0.34;\n        } else {\n            vertPad = isSingleChar ? 0.2 : 0;\n        }\n\n        img = stretchy.encloseSpan(inner, label, vertPad, options);\n        imgShift = inner.depth + vertPad;\n\n        if (group.backgroundColor) {\n            img.style.backgroundColor = group.backgroundColor;\n            if (group.borderColor) {\n                img.style.borderColor = group.borderColor;\n            }\n        }\n    }\n\n    var vlist = void 0;\n    if (group.backgroundColor) {\n        vlist = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [\n            // Put the color background behind inner;\n            { type: \"elem\", elem: img, shift: imgShift }, { type: \"elem\", elem: inner, shift: 0 }]\n        }, options);\n    } else {\n        vlist = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [\n            // Write the \\cancel stroke on top of inner.\n            {\n                type: \"elem\",\n                elem: inner,\n                shift: 0\n            }, {\n                type: \"elem\",\n                elem: img,\n                shift: imgShift,\n                wrapperClasses: /cancel/.test(label) ? [\"svg-align\"] : []\n            }]\n        }, options);\n    }\n\n    if (/cancel/.test(label)) {\n        // The cancel package documentation says that cancel lines add their height\n        // to the expression, but tests show that isn't how it actually works.\n        vlist.height = inner.height;\n        vlist.depth = inner.depth;\n    }\n\n    if (/cancel/.test(label) && !isSingleChar) {\n        // cancel does not create horiz space for its line extension.\n        return buildCommon.makeSpan([\"mord\", \"cancel-lap\"], [vlist], options);\n    } else {\n        return buildCommon.makeSpan([\"mord\"], [vlist], options);\n    }\n};\n\nvar enclose_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"menclose\", [buildMathML_buildGroup(group.body, options)]);\n    switch (group.label) {\n        case \"\\\\cancel\":\n            node.setAttribute(\"notation\", \"updiagonalstrike\");\n            break;\n        case \"\\\\bcancel\":\n            node.setAttribute(\"notation\", \"downdiagonalstrike\");\n            break;\n        case \"\\\\sout\":\n            node.setAttribute(\"notation\", \"horizontalstrike\");\n            break;\n        case \"\\\\fbox\":\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        case \"\\\\fcolorbox\":\n            // TODO(ron): I don't know any way to set the border color.\n            node.setAttribute(\"notation\", \"box\");\n            break;\n        case \"\\\\xcancel\":\n            node.setAttribute(\"notation\", \"updiagonalstrike downdiagonalstrike\");\n            break;\n    }\n    if (group.backgroundColor) {\n        node.setAttribute(\"mathbackground\", group.backgroundColor);\n    }\n    return node;\n};\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\colorbox\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"text\"]\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var color = assertNodeType(args[0], \"color-token\").color;\n        var body = args[1];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            backgroundColor: color,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\fcolorbox\"],\n    props: {\n        numArgs: 3,\n        allowedInText: true,\n        greediness: 3,\n        argTypes: [\"color\", \"color\", \"text\"]\n    },\n    handler: function handler(_ref2, args, optArgs) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName;\n\n        var borderColor = assertNodeType(args[0], \"color-token\").color;\n        var backgroundColor = assertNodeType(args[1], \"color-token\").color;\n        var body = args[2];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            backgroundColor: backgroundColor,\n            borderColor: borderColor,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\fbox\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: \"\\\\fbox\",\n            body: args[0]\n        };\n    }\n});\n\ndefineFunction({\n    type: \"enclose\",\n    names: [\"\\\\cancel\", \"\\\\bcancel\", \"\\\\xcancel\", \"\\\\sout\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref4, args, optArgs) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName;\n\n        var body = args[0];\n        return {\n            type: \"enclose\",\n            mode: parser.mode,\n            label: funcName,\n            body: body\n        };\n    },\n\n    htmlBuilder: enclose_htmlBuilder,\n    mathmlBuilder: enclose_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/environment.js\n\n\n\n\n// Environment delimiters. HTML/MathML rendering is defined in the corresponding\n// defineEnvironment definitions.\ndefineFunction({\n    type: \"environment\",\n    names: [\"\\\\begin\", \"\\\\end\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"]\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var nameGroup = args[0];\n        if (nameGroup.type !== \"ordgroup\") {\n            throw new src_ParseError(\"Invalid environment name\", nameGroup);\n        }\n        var name = \"\";\n        for (var i = 0; i < nameGroup.body.length; ++i) {\n            name += assertNodeType(nameGroup.body[i], \"textord\").text;\n        }\n        return {\n            type: \"environment\",\n            mode: parser.mode,\n            name: name,\n            nameGroup: nameGroup\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/mclass.js\n\n\n\n\n\n\n\n\nvar mclass_makeSpan = buildCommon.makeSpan;\n\nfunction mclass_htmlBuilder(group, options) {\n    var elements = buildHTML_buildExpression(group.body, options, true);\n    return mclass_makeSpan([group.mclass], elements, options);\n}\n\nfunction mclass_mathmlBuilder(group, options) {\n    var inner = buildMathML_buildExpression(group.body, options);\n    return mathMLTree.newDocumentFragment(inner);\n}\n\n// Math class commands except \\mathop\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\mathord\", \"\\\\mathbin\", \"\\\\mathrel\", \"\\\\mathopen\", \"\\\\mathclose\", \"\\\\mathpunct\", \"\\\\mathinner\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: \"m\" + funcName.substr(5),\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: mclass_htmlBuilder,\n    mathmlBuilder: mclass_mathmlBuilder\n});\n\nvar binrelClass = function binrelClass(arg) {\n    // \\binrel@ spacing varies with (bin|rel|ord) of the atom in the argument.\n    // (by rendering separately and with {}s before and after, and measuring\n    // the change in spacing).  We'll do roughly the same by detecting the\n    // atom type directly.\n    var atom = arg.type === \"ordgroup\" && arg.body.length ? arg.body[0] : arg;\n    if (atom.type === \"atom\" && (atom.family === \"bin\" || atom.family === \"rel\")) {\n        return \"m\" + atom.family;\n    } else {\n        return \"mord\";\n    }\n};\n\n// \\@binrel{x}{y} renders like y but as mbin/mrel/mord if x is mbin/mrel/mord.\n// This is equivalent to \\binrel@{x}\\binrel@@{y} in AMSTeX.\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\@binrel\"],\n    props: {\n        numArgs: 2\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: binrelClass(args[0]),\n            body: [args[1]]\n        };\n    }\n});\n\n// Build a relation or stacked op by placing one symbol on top of another\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\stackrel\", \"\\\\overset\", \"\\\\underset\"],\n    props: {\n        numArgs: 2\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            funcName = _ref3.funcName;\n\n        var baseArg = args[1];\n        var shiftedArg = args[0];\n\n        var mclass = void 0;\n        if (funcName !== \"\\\\stackrel\") {\n            // LaTeX applies \\binrel spacing to \\overset and \\underset.\n            mclass = binrelClass(baseArg);\n        } else {\n            mclass = \"mrel\"; // for \\stackrel\n        }\n\n        var baseOp = {\n            type: \"op\",\n            mode: baseArg.mode,\n            limits: true,\n            alwaysHandleSupSub: true,\n            symbol: false,\n            suppressBaseShift: funcName !== \"\\\\stackrel\",\n            body: defineFunction_ordargument(baseArg)\n        };\n\n        var supsub = {\n            type: \"supsub\",\n            mode: shiftedArg.mode,\n            base: baseOp,\n            sup: funcName === \"\\\\underset\" ? null : shiftedArg,\n            sub: funcName === \"\\\\underset\" ? shiftedArg : null\n        };\n\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: mclass,\n            body: [supsub]\n        };\n    },\n\n    htmlBuilder: mclass_htmlBuilder,\n    mathmlBuilder: mclass_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/font.js\n\n// TODO(kevinb): implement \\\\sl and \\\\sc\n\n\n\n\n\n\n\nvar font_htmlBuilder = function htmlBuilder(group, options) {\n    var font = group.font;\n    var newOptions = options.withFont(font);\n    return buildHTML_buildGroup(group.body, newOptions);\n};\n\nvar font_mathmlBuilder = function mathmlBuilder(group, options) {\n    var font = group.font;\n    var newOptions = options.withFont(font);\n    return buildMathML_buildGroup(group.body, newOptions);\n};\n\nvar fontAliases = {\n    \"\\\\Bbb\": \"\\\\mathbb\",\n    \"\\\\bold\": \"\\\\mathbf\",\n    \"\\\\frak\": \"\\\\mathfrak\",\n    \"\\\\bm\": \"\\\\boldsymbol\"\n};\n\ndefineFunction({\n    type: \"font\",\n    names: [\n    // styles, except \\boldsymbol defined below\n    \"\\\\mathrm\", \"\\\\mathit\", \"\\\\mathbf\",\n\n    // families\n    \"\\\\mathbb\", \"\\\\mathcal\", \"\\\\mathfrak\", \"\\\\mathscr\", \"\\\\mathsf\", \"\\\\mathtt\",\n\n    // aliases, except \\bm defined below\n    \"\\\\Bbb\", \"\\\\bold\", \"\\\\frak\"],\n    props: {\n        numArgs: 1,\n        greediness: 2\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        var func = funcName;\n        if (func in fontAliases) {\n            func = fontAliases[func];\n        }\n        return {\n            type: \"font\",\n            mode: parser.mode,\n            font: func.slice(1),\n            body: body\n        };\n    },\n    htmlBuilder: font_htmlBuilder,\n    mathmlBuilder: font_mathmlBuilder\n});\n\ndefineFunction({\n    type: \"mclass\",\n    names: [\"\\\\boldsymbol\", \"\\\\bm\"],\n    props: {\n        numArgs: 1,\n        greediness: 2\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        // amsbsy.sty's \\boldsymbol uses \\binrel spacing to inherit the\n        // argument's bin|rel|ord status\n        return {\n            type: \"mclass\",\n            mode: parser.mode,\n            mclass: binrelClass(body),\n            body: [{\n                type: \"font\",\n                mode: parser.mode,\n                font: \"boldsymbol\",\n                body: body\n            }]\n        };\n    }\n});\n\n// Old font changing functions\ndefineFunction({\n    type: \"font\",\n    names: [\"\\\\rm\", \"\\\\sf\", \"\\\\tt\", \"\\\\bf\", \"\\\\it\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser,\n            funcName = _ref3.funcName,\n            breakOnTokenText = _ref3.breakOnTokenText;\n        var mode = parser.mode;\n\n        parser.consumeSpaces();\n        var body = parser.parseExpression(true, breakOnTokenText);\n        var style = \"math\" + funcName.slice(1);\n\n        return {\n            type: \"font\",\n            mode: mode,\n            font: style,\n            body: {\n                type: \"ordgroup\",\n                mode: parser.mode,\n                body: body\n            }\n        };\n    },\n    htmlBuilder: font_htmlBuilder,\n    mathmlBuilder: font_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/genfrac.js\n\n\n\n\n\n\n\n\n\n\n\n\nvar genfrac_htmlBuilder = function htmlBuilder(group, options) {\n    // Fractions are handled in the TeXbook on pages 444-445, rules 15(a-e).\n    // Figure out what style this fraction should be in based on the\n    // function used\n    var style = options.style;\n    if (group.size === \"display\") {\n        style = src_Style.DISPLAY;\n    } else if (group.size === \"text\" && style.size === src_Style.DISPLAY.size) {\n        // We're in a \\tfrac but incoming style is displaystyle, so:\n        style = src_Style.TEXT;\n    } else if (group.size === \"script\") {\n        style = src_Style.SCRIPT;\n    } else if (group.size === \"scriptscript\") {\n        style = src_Style.SCRIPTSCRIPT;\n    }\n\n    var nstyle = style.fracNum();\n    var dstyle = style.fracDen();\n    var newOptions = void 0;\n\n    newOptions = options.havingStyle(nstyle);\n    var numerm = buildHTML_buildGroup(group.numer, newOptions, options);\n\n    if (group.continued) {\n        // \\cfrac inserts a \\strut into the numerator.\n        // Get \\strut dimensions from TeXbook page 353.\n        var hStrut = 8.5 / options.fontMetrics().ptPerEm;\n        var dStrut = 3.5 / options.fontMetrics().ptPerEm;\n        numerm.height = numerm.height < hStrut ? hStrut : numerm.height;\n        numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;\n    }\n\n    newOptions = options.havingStyle(dstyle);\n    var denomm = buildHTML_buildGroup(group.denom, newOptions, options);\n\n    var rule = void 0;\n    var ruleWidth = void 0;\n    var ruleSpacing = void 0;\n    if (group.hasBarLine) {\n        if (group.barSize) {\n            ruleWidth = units_calculateSize(group.barSize, options);\n            rule = buildCommon.makeLineSpan(\"frac-line\", options, ruleWidth);\n        } else {\n            rule = buildCommon.makeLineSpan(\"frac-line\", options);\n        }\n        ruleWidth = rule.height;\n        ruleSpacing = rule.height;\n    } else {\n        rule = null;\n        ruleWidth = 0;\n        ruleSpacing = options.fontMetrics().defaultRuleThickness;\n    }\n\n    // Rule 15b\n    var numShift = void 0;\n    var clearance = void 0;\n    var denomShift = void 0;\n    if (style.size === src_Style.DISPLAY.size) {\n        numShift = options.fontMetrics().num1;\n        if (ruleWidth > 0) {\n            clearance = 3 * ruleSpacing;\n        } else {\n            clearance = 7 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom1;\n    } else {\n        if (ruleWidth > 0) {\n            numShift = options.fontMetrics().num2;\n            clearance = ruleSpacing;\n        } else {\n            numShift = options.fontMetrics().num3;\n            clearance = 3 * ruleSpacing;\n        }\n        denomShift = options.fontMetrics().denom2;\n    }\n\n    var frac = void 0;\n    if (!rule) {\n        // Rule 15c\n        var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);\n        if (candidateClearance < clearance) {\n            numShift += 0.5 * (clearance - candidateClearance);\n            denomShift += 0.5 * (clearance - candidateClearance);\n        }\n\n        frac = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: numerm, shift: -numShift }]\n        }, options);\n    } else {\n        // Rule 15d\n        var axisHeight = options.fontMetrics().axisHeight;\n\n        if (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth) < clearance) {\n            numShift += clearance - (numShift - numerm.depth - (axisHeight + 0.5 * ruleWidth));\n        }\n\n        if (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift) < clearance) {\n            denomShift += clearance - (axisHeight - 0.5 * ruleWidth - (denomm.height - denomShift));\n        }\n\n        var midShift = -(axisHeight - 0.5 * ruleWidth);\n\n        frac = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: [{ type: \"elem\", elem: denomm, shift: denomShift }, { type: \"elem\", elem: rule, shift: midShift }, { type: \"elem\", elem: numerm, shift: -numShift }]\n        }, options);\n    }\n\n    // Since we manually change the style sometimes (with \\dfrac or \\tfrac),\n    // account for the possible size change here.\n    newOptions = options.havingStyle(style);\n    frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier;\n    frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier;\n\n    // Rule 15e\n    var delimSize = void 0;\n    if (style.size === src_Style.DISPLAY.size) {\n        delimSize = options.fontMetrics().delim1;\n    } else {\n        delimSize = options.fontMetrics().delim2;\n    }\n\n    var leftDelim = void 0;\n    var rightDelim = void 0;\n    if (group.leftDelim == null) {\n        leftDelim = makeNullDelimiter(options, [\"mopen\"]);\n    } else {\n        leftDelim = delimiter.customSizedDelim(group.leftDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mopen\"]);\n    }\n\n    if (group.continued) {\n        rightDelim = buildCommon.makeSpan([]); // zero width for \\cfrac\n    } else if (group.rightDelim == null) {\n        rightDelim = makeNullDelimiter(options, [\"mclose\"]);\n    } else {\n        rightDelim = delimiter.customSizedDelim(group.rightDelim, delimSize, true, options.havingStyle(style), group.mode, [\"mclose\"]);\n    }\n\n    return buildCommon.makeSpan([\"mord\"].concat(newOptions.sizingClasses(options)), [leftDelim, buildCommon.makeSpan([\"mfrac\"], [frac]), rightDelim], options);\n};\n\nvar genfrac_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = new mathMLTree.MathNode(\"mfrac\", [buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options)]);\n\n    if (!group.hasBarLine) {\n        node.setAttribute(\"linethickness\", \"0px\");\n    } else if (group.barSize) {\n        var ruleWidth = units_calculateSize(group.barSize, options);\n        node.setAttribute(\"linethickness\", ruleWidth + \"em\");\n    }\n\n    if (group.leftDelim != null || group.rightDelim != null) {\n        var withDelims = [];\n\n        if (group.leftDelim != null) {\n            var leftOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.leftDelim)]);\n\n            leftOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(leftOp);\n        }\n\n        withDelims.push(node);\n\n        if (group.rightDelim != null) {\n            var rightOp = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(group.rightDelim)]);\n\n            rightOp.setAttribute(\"fence\", \"true\");\n\n            withDelims.push(rightOp);\n        }\n\n        return buildMathML_makeRow(withDelims);\n    }\n\n    return node;\n};\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\cfrac\", \"\\\\dfrac\", \"\\\\frac\", \"\\\\tfrac\", \"\\\\dbinom\", \"\\\\binom\", \"\\\\tbinom\", \"\\\\\\\\atopfrac\", // can’t be entered directly\n    \"\\\\\\\\bracefrac\", \"\\\\\\\\brackfrac\"],\n    props: {\n        numArgs: 2,\n        greediness: 2\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var numer = args[0];\n        var denom = args[1];\n        var hasBarLine = void 0;\n        var leftDelim = null;\n        var rightDelim = null;\n        var size = \"auto\";\n\n        switch (funcName) {\n            case \"\\\\cfrac\":\n            case \"\\\\dfrac\":\n            case \"\\\\frac\":\n            case \"\\\\tfrac\":\n                hasBarLine = true;\n                break;\n            case \"\\\\\\\\atopfrac\":\n                hasBarLine = false;\n                break;\n            case \"\\\\dbinom\":\n            case \"\\\\binom\":\n            case \"\\\\tbinom\":\n                hasBarLine = false;\n                leftDelim = \"(\";\n                rightDelim = \")\";\n                break;\n            case \"\\\\\\\\bracefrac\":\n                hasBarLine = false;\n                leftDelim = \"\\\\{\";\n                rightDelim = \"\\\\}\";\n                break;\n            case \"\\\\\\\\brackfrac\":\n                hasBarLine = false;\n                leftDelim = \"[\";\n                rightDelim = \"]\";\n                break;\n            default:\n                throw new Error(\"Unrecognized genfrac command\");\n        }\n\n        switch (funcName) {\n            case \"\\\\cfrac\":\n            case \"\\\\dfrac\":\n            case \"\\\\dbinom\":\n                size = \"display\";\n                break;\n            case \"\\\\tfrac\":\n            case \"\\\\tbinom\":\n                size = \"text\";\n                break;\n        }\n\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            continued: funcName === \"\\\\cfrac\",\n            numer: numer,\n            denom: denom,\n            hasBarLine: hasBarLine,\n            leftDelim: leftDelim,\n            rightDelim: rightDelim,\n            size: size,\n            barSize: null\n        };\n    },\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n\n// Infix generalized fractions -- these are not rendered directly, but replaced\n// immediately by one of the variants above.\ndefineFunction({\n    type: \"infix\",\n    names: [\"\\\\over\", \"\\\\choose\", \"\\\\atop\", \"\\\\brace\", \"\\\\brack\"],\n    props: {\n        numArgs: 0,\n        infix: true\n    },\n    handler: function handler(_ref2) {\n        var parser = _ref2.parser,\n            funcName = _ref2.funcName,\n            token = _ref2.token;\n\n        var replaceWith = void 0;\n        switch (funcName) {\n            case \"\\\\over\":\n                replaceWith = \"\\\\frac\";\n                break;\n            case \"\\\\choose\":\n                replaceWith = \"\\\\binom\";\n                break;\n            case \"\\\\atop\":\n                replaceWith = \"\\\\\\\\atopfrac\";\n                break;\n            case \"\\\\brace\":\n                replaceWith = \"\\\\\\\\bracefrac\";\n                break;\n            case \"\\\\brack\":\n                replaceWith = \"\\\\\\\\brackfrac\";\n                break;\n            default:\n                throw new Error(\"Unrecognized infix genfrac command\");\n        }\n        return {\n            type: \"infix\",\n            mode: parser.mode,\n            replaceWith: replaceWith,\n            token: token\n        };\n    }\n});\n\nvar stylArray = [\"display\", \"text\", \"script\", \"scriptscript\"];\n\nvar delimFromValue = function delimFromValue(delimString) {\n    var delim = null;\n    if (delimString.length > 0) {\n        delim = delimString;\n        delim = delim === \".\" ? null : delim;\n    }\n    return delim;\n};\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\genfrac\"],\n    props: {\n        numArgs: 6,\n        greediness: 6,\n        argTypes: [\"math\", \"math\", \"size\", \"text\", \"math\", \"math\"]\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var numer = args[4];\n        var denom = args[5];\n\n        // Look into the parse nodes to get the desired delimiters.\n        var leftNode = checkNodeType(args[0], \"ordgroup\");\n        if (leftNode) {\n            leftNode = assertAtomFamily(leftNode.body[0], \"open\");\n        } else {\n            leftNode = assertAtomFamily(args[0], \"open\");\n        }\n        var leftDelim = delimFromValue(leftNode.text);\n\n        var rightNode = checkNodeType(args[1], \"ordgroup\");\n        if (rightNode) {\n            rightNode = assertAtomFamily(rightNode.body[0], \"close\");\n        } else {\n            rightNode = assertAtomFamily(args[1], \"close\");\n        }\n        var rightDelim = delimFromValue(rightNode.text);\n\n        var barNode = assertNodeType(args[2], \"size\");\n        var hasBarLine = void 0;\n        var barSize = null;\n        if (barNode.isBlank) {\n            // \\genfrac acts differently than \\above.\n            // \\genfrac treats an empty size group as a signal to use a\n            // standard bar size. \\above would see size = 0 and omit the bar.\n            hasBarLine = true;\n        } else {\n            barSize = barNode.value;\n            hasBarLine = barSize.number > 0;\n        }\n\n        // Find out if we want displaystyle, textstyle, etc.\n        var size = \"auto\";\n        var styl = checkNodeType(args[3], \"ordgroup\");\n        if (styl) {\n            if (styl.body.length > 0) {\n                var textOrd = assertNodeType(styl.body[0], \"textord\");\n                size = stylArray[Number(textOrd.text)];\n            }\n        } else {\n            styl = assertNodeType(args[3], \"textord\");\n            size = stylArray[Number(styl.text)];\n        }\n\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            numer: numer,\n            denom: denom,\n            continued: false,\n            hasBarLine: hasBarLine,\n            barSize: barSize,\n            leftDelim: leftDelim,\n            rightDelim: rightDelim,\n            size: size\n        };\n    },\n\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n\n// \\above is an infix fraction that also defines a fraction bar size.\ndefineFunction({\n    type: \"infix\",\n    names: [\"\\\\above\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"size\"],\n        infix: true\n    },\n    handler: function handler(_ref4, args) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName,\n            token = _ref4.token;\n\n        return {\n            type: \"infix\",\n            mode: parser.mode,\n            replaceWith: \"\\\\\\\\abovefrac\",\n            size: assertNodeType(args[0], \"size\").value,\n            token: token\n        };\n    }\n});\n\ndefineFunction({\n    type: \"genfrac\",\n    names: [\"\\\\\\\\abovefrac\"],\n    props: {\n        numArgs: 3,\n        argTypes: [\"math\", \"size\", \"math\"]\n    },\n    handler: function handler(_ref5, args) {\n        var parser = _ref5.parser,\n            funcName = _ref5.funcName;\n\n        var numer = args[0];\n        var barSize = assert(assertNodeType(args[1], \"infix\").size);\n        var denom = args[2];\n\n        var hasBarLine = barSize.number > 0;\n        return {\n            type: \"genfrac\",\n            mode: parser.mode,\n            numer: numer,\n            denom: denom,\n            continued: false,\n            hasBarLine: hasBarLine,\n            barSize: barSize,\n            leftDelim: null,\n            rightDelim: null,\n            size: \"auto\"\n        };\n    },\n\n    htmlBuilder: genfrac_htmlBuilder,\n    mathmlBuilder: genfrac_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/horizBrace.js\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"horizBrace\", but\n// also \"supsub\" since an over/underbrace can affect super/subscripting.\nvar horizBrace_htmlBuilder = function htmlBuilder(grp, options) {\n    var style = options.style;\n\n    // Pull out the `ParseNode<\"horizBrace\">` if `grp` is a \"supsub\" node.\n    var supSubGroup = void 0;\n    var group = void 0;\n    var supSub = checkNodeType(grp, \"supsub\");\n    if (supSub) {\n        // Ref: LaTeX source2e: }}}}\\limits}\n        // i.e. LaTeX treats the brace similar to an op and passes it\n        // with \\limits, so we need to assign supsub style.\n        supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options);\n        group = assertNodeType(supSub.base, \"horizBrace\");\n    } else {\n        group = assertNodeType(grp, \"horizBrace\");\n    }\n\n    // Build the base group\n    var body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY));\n\n    // Create the stretchy element\n    var braceBody = stretchy.svgSpan(group, options);\n\n    // Generate the vlist, with the appropriate kerns        ┏━━━━━━━━┓\n    // This first vlist contains the content and the brace:   equation\n    var vlist = void 0;\n    if (group.isOver) {\n        vlist = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: body }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: braceBody }]\n        }, options);\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[1].classes.push(\"svg-align\");\n    } else {\n        vlist = buildCommon.makeVList({\n            positionType: \"bottom\",\n            positionData: body.depth + 0.1 + braceBody.height,\n            children: [{ type: \"elem\", elem: braceBody }, { type: \"kern\", size: 0.1 }, { type: \"elem\", elem: body }]\n        }, options);\n        // $FlowFixMe: Replace this with passing \"svg-align\" into makeVList.\n        vlist.children[0].children[0].children[0].classes.push(\"svg-align\");\n    }\n\n    if (supSubGroup) {\n        // To write the supsub, wrap the first vlist in another vlist:\n        // They can't all go in the same vlist, because the note might be\n        // wider than the equation. We want the equation to control the\n        // brace width.\n\n        //      note          long note           long note\n        //   ┏━━━━━━━━┓   or    ┏━━━┓     not    ┏━━━━━━━━━┓\n        //    equation           eqn                 eqn\n\n        var vSpan = buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n\n        if (group.isOver) {\n            vlist = buildCommon.makeVList({\n                positionType: \"firstBaseline\",\n                children: [{ type: \"elem\", elem: vSpan }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: supSubGroup }]\n            }, options);\n        } else {\n            vlist = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: vSpan.depth + 0.2 + supSubGroup.height + supSubGroup.depth,\n                children: [{ type: \"elem\", elem: supSubGroup }, { type: \"kern\", size: 0.2 }, { type: \"elem\", elem: vSpan }]\n            }, options);\n        }\n    }\n\n    return buildCommon.makeSpan([\"mord\", group.isOver ? \"mover\" : \"munder\"], [vlist], options);\n};\n\nvar horizBrace_mathmlBuilder = function mathmlBuilder(group, options) {\n    var accentNode = stretchy.mathMLnode(group.label);\n    return new mathMLTree.MathNode(group.isOver ? \"mover\" : \"munder\", [buildMathML_buildGroup(group.base, options), accentNode]);\n};\n\n// Horizontal stretchy braces\ndefineFunction({\n    type: \"horizBrace\",\n    names: [\"\\\\overbrace\", \"\\\\underbrace\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        return {\n            type: \"horizBrace\",\n            mode: parser.mode,\n            label: funcName,\n            isOver: /^\\\\over/.test(funcName),\n            base: args[0]\n        };\n    },\n\n    htmlBuilder: horizBrace_htmlBuilder,\n    mathmlBuilder: horizBrace_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/href.js\n\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"href\",\n    names: [\"\\\\href\"],\n    props: {\n        numArgs: 2,\n        argTypes: [\"url\", \"original\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[1];\n        var href = assertNodeType(args[0], \"url\").url;\n        return {\n            type: \"href\",\n            mode: parser.mode,\n            href: href,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.body, options, false);\n        return buildCommon.makeAnchor(group.href, [], elements, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var math = buildExpressionRow(group.body, options);\n        assertType(math, mathMLTree_MathNode).setAttribute(\"href\", group.href);\n        return math;\n    }\n});\n\ndefineFunction({\n    type: \"href\",\n    names: [\"\\\\url\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"url\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var href = assertNodeType(args[0], \"url\").url;\n        var chars = [];\n        for (var i = 0; i < href.length; i++) {\n            var c = href[i];\n            if (c === \"~\") {\n                c = \"\\\\textasciitilde\";\n            }\n            chars.push({\n                type: \"textord\",\n                mode: \"text\",\n                text: c\n            });\n        }\n        var body = {\n            type: \"text\",\n            mode: parser.mode,\n            font: \"\\\\texttt\",\n            body: chars\n        };\n        return {\n            type: \"href\",\n            mode: parser.mode,\n            href: href,\n            body: defineFunction_ordargument(body)\n        };\n    }\n});\n// CONCATENATED MODULE: ./src/functions/htmlmathml.js\n\n\n\n\n\n\ndefineFunction({\n    type: \"htmlmathml\",\n    names: [\"\\\\html@mathml\"],\n    props: {\n        numArgs: 2,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"htmlmathml\",\n            mode: parser.mode,\n            html: defineFunction_ordargument(args[0]),\n            mathml: defineFunction_ordargument(args[1])\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.html, options, false);\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        return buildExpressionRow(group.mathml, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/kern.js\n\n// Horizontal spacing commands\n\n\n\n\n\n\n\n// TODO: \\hskip and \\mskip should support plus and minus in lengths\n\ndefineFunction({\n    type: \"kern\",\n    names: [\"\\\\kern\", \"\\\\mkern\", \"\\\\hskip\", \"\\\\mskip\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"size\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var size = assertNodeType(args[0], \"size\");\n        if (parser.settings.strict) {\n            var mathFunction = funcName[1] === 'm'; // \\mkern, \\mskip\n            var muUnit = size.value.unit === 'mu';\n            if (mathFunction) {\n                if (!muUnit) {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" supports only mu units, \" + (\"not \" + size.value.unit + \" units\"));\n                }\n                if (parser.mode !== \"math\") {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" works only in math mode\");\n                }\n            } else {\n                // !mathFunction\n                if (muUnit) {\n                    parser.settings.reportNonstrict(\"mathVsTextUnits\", \"LaTeX's \" + funcName + \" doesn't support mu units\");\n                }\n            }\n        }\n        return {\n            type: \"kern\",\n            mode: parser.mode,\n            dimension: size.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeGlue(group.dimension, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var dimension = units_calculateSize(group.dimension, options);\n        return new mathMLTree.SpaceNode(dimension);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/lap.js\n\n// Horizontal overlap functions\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"lap\",\n    names: [\"\\\\mathllap\", \"\\\\mathrlap\", \"\\\\mathclap\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"lap\",\n            mode: parser.mode,\n            alignment: funcName.slice(5),\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // mathllap, mathrlap, mathclap\n        var inner = void 0;\n        if (group.alignment === \"clap\") {\n            // ref: https://www.math.lsu.edu/~aperlis/publications/mathclap/\n            inner = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options)]);\n            // wrap, since CSS will center a .clap > .inner > span\n            inner = buildCommon.makeSpan([\"inner\"], [inner], options);\n        } else {\n            inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options)]);\n        }\n        var fix = buildCommon.makeSpan([\"fix\"], []);\n        var node = buildCommon.makeSpan([group.alignment], [inner, fix], options);\n\n        // At this point, we have correctly set horizontal alignment of the\n        // two items involved in the lap.\n        // Next, use a strut to set the height of the HTML bounding box.\n        // Otherwise, a tall argument may be misplaced.\n        var strut = buildCommon.makeSpan([\"strut\"]);\n        strut.style.height = node.height + node.depth + \"em\";\n        strut.style.verticalAlign = -node.depth + \"em\";\n        node.children.unshift(strut);\n\n        // Next, prevent vertical misplacement when next to something tall.\n        node = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n\n        // Get the horizontal spacing correct relative to adjacent items.\n        return buildCommon.makeSpan([\"mord\"], [node], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // mathllap, mathrlap, mathclap\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n        if (group.alignment !== \"rlap\") {\n            var offset = group.alignment === \"llap\" ? \"-1\" : \"-0.5\";\n            node.setAttribute(\"lspace\", offset + \"width\");\n        }\n        node.setAttribute(\"width\", \"0px\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/math.js\n\n\n\n// Switching from text mode back to math mode\ndefineFunction({\n    type: \"styling\",\n    names: [\"\\\\(\", \"$\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: false,\n        consumeMode: \"math\"\n    },\n    handler: function handler(_ref, args) {\n        var funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        var outerMode = parser.mode;\n        parser.switchMode(\"math\");\n        var close = funcName === \"\\\\(\" ? \"\\\\)\" : \"$\";\n        var body = parser.parseExpression(false, close);\n        // We can't expand the next symbol after the closing $ until after\n        // switching modes back.  So don't consume within expect.\n        parser.expect(close, false);\n        parser.switchMode(outerMode);\n        parser.consume();\n        return {\n            type: \"styling\",\n            mode: parser.mode,\n            style: \"text\",\n            body: body\n        };\n    }\n});\n\n// Check for extra closing math delimiters\ndefineFunction({\n    type: \"text\", // Doesn't matter what this is.\n    names: [\"\\\\)\", \"\\\\]\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: false\n    },\n    handler: function handler(context, args) {\n        throw new src_ParseError(\"Mismatched \" + context.funcName);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/mathchoice.js\n\n\n\n\n\n\n\nvar mathchoice_chooseMathStyle = function chooseMathStyle(group, options) {\n    switch (options.style.size) {\n        case src_Style.DISPLAY.size:\n            return group.display;\n        case src_Style.TEXT.size:\n            return group.text;\n        case src_Style.SCRIPT.size:\n            return group.script;\n        case src_Style.SCRIPTSCRIPT.size:\n            return group.scriptscript;\n        default:\n            return group.text;\n    }\n};\n\ndefineFunction({\n    type: \"mathchoice\",\n    names: [\"\\\\mathchoice\"],\n    props: {\n        numArgs: 4\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"mathchoice\",\n            mode: parser.mode,\n            display: defineFunction_ordargument(args[0]),\n            text: defineFunction_ordargument(args[1]),\n            script: defineFunction_ordargument(args[2]),\n            scriptscript: defineFunction_ordargument(args[3])\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var body = mathchoice_chooseMathStyle(group, options);\n        var elements = buildHTML_buildExpression(body, options, false);\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var body = mathchoice_chooseMathStyle(group, options);\n        return buildExpressionRow(body, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/op.js\n\n// Limits, symbols\n\n\n\n\n\n\n\n\n\n\n\n// NOTE: Unlike most `htmlBuilder`s, this one handles not only \"op\", but also\n// \"supsub\" since some of them (like \\int) can affect super/subscripting.\nvar op_htmlBuilder = function htmlBuilder(grp, options) {\n    // Operators are handled in the TeXbook pg. 443-444, rule 13(a).\n    var supGroup = void 0;\n    var subGroup = void 0;\n    var hasLimits = false;\n    var group = void 0;\n    var supSub = checkNodeType(grp, \"supsub\");\n    if (supSub) {\n        // If we have limits, supsub will pass us its group to handle. Pull\n        // out the superscript and subscript and set the group to the op in\n        // its base.\n        supGroup = supSub.sup;\n        subGroup = supSub.sub;\n        group = assertNodeType(supSub.base, \"op\");\n        hasLimits = true;\n    } else {\n        group = assertNodeType(grp, \"op\");\n    }\n\n    var style = options.style;\n\n    // Most operators have a large successor symbol, but these don't.\n    var noSuccessor = [\"\\\\smallint\"];\n\n    var large = false;\n    if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name)) {\n\n        // Most symbol operators get larger in displaystyle (rule 13)\n        large = true;\n    }\n\n    var base = void 0;\n    if (group.symbol) {\n        // If this is a symbol, create the symbol.\n        var fontName = large ? \"Size2-Regular\" : \"Size1-Regular\";\n\n        var stash = \"\";\n        if (group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") {\n            // No font glyphs yet, so use a glyph w/o the oval.\n            // TODO: When font glyphs are available, delete this code.\n            stash = group.name.substr(1);\n            // $FlowFixMe\n            group.name = stash === \"oiint\" ? \"\\\\iint\" : \"\\\\iiint\";\n        }\n\n        base = buildCommon.makeSymbol(group.name, fontName, \"math\", options, [\"mop\", \"op-symbol\", large ? \"large-op\" : \"small-op\"]);\n\n        if (stash.length > 0) {\n            // We're in \\oiint or \\oiiint. Overlay the oval.\n            // TODO: When font glyphs are available, delete this code.\n            var italic = base.italic;\n            var oval = buildCommon.staticSvg(stash + \"Size\" + (large ? \"2\" : \"1\"), options);\n            base = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: [{ type: \"elem\", elem: base, shift: 0 }, { type: \"elem\", elem: oval, shift: large ? 0.08 : 0 }]\n            }, options);\n            // $FlowFixMe\n            group.name = \"\\\\\" + stash;\n            base.classes.unshift(\"mop\");\n            // $FlowFixMe\n            base.italic = italic;\n        }\n    } else if (group.body) {\n        // If this is a list, compose that list.\n        var inner = buildHTML_buildExpression(group.body, options, true);\n        if (inner.length === 1 && inner[0] instanceof domTree_SymbolNode) {\n            base = inner[0];\n            base.classes[0] = \"mop\"; // replace old mclass\n        } else {\n            base = buildCommon.makeSpan([\"mop\"], inner, options);\n        }\n    } else {\n        // Otherwise, this is a text operator. Build the text from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup\n        var output = [];\n        for (var i = 1; i < group.name.length; i++) {\n            output.push(buildCommon.mathsym(group.name[i], group.mode));\n        }\n        base = buildCommon.makeSpan([\"mop\"], output, options);\n    }\n\n    // If content of op is a single symbol, shift it vertically.\n    var baseShift = 0;\n    var slant = 0;\n    if ((base instanceof domTree_SymbolNode || group.name === \"\\\\oiint\" || group.name === \"\\\\oiiint\") && !group.suppressBaseShift) {\n        // We suppress the shift of the base of \\overset and \\underset. Otherwise,\n        // shift the symbol so its center lies on the axis (rule 13). It\n        // appears that our fonts have the centers of the symbols already\n        // almost on the axis, so these numbers are very small. Note we\n        // don't actually apply this here, but instead it is used either in\n        // the vlist creation or separately when there are no limits.\n        baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight;\n\n        // The slant of the symbol is just its italic correction.\n        // $FlowFixMe\n        slant = base.italic;\n    }\n\n    if (hasLimits) {\n        // IE 8 clips \\int if it is in a display: inline-block. We wrap it\n        // in a new span so it is an inline, and works.\n        base = buildCommon.makeSpan([], [base]);\n\n        var sub = void 0;\n        var sup = void 0;\n        // We manually have to handle the superscripts and subscripts. This,\n        // aside from the kern calculations, is copied from supsub.\n        if (supGroup) {\n            var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);\n\n            sup = {\n                elem: elem,\n                kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)\n            };\n        }\n\n        if (subGroup) {\n            var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);\n\n            sub = {\n                elem: _elem,\n                kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)\n            };\n        }\n\n        // Build the final group as a vlist of the possible subscript, base,\n        // and possible superscript.\n        var finalGroup = void 0;\n        if (sup && sub) {\n            var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: bottom,\n                children: [{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: sub.elem, marginLeft: -slant + \"em\" }, { type: \"kern\", size: sub.kern }, { type: \"elem\", elem: base }, { type: \"kern\", size: sup.kern }, { type: \"elem\", elem: sup.elem, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }]\n            }, options);\n        } else if (sub) {\n            var top = base.height - baseShift;\n\n            // Shift the limits by the slant of the symbol. Note\n            // that we are supposed to shift the limits by 1/2 of the slant,\n            // but since we are centering the limits adding a full slant of\n            // margin will shift by 1/2 that.\n            finalGroup = buildCommon.makeVList({\n                positionType: \"top\",\n                positionData: top,\n                children: [{ type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }, { type: \"elem\", elem: sub.elem, marginLeft: -slant + \"em\" }, { type: \"kern\", size: sub.kern }, { type: \"elem\", elem: base }]\n            }, options);\n        } else if (sup) {\n            var _bottom = base.depth + baseShift;\n\n            finalGroup = buildCommon.makeVList({\n                positionType: \"bottom\",\n                positionData: _bottom,\n                children: [{ type: \"elem\", elem: base }, { type: \"kern\", size: sup.kern }, { type: \"elem\", elem: sup.elem, marginLeft: slant + \"em\" }, { type: \"kern\", size: options.fontMetrics().bigOpSpacing5 }]\n            }, options);\n        } else {\n            // This case probably shouldn't occur (this would mean the\n            // supsub was sending us a group with no superscript or\n            // subscript) but be safe.\n            return base;\n        }\n\n        return buildCommon.makeSpan([\"mop\", \"op-limits\"], [finalGroup], options);\n    } else {\n        if (baseShift) {\n            base.style.position = \"relative\";\n            base.style.top = baseShift + \"em\";\n        }\n\n        return base;\n    }\n};\n\nvar op_mathmlBuilder = function mathmlBuilder(group, options) {\n    var node = void 0;\n\n    // TODO(emily): handle big operators using the `largeop` attribute\n\n    if (group.symbol) {\n        // This is a symbol. Just add the symbol.\n        node = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(group.name, group.mode)]);\n    } else if (group.body) {\n        // This is an operator with children. Add them.\n        node = new mathMLTree_MathNode(\"mo\", buildMathML_buildExpression(group.body, options));\n    } else {\n        // This is a text operator. Add all of the characters from the\n        // operator's name.\n        // TODO(emily): Add a space in the middle of some of these\n        // operators, like \\limsup.\n        node = new mathMLTree_MathNode(\"mi\", [new mathMLTree_TextNode(group.name.slice(1))]);\n\n        // Append an <mo>&ApplyFunction;</mo>.\n        // ref: https://www.w3.org/TR/REC-MathML/chap3_2.html#sec3.2.4\n        var operator = new mathMLTree_MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n\n        return newDocumentFragment([node, operator]);\n    }\n\n    return node;\n};\n\nvar singleCharBigOps = {\n    \"\\u220F\": \"\\\\prod\",\n    \"\\u2210\": \"\\\\coprod\",\n    \"\\u2211\": \"\\\\sum\",\n    \"\\u22C0\": \"\\\\bigwedge\",\n    \"\\u22C1\": \"\\\\bigvee\",\n    \"\\u22C2\": \"\\\\bigcap\",\n    \"\\u22C3\": \"\\\\bigcap\",\n    \"\\u2A00\": \"\\\\bigodot\",\n    \"\\u2A01\": \"\\\\bigoplus\",\n    \"\\u2A02\": \"\\\\bigotimes\",\n    \"\\u2A04\": \"\\\\biguplus\",\n    \"\\u2A06\": \"\\\\bigsqcup\"\n};\n\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\coprod\", \"\\\\bigvee\", \"\\\\bigwedge\", \"\\\\biguplus\", \"\\\\bigcap\", \"\\\\bigcup\", \"\\\\intop\", \"\\\\prod\", \"\\\\sum\", \"\\\\bigotimes\", \"\\\\bigoplus\", \"\\\\bigodot\", \"\\\\bigsqcup\", \"\\\\smallint\", \"\\u220F\", \"\\u2210\", \"\\u2211\", \"\\u22C0\", \"\\u22C1\", \"\\u22C2\", \"\\u22C3\", \"\\u2A00\", \"\\u2A01\", \"\\u2A02\", \"\\u2A04\", \"\\u2A06\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var fName = funcName;\n        if (fName.length === 1) {\n            fName = singleCharBigOps[fName];\n        }\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: true,\n            symbol: true,\n            name: fName\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// Note: calling defineFunction with a type that's already been defined only\n// works because the same htmlBuilder and mathmlBuilder are being used.\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\mathop\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// There are 2 flags for operators; whether they produce limits in\n// displaystyle, and whether they are symbols and should grow in\n// displaystyle. These four groups cover the four possible choices.\n\nvar singleCharIntegrals = {\n    \"\\u222B\": \"\\\\int\",\n    \"\\u222C\": \"\\\\iint\",\n    \"\\u222D\": \"\\\\iiint\",\n    \"\\u222E\": \"\\\\oint\",\n    \"\\u222F\": \"\\\\oiint\",\n    \"\\u2230\": \"\\\\oiiint\"\n};\n\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\mathop\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var body = args[0];\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// No limits, not symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\arcsin\", \"\\\\arccos\", \"\\\\arctan\", \"\\\\arctg\", \"\\\\arcctg\", \"\\\\arg\", \"\\\\ch\", \"\\\\cos\", \"\\\\cosec\", \"\\\\cosh\", \"\\\\cot\", \"\\\\cotg\", \"\\\\coth\", \"\\\\csc\", \"\\\\ctg\", \"\\\\cth\", \"\\\\deg\", \"\\\\dim\", \"\\\\exp\", \"\\\\hom\", \"\\\\ker\", \"\\\\lg\", \"\\\\ln\", \"\\\\log\", \"\\\\sec\", \"\\\\sin\", \"\\\\sinh\", \"\\\\sh\", \"\\\\tan\", \"\\\\tanh\", \"\\\\tg\", \"\\\\th\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref4) {\n        var parser = _ref4.parser,\n            funcName = _ref4.funcName;\n\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: false,\n            name: funcName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// Limits, not symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\det\", \"\\\\gcd\", \"\\\\inf\", \"\\\\lim\", \"\\\\max\", \"\\\\min\", \"\\\\Pr\", \"\\\\sup\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref5) {\n        var parser = _ref5.parser,\n            funcName = _ref5.funcName;\n\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: true,\n            symbol: false,\n            name: funcName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n\n// No limits, symbols\ndefineFunction({\n    type: \"op\",\n    names: [\"\\\\int\", \"\\\\iint\", \"\\\\iiint\", \"\\\\oint\", \"\\\\oiint\", \"\\\\oiiint\", \"\\u222B\", \"\\u222C\", \"\\u222D\", \"\\u222E\", \"\\u222F\", \"\\u2230\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(_ref6) {\n        var parser = _ref6.parser,\n            funcName = _ref6.funcName;\n\n        var fName = funcName;\n        if (fName.length === 1) {\n            fName = singleCharIntegrals[fName];\n        }\n        return {\n            type: \"op\",\n            mode: parser.mode,\n            limits: false,\n            symbol: true,\n            name: fName\n        };\n    },\n\n    htmlBuilder: op_htmlBuilder,\n    mathmlBuilder: op_mathmlBuilder\n});\n// CONCATENATED MODULE: ./src/functions/operatorname.js\n\n\n\n\n\n\n\n\n// \\operatorname\n// amsopn.dtx: \\mathop{#1\\kern\\z@\\operator@font#3}\\newmcodes@\ndefineFunction({\n    type: \"operatorname\",\n    names: [\"\\\\operatorname\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"operatorname\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body)\n        };\n    },\n\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (group.body.length > 0) {\n            var body = group.body.map(function (child) {\n                // $FlowFixMe: Check if the node has a string `text` property.\n                var childText = child.text;\n                if (typeof childText === \"string\") {\n                    return {\n                        type: \"textord\",\n                        mode: child.mode,\n                        text: childText\n                    };\n                } else {\n                    return child;\n                }\n            });\n\n            // Consolidate function names into symbol characters.\n            var expression = buildHTML_buildExpression(body, options.withFont(\"mathrm\"), true);\n\n            for (var i = 0; i < expression.length; i++) {\n                var child = expression[i];\n                if (child instanceof domTree_SymbolNode) {\n                    // Per amsopn package,\n                    // change minus to hyphen and \\ast to asterisk\n                    child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n                }\n            }\n            return buildCommon.makeSpan([\"mop\"], expression, options);\n        } else {\n            return buildCommon.makeSpan([\"mop\"], [], options);\n        }\n    },\n\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // The steps taken here are similar to the html version.\n        var expression = buildMathML_buildExpression(group.body, options.withFont(\"mathrm\"));\n\n        // Is expression a string or has it something like a fraction?\n        var isAllString = true; // default\n        for (var i = 0; i < expression.length; i++) {\n            var node = expression[i];\n            if (node instanceof mathMLTree.SpaceNode) {\n                // Do nothing\n            } else if (node instanceof mathMLTree.MathNode) {\n                switch (node.type) {\n                    case \"mi\":\n                    case \"mn\":\n                    case \"ms\":\n                    case \"mspace\":\n                    case \"mtext\":\n                        break; // Do nothing yet.\n                    case \"mo\":\n                        {\n                            var child = node.children[0];\n                            if (node.children.length === 1 && child instanceof mathMLTree.TextNode) {\n                                child.text = child.text.replace(/\\u2212/, \"-\").replace(/\\u2217/, \"*\");\n                            } else {\n                                isAllString = false;\n                            }\n                            break;\n                        }\n                    default:\n                        isAllString = false;\n                }\n            } else {\n                isAllString = false;\n            }\n        }\n\n        if (isAllString) {\n            // Write a single TextNode instead of multiple nested tags.\n            var word = expression.map(function (node) {\n                return node.toText();\n            }).join(\"\");\n            // word has already been escaped by `node.toText()`\n            expression = [new mathMLTree.TextNode(word, false)];\n        }\n\n        var identifier = new mathMLTree.MathNode(\"mi\", expression);\n        identifier.setAttribute(\"mathvariant\", \"normal\");\n\n        // \\u2061 is the same as &ApplyFunction;\n        // ref: https://www.w3schools.com/charsets/ref_html_entities_a.asp\n        var operator = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(\"\\u2061\", \"text\")]);\n\n        return mathMLTree.newDocumentFragment([identifier, operator]);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/ordgroup.js\n\n\n\n\n\n\ndefineFunctionBuilders({\n    type: \"ordgroup\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeSpan([\"mord\"], buildHTML_buildExpression(group.body, options, true), options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        return buildExpressionRow(group.body, options);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/overline.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"overline\",\n    names: [\"\\\\overline\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"overline\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Overlines are handled in the TeXbook pg 443, Rule 9.\n\n        // Build the inner group in the cramped style.\n        var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n\n        // Create the line above the body\n        var line = buildCommon.makeLineSpan(\"overline-line\", options);\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: innerGroup }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: line.height }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"overline\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n        operator.setAttribute(\"stretchy\", \"true\");\n\n        var node = new mathMLTree.MathNode(\"mover\", [buildMathML_buildGroup(group.body, options), operator]);\n        node.setAttribute(\"accent\", \"true\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/phantom.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"phantom\",\n    names: [\"\\\\phantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var body = args[0];\n        return {\n            type: \"phantom\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body)\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var elements = buildHTML_buildExpression(group.body, options.withPhantom(), false);\n\n        // \\phantom isn't supposed to affect the elements it contains.\n        // See \"color\" for more details.\n        return buildCommon.makeFragment(elements);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(group.body, options);\n        return new mathMLTree.MathNode(\"mphantom\", inner);\n    }\n});\n\ndefineFunction({\n    type: \"hphantom\",\n    names: [\"\\\\hphantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref2, args) {\n        var parser = _ref2.parser;\n\n        var body = args[0];\n        return {\n            type: \"hphantom\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var node = buildCommon.makeSpan([], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n        node.height = 0;\n        node.depth = 0;\n        if (node.children) {\n            for (var i = 0; i < node.children.length; i++) {\n                node.children[i].height = 0;\n                node.children[i].depth = 0;\n            }\n        }\n\n        // See smash for comment re: use of makeVList\n        node = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n\n        return node;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n        var node = new mathMLTree.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"height\", \"0px\");\n        return node;\n    }\n});\n\ndefineFunction({\n    type: \"vphantom\",\n    names: [\"\\\\vphantom\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref3, args) {\n        var parser = _ref3.parser;\n\n        var body = args[0];\n        return {\n            type: \"vphantom\",\n            mode: parser.mode,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var inner = buildCommon.makeSpan([\"inner\"], [buildHTML_buildGroup(group.body, options.withPhantom())]);\n        var fix = buildCommon.makeSpan([\"fix\"], []);\n        return buildCommon.makeSpan([\"mord\", \"rlap\"], [inner, fix], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options);\n        var node = new mathMLTree.MathNode(\"mphantom\", inner);\n        node.setAttribute(\"width\", \"0px\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/sizing.js\n\n\n\n\n\n\n\nfunction sizingGroup(value, options, baseOptions) {\n    var inner = buildHTML_buildExpression(value, options, false);\n    var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;\n\n    // Add size-resetting classes to the inner list and set maxFontSize\n    // manually. Handle nested size changes.\n    for (var i = 0; i < inner.length; i++) {\n        var pos = inner[i].classes.indexOf(\"sizing\");\n        if (pos < 0) {\n            Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions));\n        } else if (inner[i].classes[pos + 1] === \"reset-size\" + options.size) {\n            // This is a nested size change: e.g., inner[i] is the \"b\" in\n            // `\\Huge a \\small b`. Override the old size (the `reset-` class)\n            // but not the new size.\n            inner[i].classes[pos + 1] = \"reset-size\" + baseOptions.size;\n        }\n\n        inner[i].height *= multiplier;\n        inner[i].depth *= multiplier;\n    }\n\n    return buildCommon.makeFragment(inner);\n}\n\nvar sizeFuncs = [\"\\\\tiny\", \"\\\\sixptsize\", \"\\\\scriptsize\", \"\\\\footnotesize\", \"\\\\small\", \"\\\\normalsize\", \"\\\\large\", \"\\\\Large\", \"\\\\LARGE\", \"\\\\huge\", \"\\\\Huge\"];\n\nvar sizing_htmlBuilder = function htmlBuilder(group, options) {\n    // Handle sizing operators like \\Huge. Real TeX doesn't actually allow\n    // these functions inside of math expressions, so we do some special\n    // handling.\n    var newOptions = options.havingSize(group.size);\n    return sizingGroup(group.body, newOptions, options);\n};\n\ndefineFunction({\n    type: \"sizing\",\n    names: sizeFuncs,\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var breakOnTokenText = _ref.breakOnTokenText,\n            funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        parser.consumeSpaces();\n        var body = parser.parseExpression(false, breakOnTokenText);\n\n        return {\n            type: \"sizing\",\n            mode: parser.mode,\n            // Figure out what size to use based on the list of functions above\n            size: sizeFuncs.indexOf(funcName) + 1,\n            body: body\n        };\n    },\n    htmlBuilder: sizing_htmlBuilder,\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var newOptions = options.havingSize(group.size);\n        var inner = buildMathML_buildExpression(group.body, newOptions);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        // TODO(emily): This doesn't produce the correct size for nested size\n        // changes, because we don't keep state of what style we're currently\n        // in, so we can't reset the size to normal before changing it.  Now\n        // that we're passing an options parameter we should be able to fix\n        // this.\n        node.setAttribute(\"mathsize\", newOptions.sizeMultiplier + \"em\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/raisebox.js\n\n\n\n\n\n\n\n\n\n// Box manipulation\ndefineFunction({\n    type: \"raisebox\",\n    names: [\"\\\\raisebox\"],\n    props: {\n        numArgs: 2,\n        argTypes: [\"size\", \"text\"],\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        var amount = assertNodeType(args[0], \"size\").value;\n        var body = args[1];\n        return {\n            type: \"raisebox\",\n            mode: parser.mode,\n            dy: amount,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var text = {\n            type: \"text\",\n            mode: group.mode,\n            body: defineFunction_ordargument(group.body),\n            font: \"mathrm\" // simulate \\textrm\n        };\n        var sizedText = {\n            type: \"sizing\",\n            mode: group.mode,\n            body: [text],\n            size: 6 // simulate \\normalsize\n        };\n        var body = sizing_htmlBuilder(sizedText, options);\n        var dy = units_calculateSize(group.dy, options);\n        return buildCommon.makeVList({\n            positionType: \"shift\",\n            positionData: -dy,\n            children: [{ type: \"elem\", elem: body }]\n        }, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n        var dy = group.dy.number + group.dy.unit;\n        node.setAttribute(\"voffset\", dy);\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/rule.js\n\n\n\n\n\n\ndefineFunction({\n    type: \"rule\",\n    names: [\"\\\\rule\"],\n    props: {\n        numArgs: 2,\n        numOptionalArgs: 1,\n        argTypes: [\"size\", \"size\", \"size\"]\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var shift = optArgs[0];\n        var width = assertNodeType(args[0], \"size\");\n        var height = assertNodeType(args[1], \"size\");\n        return {\n            type: \"rule\",\n            mode: parser.mode,\n            shift: shift && assertNodeType(shift, \"size\").value,\n            width: width.value,\n            height: height.value\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Make an empty span for the rule\n        var rule = buildCommon.makeSpan([\"mord\", \"rule\"], [], options);\n\n        // Calculate the shift, width, and height of the rule, and account for units\n        var shift = 0;\n        if (group.shift) {\n            shift = units_calculateSize(group.shift, options);\n        }\n\n        var width = units_calculateSize(group.width, options);\n        var height = units_calculateSize(group.height, options);\n\n        // Style the rule to the right size\n        rule.style.borderRightWidth = width + \"em\";\n        rule.style.borderTopWidth = height + \"em\";\n        rule.style.bottom = shift + \"em\";\n\n        // Record the height and width\n        rule.width = width;\n        rule.height = height + shift;\n        rule.depth = -shift;\n        // Font size is the number large enough that the browser will\n        // reserve at least `absHeight` space above the baseline.\n        // The 1.125 factor was empirically determined\n        rule.maxFontSize = height * 1.125 * options.sizeMultiplier;\n\n        return rule;\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // TODO(emily): Figure out if there's an actual way to draw black boxes\n        // in MathML.\n        var node = new mathMLTree.MathNode(\"mrow\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/smash.js\n\n// smash, with optional [tb], as in AMS\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"smash\",\n    names: [\"\\\\smash\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var smashHeight = false;\n        var smashDepth = false;\n        var tbArg = optArgs[0] && assertNodeType(optArgs[0], \"ordgroup\");\n        if (tbArg) {\n            // Optional [tb] argument is engaged.\n            // ref: amsmath: \\renewcommand{\\smash}[1][tb]{%\n            //               def\\mb@t{\\ht}\\def\\mb@b{\\dp}\\def\\mb@tb{\\ht\\z@\\z@\\dp}%\n            var letter = \"\";\n            for (var i = 0; i < tbArg.body.length; ++i) {\n                var node = tbArg.body[i];\n                // $FlowFixMe: Not every node type has a `text` property.\n                letter = node.text;\n                if (letter === \"t\") {\n                    smashHeight = true;\n                } else if (letter === \"b\") {\n                    smashDepth = true;\n                } else {\n                    smashHeight = false;\n                    smashDepth = false;\n                    break;\n                }\n            }\n        } else {\n            smashHeight = true;\n            smashDepth = true;\n        }\n\n        var body = args[0];\n        return {\n            type: \"smash\",\n            mode: parser.mode,\n            body: body,\n            smashHeight: smashHeight,\n            smashDepth: smashDepth\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var node = buildCommon.makeSpan([\"mord\"], [buildHTML_buildGroup(group.body, options)]);\n\n        if (!group.smashHeight && !group.smashDepth) {\n            return node;\n        }\n\n        if (group.smashHeight) {\n            node.height = 0;\n            // In order to influence makeVList, we have to reset the children.\n            if (node.children) {\n                for (var i = 0; i < node.children.length; i++) {\n                    node.children[i].height = 0;\n                }\n            }\n        }\n\n        if (group.smashDepth) {\n            node.depth = 0;\n            if (node.children) {\n                for (var _i = 0; _i < node.children.length; _i++) {\n                    node.children[_i].depth = 0;\n                }\n            }\n        }\n\n        // At this point, we've reset the TeX-like height and depth values.\n        // But the span still has an HTML line height.\n        // makeVList applies \"display: table-cell\", which prevents the browser\n        // from acting on that line height. So we'll call makeVList now.\n\n        return buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: node }]\n        }, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mpadded\", [buildMathML_buildGroup(group.body, options)]);\n\n        if (group.smashHeight) {\n            node.setAttribute(\"height\", \"0px\");\n        }\n\n        if (group.smashDepth) {\n            node.setAttribute(\"depth\", \"0px\");\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/sqrt.js\n\n\n\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"sqrt\",\n    names: [\"\\\\sqrt\"],\n    props: {\n        numArgs: 1,\n        numOptionalArgs: 1\n    },\n    handler: function handler(_ref, args, optArgs) {\n        var parser = _ref.parser;\n\n        var index = optArgs[0];\n        var body = args[0];\n        return {\n            type: \"sqrt\",\n            mode: parser.mode,\n            body: body,\n            index: index\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Square roots are handled in the TeXbook pg. 443, Rule 11.\n\n        // First, we do the same steps as in overline to build the inner group\n        // and line\n        var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());\n        if (inner.height === 0) {\n            // Render a small surd.\n            inner.height = options.fontMetrics().xHeight;\n        }\n\n        // Some groups can return document fragments.  Handle those by wrapping\n        // them in a span.\n        if (inner instanceof tree_DocumentFragment) {\n            inner = buildCommon.makeSpan([], [inner], options);\n        }\n\n        // Calculate the minimum size for the \\surd delimiter\n        var metrics = options.fontMetrics();\n        var theta = metrics.defaultRuleThickness;\n\n        var phi = theta;\n        if (options.style.id < src_Style.TEXT.id) {\n            phi = options.fontMetrics().xHeight;\n        }\n\n        // Calculate the clearance between the body and line\n        var lineClearance = theta + phi / 4;\n\n        var minDelimiterHeight = inner.height + inner.depth + lineClearance + theta;\n\n        // Create a sqrt SVG of the required minimum size\n\n        var _delimiter$sqrtImage = delimiter.sqrtImage(minDelimiterHeight, options),\n            img = _delimiter$sqrtImage.span,\n            ruleWidth = _delimiter$sqrtImage.ruleWidth,\n            advanceWidth = _delimiter$sqrtImage.advanceWidth;\n\n        var delimDepth = img.height - ruleWidth;\n\n        // Adjust the clearance based on the delimiter size\n        if (delimDepth > inner.height + inner.depth + lineClearance) {\n            lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2;\n        }\n\n        // Shift the sqrt image\n        var imgShift = img.height - inner.height - lineClearance - ruleWidth;\n\n        inner.style.paddingLeft = advanceWidth + \"em\";\n\n        // Overlay the image and the argument.\n        var body = buildCommon.makeVList({\n            positionType: \"firstBaseline\",\n            children: [{ type: \"elem\", elem: inner, wrapperClasses: [\"svg-align\"] }, { type: \"kern\", size: -(inner.height + imgShift) }, { type: \"elem\", elem: img }, { type: \"kern\", size: ruleWidth }]\n        }, options);\n\n        if (!group.index) {\n            return buildCommon.makeSpan([\"mord\", \"sqrt\"], [body], options);\n        } else {\n            // Handle the optional root index\n\n            // The index is always in scriptscript style\n            var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT);\n            var rootm = buildHTML_buildGroup(group.index, newOptions, options);\n\n            // The amount the index is shifted by. This is taken from the TeX\n            // source, in the definition of `\\r@@t`.\n            var toShift = 0.6 * (body.height - body.depth);\n\n            // Build a VList with the superscript shifted up correctly\n            var rootVList = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: -toShift,\n                children: [{ type: \"elem\", elem: rootm }]\n            }, options);\n            // Add a class surrounding it so we can add on the appropriate\n            // kerning\n            var rootVListWrap = buildCommon.makeSpan([\"root\"], [rootVList]);\n\n            return buildCommon.makeSpan([\"mord\", \"sqrt\"], [rootVListWrap, body], options);\n        }\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var body = group.body,\n            index = group.index;\n\n        return index ? new mathMLTree.MathNode(\"mroot\", [buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options)]) : new mathMLTree.MathNode(\"msqrt\", [buildMathML_buildGroup(body, options)]);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/styling.js\n\n\n\n\n\n\n\nvar styling_styleMap = {\n    \"display\": src_Style.DISPLAY,\n    \"text\": src_Style.TEXT,\n    \"script\": src_Style.SCRIPT,\n    \"scriptscript\": src_Style.SCRIPTSCRIPT\n};\n\ndefineFunction({\n    type: \"styling\",\n    names: [\"\\\\displaystyle\", \"\\\\textstyle\", \"\\\\scriptstyle\", \"\\\\scriptscriptstyle\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var breakOnTokenText = _ref.breakOnTokenText,\n            funcName = _ref.funcName,\n            parser = _ref.parser;\n\n        // parse out the implicit body\n        parser.consumeSpaces();\n        var body = parser.parseExpression(true, breakOnTokenText);\n\n        // TODO: Refactor to avoid duplicating styleMap in multiple places (e.g.\n        // here and in buildHTML and de-dupe the enumeration of all the styles).\n        // $FlowFixMe: The names above exactly match the styles.\n        var style = funcName.slice(1, funcName.length - 5);\n        return {\n            type: \"styling\",\n            mode: parser.mode,\n            // Figure out what style to use by pulling out the style from\n            // the function name\n            style: style,\n            body: body\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Style changes are handled in the TeXbook on pg. 442, Rule 3.\n        var newStyle = styling_styleMap[group.style];\n        var newOptions = options.havingStyle(newStyle).withFont('');\n        return sizingGroup(group.body, newOptions, options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // Figure out what style we're changing to.\n        // TODO(kevinb): dedupe this with buildHTML.js\n        // This will be easier of handling of styling nodes is in the same file.\n        var styleMap = {\n            \"display\": src_Style.DISPLAY,\n            \"text\": src_Style.TEXT,\n            \"script\": src_Style.SCRIPT,\n            \"scriptscript\": src_Style.SCRIPTSCRIPT\n        };\n\n        var newStyle = styleMap[group.style];\n        var newOptions = options.havingStyle(newStyle);\n\n        var inner = buildMathML_buildExpression(group.body, newOptions);\n\n        var node = new mathMLTree.MathNode(\"mstyle\", inner);\n\n        var styleAttributes = {\n            \"display\": [\"0\", \"true\"],\n            \"text\": [\"0\", \"false\"],\n            \"script\": [\"1\", \"false\"],\n            \"scriptscript\": [\"2\", \"false\"]\n        };\n\n        var attr = styleAttributes[group.style];\n\n        node.setAttribute(\"scriptlevel\", attr[0]);\n        node.setAttribute(\"displaystyle\", attr[1]);\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/supsub.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Sometimes, groups perform special rules when they have superscripts or\n * subscripts attached to them. This function lets the `supsub` group know that\n * Sometimes, groups perform special rules when they have superscripts or\n * its inner element should handle the superscripts and subscripts instead of\n * handling them itself.\n */\nvar supsub_htmlBuilderDelegate = function htmlBuilderDelegate(group, options) {\n    var base = group.base;\n    if (!base) {\n        return null;\n    } else if (base.type === \"op\") {\n        // Operators handle supsubs differently when they have limits\n        // (e.g. `\\displaystyle\\sum_2^3`)\n        var delegate = base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub);\n        return delegate ? op_htmlBuilder : null;\n    } else if (base.type === \"accent\") {\n        return utils.isCharacterBox(base.base) ? accent_htmlBuilder : null;\n    } else if (base.type === \"horizBrace\") {\n        var isSup = !group.sub;\n        return isSup === base.isOver ? horizBrace_htmlBuilder : null;\n    } else {\n        return null;\n    }\n};\n\n// Super scripts and subscripts, whose precise placement can depend on other\n// functions that precede them.\ndefineFunctionBuilders({\n    type: \"supsub\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Superscript and subscripts are handled in the TeXbook on page\n        // 445-446, rules 18(a-f).\n\n        // Here is where we defer to the inner group if it should handle\n        // superscripts and subscripts itself.\n        var builderDelegate = supsub_htmlBuilderDelegate(group, options);\n        if (builderDelegate) {\n            return builderDelegate(group, options);\n        }\n\n        var valueBase = group.base,\n            valueSup = group.sup,\n            valueSub = group.sub;\n\n        var base = buildHTML_buildGroup(valueBase, options);\n        var supm = void 0;\n        var subm = void 0;\n\n        var metrics = options.fontMetrics();\n\n        // Rule 18a\n        var supShift = 0;\n        var subShift = 0;\n\n        var isCharacterBox = valueBase && utils.isCharacterBox(valueBase);\n        if (valueSup) {\n            var newOptions = options.havingStyle(options.style.sup());\n            supm = buildHTML_buildGroup(valueSup, newOptions, options);\n            if (!isCharacterBox) {\n                supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier;\n            }\n        }\n\n        if (valueSub) {\n            var _newOptions = options.havingStyle(options.style.sub());\n            subm = buildHTML_buildGroup(valueSub, _newOptions, options);\n            if (!isCharacterBox) {\n                subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier;\n            }\n        }\n\n        // Rule 18c\n        var minSupShift = void 0;\n        if (options.style === src_Style.DISPLAY) {\n            minSupShift = metrics.sup1;\n        } else if (options.style.cramped) {\n            minSupShift = metrics.sup3;\n        } else {\n            minSupShift = metrics.sup2;\n        }\n\n        // scriptspace is a font-size-independent size, so scale it\n        // appropriately for use as the marginRight.\n        var multiplier = options.sizeMultiplier;\n        var marginRight = 0.5 / metrics.ptPerEm / multiplier + \"em\";\n\n        var marginLeft = null;\n        if (subm) {\n            // Subscripts shouldn't be shifted by the base's italic correction.\n            // Account for that by shifting the subscript back the appropriate\n            // amount. Note we only do this when the base is a single symbol.\n            var isOiint = group.base && group.base.type === \"op\" && group.base.name && (group.base.name === \"\\\\oiint\" || group.base.name === \"\\\\oiiint\");\n            if (base instanceof domTree_SymbolNode || isOiint) {\n                // $FlowFixMe\n                marginLeft = -base.italic + \"em\";\n            }\n        }\n\n        var supsub = void 0;\n        if (supm && subm) {\n            supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n            subShift = Math.max(subShift, metrics.sub2);\n\n            var ruleWidth = metrics.defaultRuleThickness;\n\n            // Rule 18e\n            var maxWidth = 4 * ruleWidth;\n            if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {\n                subShift = maxWidth - (supShift - supm.depth) + subm.height;\n                var psi = 0.8 * metrics.xHeight - (supShift - supm.depth);\n                if (psi > 0) {\n                    supShift += psi;\n                    subShift -= psi;\n                }\n            }\n\n            var vlistElem = [{ type: \"elem\", elem: subm, shift: subShift, marginRight: marginRight,\n                marginLeft: marginLeft }, { type: \"elem\", elem: supm, shift: -supShift, marginRight: marginRight }];\n\n            supsub = buildCommon.makeVList({\n                positionType: \"individualShift\",\n                children: vlistElem\n            }, options);\n        } else if (subm) {\n            // Rule 18b\n            subShift = Math.max(subShift, metrics.sub1, subm.height - 0.8 * metrics.xHeight);\n\n            var _vlistElem = [{ type: \"elem\", elem: subm, marginLeft: marginLeft, marginRight: marginRight }];\n\n            supsub = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: subShift,\n                children: _vlistElem\n            }, options);\n        } else if (supm) {\n            // Rule 18c, d\n            supShift = Math.max(supShift, minSupShift, supm.depth + 0.25 * metrics.xHeight);\n\n            supsub = buildCommon.makeVList({\n                positionType: \"shift\",\n                positionData: -supShift,\n                children: [{ type: \"elem\", elem: supm, marginRight: marginRight }]\n            }, options);\n        } else {\n            throw new Error(\"supsub must have either sup or sub.\");\n        }\n\n        // Wrap the supsub vlist in a span.msupsub to reset text-align.\n        var mclass = getTypeOfDomTree(base, \"right\") || \"mord\";\n        return buildCommon.makeSpan([mclass], [base, buildCommon.makeSpan([\"msupsub\"], [supsub])], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        // Is the inner group a relevant horizonal brace?\n        var isBrace = false;\n        var isOver = void 0;\n        var isSup = void 0;\n\n        var horizBrace = checkNodeType(group.base, \"horizBrace\");\n        if (horizBrace) {\n            isSup = !!group.sup;\n            if (isSup === horizBrace.isOver) {\n                isBrace = true;\n                isOver = horizBrace.isOver;\n            }\n        }\n\n        var children = [buildMathML_buildGroup(group.base, options)];\n\n        if (group.sub) {\n            children.push(buildMathML_buildGroup(group.sub, options));\n        }\n\n        if (group.sup) {\n            children.push(buildMathML_buildGroup(group.sup, options));\n        }\n\n        var nodeType = void 0;\n        if (isBrace) {\n            nodeType = isOver ? \"mover\" : \"munder\";\n        } else if (!group.sub) {\n            var base = group.base;\n            if (base && base.type === \"op\" && base.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"mover\";\n            } else {\n                nodeType = \"msup\";\n            }\n        } else if (!group.sup) {\n            var _base = group.base;\n            if (_base && _base.type === \"op\" && _base.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"munder\";\n            } else {\n                nodeType = \"msub\";\n            }\n        } else {\n            var _base2 = group.base;\n            if (_base2 && _base2.type === \"op\" && _base2.limits && options.style === src_Style.DISPLAY) {\n                nodeType = \"munderover\";\n            } else {\n                nodeType = \"msubsup\";\n            }\n        }\n\n        var node = new mathMLTree.MathNode(nodeType, children);\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOp.js\n\n\n\n\n\n\n// Operator ParseNodes created in Parser.js from symbol Groups in src/symbols.js.\n\ndefineFunctionBuilders({\n    type: \"atom\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.mathsym(group.text, group.mode, options, [\"m\" + group.family]);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mo\", [buildMathML_makeText(group.text, group.mode)]);\n        if (group.family === \"bin\") {\n            var variant = buildMathML_getVariant(group, options);\n            if (variant === \"bold-italic\") {\n                node.setAttribute(\"mathvariant\", variant);\n            }\n        } else if (group.family === \"punct\") {\n            node.setAttribute(\"separator\", \"true\");\n        }\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsOrd.js\n\n\n\n\n\n\n// \"mathord\" and \"textord\" ParseNodes created in Parser.js from symbol Groups in\n// src/symbols.js.\n\nvar defaultVariant = {\n    \"mi\": \"italic\",\n    \"mn\": \"normal\",\n    \"mtext\": \"normal\"\n};\n\ndefineFunctionBuilders({\n    type: \"mathord\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeOrd(group, options, \"mathord\");\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = new mathMLTree.MathNode(\"mi\", [buildMathML_makeText(group.text, group.mode, options)]);\n\n        var variant = buildMathML_getVariant(group, options) || \"italic\";\n        if (variant !== defaultVariant[node.type]) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n        return node;\n    }\n});\n\ndefineFunctionBuilders({\n    type: \"textord\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        return buildCommon.makeOrd(group, options, \"textord\");\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var text = buildMathML_makeText(group.text, group.mode, options);\n        var variant = buildMathML_getVariant(group, options) || \"normal\";\n\n        var node = void 0;\n        if (group.mode === 'text') {\n            node = new mathMLTree.MathNode(\"mtext\", [text]);\n        } else if (/[0-9]/.test(group.text)) {\n            // TODO(kevinb) merge adjacent <mn> nodes\n            // do it as a post processing step\n            node = new mathMLTree.MathNode(\"mn\", [text]);\n        } else if (group.text === \"\\\\prime\") {\n            node = new mathMLTree.MathNode(\"mo\", [text]);\n        } else {\n            node = new mathMLTree.MathNode(\"mi\", [text]);\n        }\n        if (variant !== defaultVariant[node.type]) {\n            node.setAttribute(\"mathvariant\", variant);\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/symbolsSpacing.js\n\n\n\n\n\n// ParseNode<\"spacing\"> created in Parser.js from the \"spacing\" symbol Groups in\n// src/symbols.js.\ndefineFunctionBuilders({\n    type: \"spacing\",\n    htmlBuilder: function htmlBuilder(group, options) {\n        if (buildCommon.regularSpace.hasOwnProperty(group.text)) {\n            var className = buildCommon.regularSpace[group.text].className || \"\";\n            // Spaces are generated by adding an actual space. Each of these\n            // things has an entry in the symbols table, so these will be turned\n            // into appropriate outputs.\n            if (group.mode === \"text\") {\n                var ord = buildCommon.makeOrd(group, options, \"textord\");\n                ord.classes.push(className);\n                return ord;\n            } else {\n                return buildCommon.makeSpan([\"mspace\", className], [buildCommon.mathsym(group.text, group.mode, options)], options);\n            }\n        } else if (buildCommon.cssSpace.hasOwnProperty(group.text)) {\n            // Spaces based on just a CSS class.\n            return buildCommon.makeSpan([\"mspace\", buildCommon.cssSpace[group.text]], [], options);\n        } else {\n            throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n        }\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var node = void 0;\n\n        if (buildCommon.regularSpace.hasOwnProperty(group.text)) {\n            node = new mathMLTree.MathNode(\"mtext\", [new mathMLTree.TextNode(\"\\xA0\")]);\n        } else if (buildCommon.cssSpace.hasOwnProperty(group.text)) {\n            // CSS-based MathML spaces (\\nobreak, \\allowbreak) are ignored\n            return new mathMLTree.MathNode(\"mspace\");\n        } else {\n            throw new src_ParseError(\"Unknown type of space \\\"\" + group.text + \"\\\"\");\n        }\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/tag.js\n\n\n\n\n\ndefineFunctionBuilders({\n    type: \"tag\",\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var table = new mathMLTree.MathNode(\"mtable\", [new mathMLTree.MathNode(\"mlabeledtr\", [new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.tag, options)]), new mathMLTree.MathNode(\"mtd\", [buildExpressionRow(group.body, options)])])]);\n        table.setAttribute(\"side\", \"right\");\n        return table;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/text.js\n\n\n\n\n\n\n// Non-mathy text, possibly in a font\nvar textFontFamilies = {\n    \"\\\\text\": undefined, \"\\\\textrm\": \"textrm\", \"\\\\textsf\": \"textsf\",\n    \"\\\\texttt\": \"texttt\", \"\\\\textnormal\": \"textrm\"\n};\n\nvar textFontWeights = {\n    \"\\\\textbf\": \"textbf\"\n};\n\nvar textFontShapes = {\n    \"\\\\textit\": \"textit\"\n};\n\nvar optionsWithFont = function optionsWithFont(group, options) {\n    var font = group.font;\n    // Checks if the argument is a font family or a font style.\n    if (!font) {\n        return options;\n    } else if (textFontFamilies[font]) {\n        return options.withTextFontFamily(textFontFamilies[font]);\n    } else if (textFontWeights[font]) {\n        return options.withTextFontWeight(textFontWeights[font]);\n    } else {\n        return options.withTextFontShape(textFontShapes[font]);\n    }\n};\n\ndefineFunction({\n    type: \"text\",\n    names: [\n    // Font families\n    \"\\\\text\", \"\\\\textrm\", \"\\\\textsf\", \"\\\\texttt\", \"\\\\textnormal\",\n    // Font weights\n    \"\\\\textbf\",\n    // Font Shapes\n    \"\\\\textit\"],\n    props: {\n        numArgs: 1,\n        argTypes: [\"text\"],\n        greediness: 2,\n        allowedInText: true,\n        consumeMode: \"text\"\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser,\n            funcName = _ref.funcName;\n\n        var body = args[0];\n        return {\n            type: \"text\",\n            mode: parser.mode,\n            body: defineFunction_ordargument(body),\n            font: funcName\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var newOptions = optionsWithFont(group, options);\n        var inner = buildHTML_buildExpression(group.body, newOptions, true);\n        buildCommon.tryCombineChars(inner);\n        return buildCommon.makeSpan([\"mord\", \"text\"], inner, newOptions);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var newOptions = optionsWithFont(group, options);\n        return buildExpressionRow(group.body, newOptions);\n    }\n});\n// CONCATENATED MODULE: ./src/functions/underline.js\n\n\n\n\n\n\n\ndefineFunction({\n    type: \"underline\",\n    names: [\"\\\\underline\"],\n    props: {\n        numArgs: 1,\n        allowedInText: true\n    },\n    handler: function handler(_ref, args) {\n        var parser = _ref.parser;\n\n        return {\n            type: \"underline\",\n            mode: parser.mode,\n            body: args[0]\n        };\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        // Underlines are handled in the TeXbook pg 443, Rule 10.\n        // Build the inner group.\n        var innerGroup = buildHTML_buildGroup(group.body, options);\n\n        // Create the line to go below the body\n        var line = buildCommon.makeLineSpan(\"underline-line\", options);\n\n        // Generate the vlist, with the appropriate kerns\n        var vlist = buildCommon.makeVList({\n            positionType: \"top\",\n            positionData: innerGroup.height,\n            children: [{ type: \"kern\", size: line.height }, { type: \"elem\", elem: line }, { type: \"kern\", size: 3 * line.height }, { type: \"elem\", elem: innerGroup }]\n        }, options);\n\n        return buildCommon.makeSpan([\"mord\", \"underline\"], [vlist], options);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var operator = new mathMLTree.MathNode(\"mo\", [new mathMLTree.TextNode(\"\\u203E\")]);\n        operator.setAttribute(\"stretchy\", \"true\");\n\n        var node = new mathMLTree.MathNode(\"munder\", [buildMathML_buildGroup(group.body, options), operator]);\n        node.setAttribute(\"accentunder\", \"true\");\n\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions/verb.js\n\n\n\n\n\ndefineFunction({\n    type: \"verb\",\n    names: [\"\\\\verb\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true\n    },\n    handler: function handler(context, args, optArgs) {\n        // \\verb and \\verb* are dealt with directly in Parser.js.\n        // If we end up here, it's because of a failure to match the two delimiters\n        // in the regex in Lexer.js.  LaTeX raises the following error when \\verb is\n        // terminated by end of line (or file).\n        throw new src_ParseError(\"\\\\verb ended by end of line instead of matching delimiter\");\n    },\n    htmlBuilder: function htmlBuilder(group, options) {\n        var text = buildCommon.makeVerb(group, options);\n        var body = [];\n        // \\verb enters text mode and therefore is sized like \\textstyle\n        var newOptions = options.havingStyle(options.style.text());\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c === '~') {\n                c = '\\\\textasciitilde';\n            }\n            body.push(buildCommon.makeSymbol(c, \"Typewriter-Regular\", group.mode, newOptions, [\"mord\", \"texttt\"]));\n        }\n        buildCommon.tryCombineChars(body);\n        return buildCommon.makeSpan([\"mord\", \"text\"].concat(newOptions.sizingClasses(options)), body, newOptions);\n    },\n    mathmlBuilder: function mathmlBuilder(group, options) {\n        var text = new mathMLTree.TextNode(buildCommon.makeVerb(group, options));\n        var node = new mathMLTree.MathNode(\"mtext\", [text]);\n        node.setAttribute(\"mathvariant\", \"monospace\");\n        return node;\n    }\n});\n// CONCATENATED MODULE: ./src/functions.js\n\n/** Include this to ensure that all functions are defined. */\n\n\nvar functions = _functions;\n/* harmony default export */ var src_functions = (functions);\n\n// TODO(kevinb): have functions return an object and call defineFunction with\n// that object in this file instead of relying on side-effects.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// CONCATENATED MODULE: ./src/defineEnvironment.js\n\n\n/**\n * The context contains the following properties:\n *  - mode: current parsing mode.\n *  - envName: the name of the environment, one of the listed names.\n *  - parser: the parser object.\n */\n\n\n/**\n *  - context: information and references provided by the parser\n *  - args: an array of arguments passed to \\begin{name}\n *  - optArgs: an array of optional arguments passed to \\begin{name}\n */\n\n\n/**\n *  - numArgs: (default 0) The number of arguments after the \\begin{name} function.\n *  - argTypes: (optional) Just like for a function\n *  - allowedInText: (default false) Whether or not the environment is allowed\n *                   inside text mode (not enforced yet).\n *  - numOptionalArgs: (default 0) Just like for a function\n */\n\n\n/**\n * Final enviornment spec for use at parse time.\n * This is almost identical to `EnvDefSpec`, except it\n * 1. includes the function handler\n * 2. requires all arguments except argType\n * It is generated by `defineEnvironment()` below.\n */\n\n\n/**\n * All registered environments.\n * `environments.js` exports this same dictionary again and makes it public.\n * `Parser.js` requires this dictionary via `environments.js`.\n */\nvar _environments = {};\n\nfunction defineEnvironment(_ref) {\n    var type = _ref.type,\n        names = _ref.names,\n        props = _ref.props,\n        handler = _ref.handler,\n        htmlBuilder = _ref.htmlBuilder,\n        mathmlBuilder = _ref.mathmlBuilder;\n\n    // Set default values of environments.\n    var data = {\n        type: type,\n        numArgs: props.numArgs || 0,\n        greediness: 1,\n        allowedInText: false,\n        numOptionalArgs: 0,\n        handler: handler\n    };\n    for (var i = 0; i < names.length; ++i) {\n        // TODO: The value type of _environments should be a type union of all\n        // possible `EnvSpec<>` possibilities instead of `EnvSpec<*>`, which is\n        // an existential type.\n        // $FlowFixMe\n        _environments[names[i]] = data;\n    }\n    if (htmlBuilder) {\n        _htmlGroupBuilders[type] = htmlBuilder;\n    }\n    if (mathmlBuilder) {\n        _mathmlGroupBuilders[type] = mathmlBuilder;\n    }\n}\n// CONCATENATED MODULE: ./src/environments/array.js\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Data stored in the ParseNode associated with the environment.\n\n\nfunction getHLines(parser) {\n    // Return an array. The array length = number of hlines.\n    // Each element in the array tells if the line is dashed.\n    var hlineInfo = [];\n    parser.consumeSpaces();\n    var nxt = parser.nextToken.text;\n    while (nxt === \"\\\\hline\" || nxt === \"\\\\hdashline\") {\n        parser.consume();\n        hlineInfo.push(nxt === \"\\\\hdashline\");\n        parser.consumeSpaces();\n        nxt = parser.nextToken.text;\n    }\n    return hlineInfo;\n}\n\n/**\n * Parse the body of the environment, with rows delimited by \\\\ and\n * columns delimited by &, and create a nested list in row-major order\n * with one group per cell.  If given an optional argument style\n * (\"text\", \"display\", etc.), then each cell is cast into that style.\n */\nfunction parseArray(parser, _ref, style) {\n    var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter,\n        addJot = _ref.addJot,\n        cols = _ref.cols,\n        arraystretch = _ref.arraystretch;\n\n    // Parse body of array with \\\\ temporarily mapped to \\cr\n    parser.gullet.beginGroup();\n    parser.gullet.macros.set(\"\\\\\\\\\", \"\\\\cr\");\n\n    // Get current arraystretch if it's not set by the environment\n    if (!arraystretch) {\n        var stretch = parser.gullet.expandMacroAsText(\"\\\\arraystretch\");\n        if (stretch == null) {\n            // Default \\arraystretch from lttab.dtx\n            arraystretch = 1;\n        } else {\n            arraystretch = parseFloat(stretch);\n            if (!arraystretch || arraystretch < 0) {\n                throw new src_ParseError(\"Invalid \\\\arraystretch: \" + stretch);\n            }\n        }\n    }\n\n    var row = [];\n    var body = [row];\n    var rowGaps = [];\n    var hLinesBeforeRow = [];\n\n    // Test for \\hline at the top of the array.\n    hLinesBeforeRow.push(getHLines(parser));\n\n    while (true) {\n        // eslint-disable-line no-constant-condition\n        var cell = parser.parseExpression(false, \"\\\\cr\");\n        cell = {\n            type: \"ordgroup\",\n            mode: parser.mode,\n            body: cell\n        };\n        if (style) {\n            cell = {\n                type: \"styling\",\n                mode: parser.mode,\n                style: style,\n                body: [cell]\n            };\n        }\n        row.push(cell);\n        var next = parser.nextToken.text;\n        if (next === \"&\") {\n            parser.consume();\n        } else if (next === \"\\\\end\") {\n            // Arrays terminate newlines with `\\crcr` which consumes a `\\cr` if\n            // the last line is empty.\n            // NOTE: Currently, `cell` is the last item added into `row`.\n            if (row.length === 1 && cell.type === \"styling\" && cell.body[0].body.length === 0) {\n                body.pop();\n            }\n            if (hLinesBeforeRow.length < body.length + 1) {\n                hLinesBeforeRow.push([]);\n            }\n            break;\n        } else if (next === \"\\\\cr\") {\n            var cr = parser.parseFunction();\n            if (!cr) {\n                throw new src_ParseError(\"Failed to parse function after \" + next);\n            }\n            rowGaps.push(assertNodeType(cr, \"cr\").size);\n\n            // check for \\hline(s) following the row separator\n            hLinesBeforeRow.push(getHLines(parser));\n\n            row = [];\n            body.push(row);\n        } else {\n            throw new src_ParseError(\"Expected & or \\\\\\\\ or \\\\cr or \\\\end\", parser.nextToken);\n        }\n    }\n    parser.gullet.endGroup();\n    return {\n        type: \"array\",\n        mode: parser.mode,\n        addJot: addJot,\n        arraystretch: arraystretch,\n        body: body,\n        cols: cols,\n        rowGaps: rowGaps,\n        hskipBeforeAndAfter: hskipBeforeAndAfter,\n        hLinesBeforeRow: hLinesBeforeRow\n    };\n}\n\n// Decides on a style for cells in an array according to whether the given\n// environment name starts with the letter 'd'.\nfunction dCellStyle(envName) {\n    if (envName.substr(0, 1) === \"d\") {\n        return \"display\";\n    } else {\n        return \"text\";\n    }\n}\n\nvar array_htmlBuilder = function htmlBuilder(group, options) {\n    var r = void 0;\n    var c = void 0;\n    var nr = group.body.length;\n    var hLinesBeforeRow = group.hLinesBeforeRow;\n    var nc = 0;\n    var body = new Array(nr);\n    var hlines = [];\n\n    // Horizontal spacing\n    var pt = 1 / options.fontMetrics().ptPerEm;\n    var arraycolsep = 5 * pt; // \\arraycolsep in article.cls\n\n    // Vertical spacing\n    var baselineskip = 12 * pt; // see size10.clo\n    // Default \\jot from ltmath.dtx\n    // TODO(edemaine): allow overriding \\jot via \\setlength (#687)\n    var jot = 3 * pt;\n    var arrayskip = group.arraystretch * baselineskip;\n    var arstrutHeight = 0.7 * arrayskip; // \\strutbox in ltfsstrc.dtx and\n    var arstrutDepth = 0.3 * arrayskip; // \\@arstrutbox in lttab.dtx\n\n    var totalHeight = 0;\n\n    // Set a position for \\hline(s) at the top of the array, if any.\n    function setHLinePos(hlinesInGap) {\n        for (var i = 0; i < hlinesInGap.length; ++i) {\n            if (i > 0) {\n                totalHeight += 0.25;\n            }\n            hlines.push({ pos: totalHeight, isDashed: hlinesInGap[i] });\n        }\n    }\n    setHLinePos(hLinesBeforeRow[0]);\n\n    for (r = 0; r < group.body.length; ++r) {\n        var inrow = group.body[r];\n        var _height = arstrutHeight; // \\@array adds an \\@arstrut\n        var _depth = arstrutDepth; // to each tow (via the template)\n\n        if (nc < inrow.length) {\n            nc = inrow.length;\n        }\n\n        var outrow = new Array(inrow.length);\n        for (c = 0; c < inrow.length; ++c) {\n            var elt = buildHTML_buildGroup(inrow[c], options);\n            if (_depth < elt.depth) {\n                _depth = elt.depth;\n            }\n            if (_height < elt.height) {\n                _height = elt.height;\n            }\n            outrow[c] = elt;\n        }\n\n        var rowGap = group.rowGaps[r];\n        var gap = 0;\n        if (rowGap) {\n            gap = units_calculateSize(rowGap, options);\n            if (gap > 0) {\n                // \\@argarraycr\n                gap += arstrutDepth;\n                if (_depth < gap) {\n                    _depth = gap; // \\@xargarraycr\n                }\n                gap = 0;\n            }\n        }\n        // In AMS multiline environments such as aligned and gathered, rows\n        // correspond to lines that have additional \\jot added to the\n        // \\baselineskip via \\openup.\n        if (group.addJot) {\n            _depth += jot;\n        }\n\n        outrow.height = _height;\n        outrow.depth = _depth;\n        totalHeight += _height;\n        outrow.pos = totalHeight;\n        totalHeight += _depth + gap; // \\@yargarraycr\n        body[r] = outrow;\n\n        // Set a position for \\hline(s), if any.\n        setHLinePos(hLinesBeforeRow[r + 1]);\n    }\n\n    var offset = totalHeight / 2 + options.fontMetrics().axisHeight;\n    var colDescriptions = group.cols || [];\n    var cols = [];\n    var colSep = void 0;\n    var colDescrNum = void 0;\n    for (c = 0, colDescrNum = 0;\n    // Continue while either there are more columns or more column\n    // descriptions, so trailing separators don't get lost.\n    c < nc || colDescrNum < colDescriptions.length; ++c, ++colDescrNum) {\n\n        var colDescr = colDescriptions[colDescrNum] || {};\n\n        var firstSeparator = true;\n        while (colDescr.type === \"separator\") {\n            // If there is more than one separator in a row, add a space\n            // between them.\n            if (!firstSeparator) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = options.fontMetrics().doubleRuleSep + \"em\";\n                cols.push(colSep);\n            }\n\n            if (colDescr.separator === \"|\") {\n                var _separator = buildCommon.makeSpan([\"vertical-separator\"], [], options);\n                _separator.style.height = totalHeight + \"em\";\n                _separator.style.verticalAlign = -(totalHeight - offset) + \"em\";\n\n                cols.push(_separator);\n            } else if (colDescr.separator === \":\") {\n                var _separator2 = buildCommon.makeSpan([\"vertical-separator\", \"vs-dashed\"], [], options);\n                _separator2.style.height = totalHeight + \"em\";\n                _separator2.style.verticalAlign = -(totalHeight - offset) + \"em\";\n\n                cols.push(_separator2);\n            } else {\n                throw new src_ParseError(\"Invalid separator type: \" + colDescr.separator);\n            }\n\n            colDescrNum++;\n            colDescr = colDescriptions[colDescrNum] || {};\n            firstSeparator = false;\n        }\n\n        if (c >= nc) {\n            continue;\n        }\n\n        var sepwidth = void 0;\n        if (c > 0 || group.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.pregap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n\n        var col = [];\n        for (r = 0; r < nr; ++r) {\n            var row = body[r];\n            var elem = row[c];\n            if (!elem) {\n                continue;\n            }\n            var shift = row.pos - offset;\n            elem.depth = row.depth;\n            elem.height = row.height;\n            col.push({ type: \"elem\", elem: elem, shift: shift });\n        }\n\n        col = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: col\n        }, options);\n        col = buildCommon.makeSpan([\"col-align-\" + (colDescr.align || \"c\")], [col]);\n        cols.push(col);\n\n        if (c < nc - 1 || group.hskipBeforeAndAfter) {\n            sepwidth = utils.deflt(colDescr.postgap, arraycolsep);\n            if (sepwidth !== 0) {\n                colSep = buildCommon.makeSpan([\"arraycolsep\"], []);\n                colSep.style.width = sepwidth + \"em\";\n                cols.push(colSep);\n            }\n        }\n    }\n    body = buildCommon.makeSpan([\"mtable\"], cols);\n\n    // Add \\hline(s), if any.\n    if (hlines.length > 0) {\n        var line = buildCommon.makeLineSpan(\"hline\", options, 0.05);\n        var dashes = buildCommon.makeLineSpan(\"hdashline\", options, 0.05);\n        var vListElems = [{ type: \"elem\", elem: body, shift: 0 }];\n        while (hlines.length > 0) {\n            var hline = hlines.pop();\n            var lineShift = hline.pos - offset;\n            if (hline.isDashed) {\n                vListElems.push({ type: \"elem\", elem: dashes, shift: lineShift });\n            } else {\n                vListElems.push({ type: \"elem\", elem: line, shift: lineShift });\n            }\n        }\n        body = buildCommon.makeVList({\n            positionType: \"individualShift\",\n            children: vListElems\n        }, options);\n    }\n\n    return buildCommon.makeSpan([\"mord\"], [body], options);\n};\n\nvar array_mathmlBuilder = function mathmlBuilder(group, options) {\n    return new mathMLTree.MathNode(\"mtable\", group.body.map(function (row) {\n        return new mathMLTree.MathNode(\"mtr\", row.map(function (cell) {\n            return new mathMLTree.MathNode(\"mtd\", [buildMathML_buildGroup(cell, options)]);\n        }));\n    }));\n};\n\n// Convenience function for aligned and alignedat environments.\nvar array_alignedHandler = function alignedHandler(context, args) {\n    var cols = [];\n    var res = parseArray(context.parser, { cols: cols, addJot: true }, \"display\");\n\n    // Determining number of columns.\n    // 1. If the first argument is given, we use it as a number of columns,\n    //    and makes sure that each row doesn't exceed that number.\n    // 2. Otherwise, just count number of columns = maximum number\n    //    of cells in each row (\"aligned\" mode -- isAligned will be true).\n    //\n    // At the same time, prepend empty group {} at beginning of every second\n    // cell in each row (starting with second cell) so that operators become\n    // binary.  This behavior is implemented in amsmath's \\start@aligned.\n    var numMaths = void 0;\n    var numCols = 0;\n    var emptyGroup = {\n        type: \"ordgroup\",\n        mode: context.mode,\n        body: []\n    };\n    var ordgroup = checkNodeType(args[0], \"ordgroup\");\n    if (ordgroup) {\n        var arg0 = \"\";\n        for (var i = 0; i < ordgroup.body.length; i++) {\n            var textord = assertNodeType(ordgroup.body[i], \"textord\");\n            arg0 += textord.text;\n        }\n        numMaths = Number(arg0);\n        numCols = numMaths * 2;\n    }\n    var isAligned = !numCols;\n    res.body.forEach(function (row) {\n        for (var _i = 1; _i < row.length; _i += 2) {\n            // Modify ordgroup node within styling node\n            var styling = assertNodeType(row[_i], \"styling\");\n            var _ordgroup = assertNodeType(styling.body[0], \"ordgroup\");\n            _ordgroup.body.unshift(emptyGroup);\n        }\n        if (!isAligned) {\n            // Case 1\n            var curMaths = row.length / 2;\n            if (numMaths < curMaths) {\n                throw new src_ParseError(\"Too many math in a row: \" + (\"expected \" + numMaths + \", but got \" + curMaths), row[0]);\n            }\n        } else if (numCols < row.length) {\n            // Case 2\n            numCols = row.length;\n        }\n    });\n\n    // Adjusting alignment.\n    // In aligned mode, we add one \\qquad between columns;\n    // otherwise we add nothing.\n    for (var _i2 = 0; _i2 < numCols; ++_i2) {\n        var _align = \"r\";\n        var _pregap = 0;\n        if (_i2 % 2 === 1) {\n            _align = \"l\";\n        } else if (_i2 > 0 && isAligned) {\n            // \"aligned\" mode.\n            _pregap = 1; // add one \\quad\n        }\n        cols[_i2] = {\n            type: \"align\",\n            align: _align,\n            pregap: _pregap,\n            postgap: 0\n        };\n    }\n    return res;\n};\n\n// Arrays are part of LaTeX, defined in lttab.dtx so its documentation\n// is part of the source2e.pdf file of LaTeX2e source documentation.\n// {darray} is an {array} environment where cells are set in \\displaystyle,\n// as defined in nccmath.sty.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"array\", \"darray\"],\n    props: {\n        numArgs: 1\n    },\n    handler: function handler(context, args) {\n        // Since no types are specified above, the two possibilities are\n        // - The argument is wrapped in {} or [], in which case Parser's\n        //   parseGroup() returns an \"ordgroup\" wrapping some symbol node.\n        // - The argument is a bare symbol node.\n        var symNode = checkSymbolNodeType(args[0]);\n        var colalign = symNode ? [args[0]] : assertNodeType(args[0], \"ordgroup\").body;\n        var cols = colalign.map(function (nde) {\n            var node = assertSymbolNodeType(nde);\n            var ca = node.text;\n            if (\"lcr\".indexOf(ca) !== -1) {\n                return {\n                    type: \"align\",\n                    align: ca\n                };\n            } else if (ca === \"|\") {\n                return {\n                    type: \"separator\",\n                    separator: \"|\"\n                };\n            } else if (ca === \":\") {\n                return {\n                    type: \"separator\",\n                    separator: \":\"\n                };\n            }\n            throw new src_ParseError(\"Unknown column alignment: \" + ca, nde);\n        });\n        var res = {\n            cols: cols,\n            hskipBeforeAndAfter: true // \\@preamble in lttab.dtx\n        };\n        return parseArray(context.parser, res, dCellStyle(context.envName));\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// The matrix environments of amsmath builds on the array environment\n// of LaTeX, which is discussed above.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"matrix\", \"pmatrix\", \"bmatrix\", \"Bmatrix\", \"vmatrix\", \"Vmatrix\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var delimiters = {\n            \"matrix\": null,\n            \"pmatrix\": [\"(\", \")\"],\n            \"bmatrix\": [\"[\", \"]\"],\n            \"Bmatrix\": [\"\\\\{\", \"\\\\}\"],\n            \"vmatrix\": [\"|\", \"|\"],\n            \"Vmatrix\": [\"\\\\Vert\", \"\\\\Vert\"]\n        }[context.envName];\n        // \\hskip -\\arraycolsep in amsmath\n        var payload = { hskipBeforeAndAfter: false };\n        var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n        return delimiters ? {\n            type: \"leftright\",\n            mode: context.mode,\n            body: [res],\n            left: delimiters[0],\n            right: delimiters[1]\n        } : res;\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// A cases environment (in amsmath.sty) is almost equivalent to\n// \\def\\arraystretch{1.2}%\n// \\left\\{\\begin{array}{@{}l@{\\quad}l@{}} … \\end{array}\\right.\n// {dcases} is a {cases} environment where cells are set in \\displaystyle,\n// as defined in mathtools.sty.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"cases\", \"dcases\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var payload = {\n            arraystretch: 1.2,\n            cols: [{\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                // TODO(kevinb) get the current style.\n                // For now we use the metrics for TEXT style which is what we were\n                // doing before.  Before attempting to get the current style we\n                // should look at TeX's behavior especially for \\over and matrices.\n                postgap: 1.0 /* 1em quad */\n            }, {\n                type: \"align\",\n                align: \"l\",\n                pregap: 0,\n                postgap: 0\n            }]\n        };\n        var res = parseArray(context.parser, payload, dCellStyle(context.envName));\n        return {\n            type: \"leftright\",\n            mode: context.mode,\n            body: [res],\n            left: \"\\\\{\",\n            right: \".\"\n        };\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// An aligned environment is like the align* environment\n// except it operates within math mode.\n// Note that we assume \\nomallineskiplimit to be zero,\n// so that \\strut@ is the same as \\strut.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"aligned\"],\n    props: {\n        numArgs: 0\n    },\n    handler: array_alignedHandler,\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// A gathered environment is like an array environment with one centered\n// column, but where rows are considered lines so get \\jot line spacing\n// and contents are set in \\displaystyle.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"gathered\"],\n    props: {\n        numArgs: 0\n    },\n    handler: function handler(context) {\n        var res = {\n            cols: [{\n                type: \"align\",\n                align: \"c\"\n            }],\n            addJot: true\n        };\n        return parseArray(context.parser, res, \"display\");\n    },\n\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// alignat environment is like an align environment, but one must explicitly\n// specify maximum number of columns in each row, and can adjust spacing between\n// each columns.\ndefineEnvironment({\n    type: \"array\",\n    names: [\"alignedat\"],\n    // One for numbered and for unnumbered;\n    // but, KaTeX doesn't supports math numbering yet,\n    // they make no difference for now.\n    props: {\n        numArgs: 1\n    },\n    handler: array_alignedHandler,\n    htmlBuilder: array_htmlBuilder,\n    mathmlBuilder: array_mathmlBuilder\n});\n\n// Catch \\hline outside array environment\ndefineFunction({\n    type: \"text\", // Doesn't matter what this is.\n    names: [\"\\\\hline\", \"\\\\hdashline\"],\n    props: {\n        numArgs: 0,\n        allowedInText: true,\n        allowedInMath: true\n    },\n    handler: function handler(context, args) {\n        throw new src_ParseError(context.funcName + \" valid only within array environment\");\n    }\n});\n// CONCATENATED MODULE: ./src/environments.js\n\n\nvar environments = _environments;\n\n/* harmony default export */ var src_environments = (environments);\n\n// All environment definitions should be imported below\n\n// CONCATENATED MODULE: ./src/Lexer.js\n\n\n/**\n * The Lexer class handles tokenizing the input in various ways. Since our\n * parser expects us to be able to backtrack, the lexer allows lexing from any\n * given starting point.\n *\n * Its main exposed function is the `lex` function, which takes a position to\n * lex from and a type of token to lex. It defers to the appropriate `_innerLex`\n * function.\n *\n * The various `_innerLex` functions perform the actual lexing of different\n * kinds.\n */\n\n\n\n\n\n/* The following tokenRegex\n * - matches typical whitespace (but not NBSP etc.) using its first group\n * - matches comments (must have trailing newlines)\n * - does not match any control character \\x00-\\x1f except whitespace\n * - does not match a bare backslash\n * - matches any ASCII character except those just mentioned\n * - does not match the BMP private use area \\uE000-\\uF8FF\n * - does not match bare surrogate code units\n * - matches any BMP character except for those just described\n * - matches any valid Unicode surrogate pair\n * - matches a backslash followed by one or more letters\n * - matches a backslash followed by any BMP character, including newline\n * Just because the Lexer matches something doesn't mean it's valid input:\n * If there is no matching function or symbol definition, the Parser will\n * still reject the input.\n */\nvar spaceRegexString = \"[ \\r\\n\\t]\";\nvar commentRegexString = \"%[^\\n]*(?:\\n|$)\";\nvar controlWordRegexString = \"\\\\\\\\[a-zA-Z@]+\";\nvar controlSymbolRegexString = \"\\\\\\\\[^\\uD800-\\uDFFF]\";\nvar controlWordWhitespaceRegexString = \"\" + controlWordRegexString + spaceRegexString + \"*\";\nvar controlWordWhitespaceRegex = new RegExp(\"^(\" + controlWordRegexString + \")\" + spaceRegexString + \"*$\");\nvar combiningDiacriticalMarkString = \"[\\u0300-\\u036F]\";\nvar combiningDiacriticalMarksEndRegex = new RegExp(combiningDiacriticalMarkString + \"+$\");\nvar urlFunctionRegexString = \"(\\\\\\\\href|\\\\\\\\url)\" + (\"(?:\" + spaceRegexString + \"*\\\\{((?:[^{}\\\\\\\\]|\\\\\\\\[^]|{[^{}]*})*)\\\\}\") + (\"|\" + spaceRegexString + \"+([^{}])\") + (\"|\" + spaceRegexString + \"*([^{}a-zA-Z]))\");\nvar tokenRegexString = \"(\" + spaceRegexString + \"+)|\" + ( // whitespace\n\"(\" + commentRegexString) + // comments\n\"|[!-\\\\[\\\\]-\\u2027\\u202A-\\uD7FF\\uF900-\\uFFFF]\" + ( // single codepoint\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]\" + ( // surrogate pair\ncombiningDiacriticalMarkString + \"*\") + // ...plus accents\n\"|\\\\\\\\verb\\\\*([^]).*?\\\\3\" + // \\verb*\n\"|\\\\\\\\verb([^*a-zA-Z]).*?\\\\4\" + ( // \\verb unstarred\n\"|\" + urlFunctionRegexString) + ( // URL arguments\n\"|\" + controlWordWhitespaceRegexString) + ( // \\macroName + spaces\n\"|\" + controlSymbolRegexString + \")\"); // \\\\, \\', etc.\n\n// These regexs are for matching results from tokenRegex,\n// so they do have ^ markers.\nvar controlWordRegex = new RegExp(\"^\" + controlWordRegexString);\nvar urlFunctionRegex = new RegExp(\"^\" + urlFunctionRegexString);\n\n/** Main Lexer class */\n\nvar Lexer_Lexer = function () {\n    function Lexer(input, settings) {\n        classCallCheck_default()(this, Lexer);\n\n        // Separate accents from characters\n        this.input = input;\n        this.settings = settings;\n        this.tokenRegex = new RegExp(tokenRegexString, 'g');\n    }\n\n    /**\n     * This function lexes a single token.\n     */\n\n\n    Lexer.prototype.lex = function lex() {\n        var input = this.input;\n        var pos = this.tokenRegex.lastIndex;\n        if (pos === input.length) {\n            return new Token_Token(\"EOF\", new src_SourceLocation(this, pos, pos));\n        }\n        var match = this.tokenRegex.exec(input);\n        if (match === null || match.index !== pos) {\n            throw new src_ParseError(\"Unexpected character: '\" + input[pos] + \"'\", new Token_Token(input[pos], new src_SourceLocation(this, pos, pos + 1)));\n        }\n        var text = match[2] || \" \";\n\n        // Trim any trailing whitespace from control word match\n        var controlMatch = text.match(controlWordWhitespaceRegex);\n        if (controlMatch) {\n            text = controlMatch[1] + text.slice(controlMatch[0].length);\n        }\n\n        if (text[0] === \"%\") {\n            if (text[text.length - 1] !== \"\\n\") {\n                this.settings.reportNonstrict(\"commentAtEnd\", \"% comment has no terminating newline; LaTeX would \" + \"fail because of commenting the end of math mode (e.g. $)\");\n            }\n            return this.lex();\n        } else {\n            return new Token_Token(text, new src_SourceLocation(this, pos, this.tokenRegex.lastIndex));\n        }\n    };\n\n    return Lexer;\n}();\n\n/* harmony default export */ var src_Lexer = (Lexer_Lexer);\n// CONCATENATED MODULE: ./src/Namespace.js\n\n\n\n/**\n * A `Namespace` refers to a space of nameable things like macros or lengths,\n * which can be `set` either globally or local to a nested group, using an\n * undo stack similar to how TeX implements this functionality.\n * Performance-wise, `get` and local `set` take constant time, while global\n * `set` takes time proportional to the depth of group nesting.\n */\n\n\n\nvar Namespace_Namespace = function () {\n\n    /**\n     * Both arguments are optional.  The first argument is an object of\n     * built-in mappings which never change.  The second argument is an object\n     * of initial (global-level) mappings, which will constantly change\n     * according to any global/top-level `set`s done.\n     */\n    function Namespace() {\n        var builtins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        var globalMacros = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n        classCallCheck_default()(this, Namespace);\n\n        this.current = globalMacros;\n        this.builtins = builtins;\n        this.undefStack = [];\n    }\n\n    /**\n     * Start a new nested group, affecting future local `set`s.\n     */\n\n\n    Namespace.prototype.beginGroup = function beginGroup() {\n        this.undefStack.push({});\n    };\n\n    /**\n     * End current nested group, restoring values before the group began.\n     */\n\n\n    Namespace.prototype.endGroup = function endGroup() {\n        if (this.undefStack.length === 0) {\n            throw new src_ParseError(\"Unbalanced namespace destruction: attempt \" + \"to pop global namespace; please report this as a bug\");\n        }\n        var undefs = this.undefStack.pop();\n        for (var undef in undefs) {\n            if (undefs.hasOwnProperty(undef)) {\n                if (undefs[undef] === undefined) {\n                    delete this.current[undef];\n                } else {\n                    this.current[undef] = undefs[undef];\n                }\n            }\n        }\n    };\n\n    /**\n     * Detect whether `name` has a definition.  Equivalent to\n     * `get(name) != null`.\n     */\n\n\n    Namespace.prototype.has = function has(name) {\n        return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);\n    };\n\n    /**\n     * Get the current value of a name, or `undefined` if there is no value.\n     *\n     * Note: Do not use `if (namespace.get(...))` to detect whether a macro\n     * is defined, as the definition may be the empty string which evaluates\n     * to `false` in JavaScript.  Use `if (namespace.get(...) != null)` or\n     * `if (namespace.has(...))`.\n     */\n\n\n    Namespace.prototype.get = function get(name) {\n        if (this.current.hasOwnProperty(name)) {\n            return this.current[name];\n        } else {\n            return this.builtins[name];\n        }\n    };\n\n    /**\n     * Set the current value of a name, and optionally set it globally too.\n     * Local set() sets the current value and (when appropriate) adds an undo\n     * operation to the undo stack.  Global set() may change the undo\n     * operation at every level, so takes time linear in their number.\n     */\n\n\n    Namespace.prototype.set = function set(name, value) {\n        var global = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (global) {\n            // Global set is equivalent to setting in all groups.  Simulate this\n            // by destroying any undos currently scheduled for this name,\n            // and adding an undo with the *new* value (in case it later gets\n            // locally reset within this environment).\n            for (var i = 0; i < this.undefStack.length; i++) {\n                delete this.undefStack[i][name];\n            }\n            if (this.undefStack.length > 0) {\n                this.undefStack[this.undefStack.length - 1][name] = value;\n            }\n        } else {\n            // Undo this set at end of this group (possibly to `undefined`),\n            // unless an undo is already in place, in which case that older\n            // value is the correct one.\n            var top = this.undefStack[this.undefStack.length - 1];\n            if (top && !top.hasOwnProperty(name)) {\n                top[name] = this.current[name];\n            }\n        }\n        this.current[name] = value;\n    };\n\n    return Namespace;\n}();\n\n/* harmony default export */ var src_Namespace = (Namespace_Namespace);\n// CONCATENATED MODULE: ./src/macros.js\n\n/**\n * Predefined macros for KaTeX.\n * This can be used to define some commands in terms of others.\n */\n\n\n\n\n\n\n\n/**\n * Provides context to macros defined by functions. Implemented by\n * MacroExpander.\n */\n\n\n/** Macro tokens (in reverse order). */\n\n\nvar builtinMacros = {};\n/* harmony default export */ var macros = (builtinMacros);\n\n// This function might one day accept an additional argument and do more things.\nfunction defineMacro(name, body) {\n    builtinMacros[name] = body;\n}\n\n//////////////////////////////////////////////////////////////////////\n// macro tools\n\n// LaTeX's \\@firstoftwo{#1}{#2} expands to #1, skipping #2\n// TeX source: \\long\\def\\@firstoftwo#1#2{#1}\ndefineMacro(\"\\\\@firstoftwo\", function (context) {\n    var args = context.consumeArgs(2);\n    return { tokens: args[0], numArgs: 0 };\n});\n\n// LaTeX's \\@secondoftwo{#1}{#2} expands to #2, skipping #1\n// TeX source: \\long\\def\\@secondoftwo#1#2{#2}\ndefineMacro(\"\\\\@secondoftwo\", function (context) {\n    var args = context.consumeArgs(2);\n    return { tokens: args[1], numArgs: 0 };\n});\n\n// LaTeX's \\@ifnextchar{#1}{#2}{#3} looks ahead to the next (unexpanded)\n// symbol.  If it matches #1, then the macro expands to #2; otherwise, #3.\n// Note, however, that it does not consume the next symbol in either case.\ndefineMacro(\"\\\\@ifnextchar\", function (context) {\n    var args = context.consumeArgs(3); // symbol, if, else\n    var nextToken = context.future();\n    if (args[0].length === 1 && args[0][0].text === nextToken.text) {\n        return { tokens: args[1], numArgs: 0 };\n    } else {\n        return { tokens: args[2], numArgs: 0 };\n    }\n});\n\n// LaTeX's \\@ifstar{#1}{#2} looks ahead to the next (unexpanded) symbol.\n// If it is `*`, then it consumes the symbol, and the macro expands to #1;\n// otherwise, the macro expands to #2 (without consuming the symbol).\n// TeX source: \\def\\@ifstar#1{\\@ifnextchar *{\\@firstoftwo{#1}}}\ndefineMacro(\"\\\\@ifstar\", \"\\\\@ifnextchar *{\\\\@firstoftwo{#1}}\");\n\n// LaTeX's \\TextOrMath{#1}{#2} expands to #1 in text mode, #2 in math mode\ndefineMacro(\"\\\\TextOrMath\", function (context) {\n    var args = context.consumeArgs(2);\n    if (context.mode === 'text') {\n        return { tokens: args[0], numArgs: 0 };\n    } else {\n        return { tokens: args[1], numArgs: 0 };\n    }\n});\n\n// Lookup table for parsing numbers in base 8 through 16\nvar digitToNumber = {\n    \"0\": 0, \"1\": 1, \"2\": 2, \"3\": 3, \"4\": 4, \"5\": 5, \"6\": 6, \"7\": 7, \"8\": 8,\n    \"9\": 9, \"a\": 10, \"A\": 10, \"b\": 11, \"B\": 11, \"c\": 12, \"C\": 12,\n    \"d\": 13, \"D\": 13, \"e\": 14, \"E\": 14, \"f\": 15, \"F\": 15\n};\n\n// TeX \\char makes a literal character (catcode 12) using the following forms:\n// (see The TeXBook, p. 43)\n//   \\char123  -- decimal\n//   \\char'123 -- octal\n//   \\char\"123 -- hex\n//   \\char`x   -- character that can be written (i.e. isn't active)\n//   \\char`\\x  -- character that cannot be written (e.g. %)\n// These all refer to characters from the font, so we turn them into special\n// calls to a function \\@char dealt with in the Parser.\ndefineMacro(\"\\\\char\", function (context) {\n    var token = context.popToken();\n    var base = void 0;\n    var number = '';\n    if (token.text === \"'\") {\n        base = 8;\n        token = context.popToken();\n    } else if (token.text === '\"') {\n        base = 16;\n        token = context.popToken();\n    } else if (token.text === \"`\") {\n        token = context.popToken();\n        if (token.text[0] === \"\\\\\") {\n            number = token.text.charCodeAt(1);\n        } else if (token.text === \"EOF\") {\n            throw new src_ParseError(\"\\\\char` missing argument\");\n        } else {\n            number = token.text.charCodeAt(0);\n        }\n    } else {\n        base = 10;\n    }\n    if (base) {\n        // Parse a number in the given base, starting with first `token`.\n        number = digitToNumber[token.text];\n        if (number == null || number >= base) {\n            throw new src_ParseError(\"Invalid base-\" + base + \" digit \" + token.text);\n        }\n        var digit = void 0;\n        while ((digit = digitToNumber[context.future().text]) != null && digit < base) {\n            number *= base;\n            number += digit;\n            context.popToken();\n        }\n    }\n    return \"\\\\@char{\" + number + \"}\";\n});\n\n// Basic support for macro definitions:\n//     \\def\\macro{expansion}\n//     \\def\\macro#1{expansion}\n//     \\def\\macro#1#2{expansion}\n//     \\def\\macro#1#2#3#4#5#6#7#8#9{expansion}\n// Also the \\gdef and \\global\\def equivalents\nvar macros_def = function def(context, global) {\n    var arg = context.consumeArgs(1)[0];\n    if (arg.length !== 1) {\n        throw new src_ParseError(\"\\\\gdef's first argument must be a macro name\");\n    }\n    var name = arg[0].text;\n    // Count argument specifiers, and check they are in the order #1 #2 ...\n    var numArgs = 0;\n    arg = context.consumeArgs(1)[0];\n    while (arg.length === 1 && arg[0].text === \"#\") {\n        arg = context.consumeArgs(1)[0];\n        if (arg.length !== 1) {\n            throw new src_ParseError(\"Invalid argument number length \\\"\" + arg.length + \"\\\"\");\n        }\n        if (!/^[1-9]$/.test(arg[0].text)) {\n            throw new src_ParseError(\"Invalid argument number \\\"\" + arg[0].text + \"\\\"\");\n        }\n        numArgs++;\n        if (parseInt(arg[0].text) !== numArgs) {\n            throw new src_ParseError(\"Argument number \\\"\" + arg[0].text + \"\\\" out of order\");\n        }\n        arg = context.consumeArgs(1)[0];\n    }\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n        tokens: arg,\n        numArgs: numArgs\n    }, global);\n    return '';\n};\ndefineMacro(\"\\\\gdef\", function (context) {\n    return macros_def(context, true);\n});\ndefineMacro(\"\\\\def\", function (context) {\n    return macros_def(context, false);\n});\ndefineMacro(\"\\\\global\", function (context) {\n    var next = context.consumeArgs(1)[0];\n    if (next.length !== 1) {\n        throw new src_ParseError(\"Invalid command after \\\\global\");\n    }\n    var command = next[0].text;\n    // TODO: Should expand command\n    if (command === \"\\\\def\") {\n        // \\global\\def is equivalent to \\gdef\n        return macros_def(context, true);\n    } else {\n        throw new src_ParseError(\"Invalid command '\" + command + \"' after \\\\global\");\n    }\n});\n\n// \\newcommand{\\macro}[args]{definition}\n// \\renewcommand{\\macro}[args]{definition}\n// TODO: Optional arguments: \\newcommand{\\macro}[args][default]{definition}\nvar macros_newcommand = function newcommand(context, existsOK, nonexistsOK) {\n    var arg = context.consumeArgs(1)[0];\n    if (arg.length !== 1) {\n        throw new src_ParseError(\"\\\\newcommand's first argument must be a macro name\");\n    }\n    var name = arg[0].text;\n\n    var exists = context.isDefined(name);\n    if (exists && !existsOK) {\n        throw new src_ParseError(\"\\\\newcommand{\" + name + \"} attempting to redefine \" + (name + \"; use \\\\renewcommand\"));\n    }\n    if (!exists && !nonexistsOK) {\n        throw new src_ParseError(\"\\\\renewcommand{\" + name + \"} when command \" + name + \" \" + \"does not yet exist; use \\\\newcommand\");\n    }\n\n    var numArgs = 0;\n    arg = context.consumeArgs(1)[0];\n    if (arg.length === 1 && arg[0].text === \"[\") {\n        var argText = '';\n        var token = context.expandNextToken();\n        while (token.text !== \"]\" && token.text !== \"EOF\") {\n            // TODO: Should properly expand arg, e.g., ignore {}s\n            argText += token.text;\n            token = context.expandNextToken();\n        }\n        if (!argText.match(/^\\s*[0-9]+\\s*$/)) {\n            throw new src_ParseError(\"Invalid number of arguments: \" + argText);\n        }\n        numArgs = parseInt(argText);\n        arg = context.consumeArgs(1)[0];\n    }\n\n    // Final arg is the expansion of the macro\n    context.macros.set(name, {\n        tokens: arg,\n        numArgs: numArgs\n    });\n    return '';\n};\ndefineMacro(\"\\\\newcommand\", function (context) {\n    return macros_newcommand(context, false, true);\n});\ndefineMacro(\"\\\\renewcommand\", function (context) {\n    return macros_newcommand(context, true, false);\n});\ndefineMacro(\"\\\\providecommand\", function (context) {\n    return macros_newcommand(context, true, true);\n});\n\n//////////////////////////////////////////////////////////////////////\n// Grouping\n// \\let\\bgroup={ \\let\\egroup=}\ndefineMacro(\"\\\\bgroup\", \"{\");\ndefineMacro(\"\\\\egroup\", \"}\");\ndefineMacro(\"\\\\begingroup\", \"{\");\ndefineMacro(\"\\\\endgroup\", \"}\");\n\n// Symbols from latex.ltx:\n// \\def\\lq{`}\n// \\def\\rq{'}\n// \\def \\aa {\\r a}\n// \\def \\AA {\\r A}\ndefineMacro(\"\\\\lq\", \"`\");\ndefineMacro(\"\\\\rq\", \"'\");\ndefineMacro(\"\\\\aa\", \"\\\\r a\");\ndefineMacro(\"\\\\AA\", \"\\\\r A\");\n\n// Copyright (C) and registered (R) symbols. Use raw symbol in MathML.\n// \\DeclareTextCommandDefault{\\textcopyright}{\\textcircled{c}}\n// \\DeclareTextCommandDefault{\\textregistered}{\\textcircled{%\n//      \\check@mathfonts\\fontsize\\sf@size\\z@\\math@fontsfalse\\selectfont R}}\n// \\DeclareRobustCommand{\\copyright}{%\n//    \\ifmmode{\\nfss@text{\\textcopyright}}\\else\\textcopyright\\fi}\ndefineMacro(\"\\\\textcopyright\", \"\\\\html@mathml{\\\\textcircled{c}}{\\\\char`©}\");\ndefineMacro(\"\\\\copyright\", \"\\\\TextOrMath{\\\\textcopyright}{\\\\text{\\\\textcopyright}}\");\ndefineMacro(\"\\\\textregistered\", \"\\\\html@mathml{\\\\textcircled{\\\\scriptsize R}}{\\\\char`®}\");\n\n// Unicode double-struck letters\ndefineMacro(\"\\u2102\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\u210D\", \"\\\\mathbb{H}\");\ndefineMacro(\"\\u2115\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\u2119\", \"\\\\mathbb{P}\");\ndefineMacro(\"\\u211A\", \"\\\\mathbb{Q}\");\ndefineMacro(\"\\u211D\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\u2124\", \"\\\\mathbb{Z}\");\n\ndefineMacro(\"\\u210E\", \"\\\\mathit{h}\"); // Planck constant\n\n// Characters omitted from Unicode range 1D400–1D7FF\ndefineMacro(\"\\u212C\", \"\\\\mathscr{B}\"); // script\ndefineMacro(\"\\u2130\", \"\\\\mathscr{E}\");\ndefineMacro(\"\\u2131\", \"\\\\mathscr{F}\");\ndefineMacro(\"\\u210B\", \"\\\\mathscr{H}\");\ndefineMacro(\"\\u2110\", \"\\\\mathscr{I}\");\ndefineMacro(\"\\u2112\", \"\\\\mathscr{L}\");\ndefineMacro(\"\\u2133\", \"\\\\mathscr{M}\");\ndefineMacro(\"\\u211B\", \"\\\\mathscr{R}\");\ndefineMacro(\"\\u212D\", \"\\\\mathfrak{C}\"); // Fraktur\ndefineMacro(\"\\u210C\", \"\\\\mathfrak{H}\");\ndefineMacro(\"\\u2128\", \"\\\\mathfrak{Z}\");\n\n// Unicode middle dot\n// The KaTeX fonts do not contain U+00B7. Instead, \\cdotp displays\n// the dot at U+22C5 and gives it punct spacing.\ndefineMacro(\"\\xB7\", \"\\\\cdotp\");\n\n// \\llap and \\rlap render their contents in text mode\ndefineMacro(\"\\\\llap\", \"\\\\mathllap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\rlap\", \"\\\\mathrlap{\\\\textrm{#1}}\");\ndefineMacro(\"\\\\clap\", \"\\\\mathclap{\\\\textrm{#1}}\");\n\n// \\not is defined by base/fontmath.ltx via\n// \\DeclareMathSymbol{\\not}{\\mathrel}{symbols}{\"36}\n// It's thus treated like a \\mathrel, but defined by a symbol that has zero\n// width but extends to the right.  We use \\rlap to get that spacing.\ndefineMacro(\"\\\\not\", '\\\\mathrel{\\\\mathrlap\\\\@not}');\n\n// Negated symbols from base/fontmath.ltx:\n// \\def\\neq{\\not=} \\let\\ne=\\neq\n// \\DeclareRobustCommand\n//   \\notin{\\mathrel{\\m@th\\mathpalette\\c@ncel\\in}}\n// \\def\\c@ncel#1#2{\\m@th\\ooalign{$\\hfil#1\\mkern1mu/\\hfil$\\crcr$#1#2$}}\ndefineMacro(\"\\\\neq\", \"\\\\html@mathml{\\\\mathrel{\\\\not=}}{\\\\mathrel{\\\\char`≠}}\");\ndefineMacro(\"\\\\ne\", \"\\\\neq\");\ndefineMacro(\"\\u2260\", \"\\\\neq\");\ndefineMacro(\"\\\\notin\", \"\\\\html@mathml{\\\\mathrel{{\\\\in}\\\\mathllap{/\\\\mskip1mu}}}\" + \"{\\\\mathrel{\\\\char`∉}}\");\ndefineMacro(\"\\u2209\", \"\\\\notin\");\n\n// Unicode stacked relations\ndefineMacro(\"\\u2258\", \"\\\\html@mathml{\" + \"\\\\mathrel{=\\\\kern{-1em}\\\\raisebox{0.4em}{$\\\\scriptsize\\\\frown$}}\" + \"}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u2259\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\wedge}{=}}{\\\\mathrel{\\\\char`\\u2258}}\");\ndefineMacro(\"\\u225A\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\vee}{=}}{\\\\mathrel{\\\\char`\\u225A}}\");\ndefineMacro(\"\\u225B\", \"\\\\html@mathml{\\\\stackrel{\\\\scriptsize\\\\star}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225B}}\");\ndefineMacro(\"\\u225D\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{def}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225D}}\");\ndefineMacro(\"\\u225E\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny\\\\mathrm{m}}{=}}\" + \"{\\\\mathrel{\\\\char`\\u225E}}\");\ndefineMacro(\"\\u225F\", \"\\\\html@mathml{\\\\stackrel{\\\\tiny?}{=}}{\\\\mathrel{\\\\char`\\u225F}}\");\n\n// Misc Unicode\ndefineMacro(\"\\u27C2\", \"\\\\perp\");\ndefineMacro(\"\\u203C\", \"\\\\mathclose{!\\\\mkern-0.8mu!}\");\ndefineMacro(\"\\u220C\", \"\\\\notni\");\ndefineMacro(\"\\u231C\", \"\\\\ulcorner\");\ndefineMacro(\"\\u231D\", \"\\\\urcorner\");\ndefineMacro(\"\\u231E\", \"\\\\llcorner\");\ndefineMacro(\"\\u231F\", \"\\\\lrcorner\");\ndefineMacro(\"\\xA9\", \"\\\\copyright\");\ndefineMacro(\"\\xAE\", \"\\\\textregistered\");\ndefineMacro(\"\\uFE0F\", \"\\\\textregistered\");\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX_2ε\n\n// \\vdots{\\vbox{\\baselineskip4\\p@  \\lineskiplimit\\z@\n// \\kern6\\p@\\hbox{.}\\hbox{.}\\hbox{.}}}\n// We'll call \\varvdots, which gets a glyph from symbols.js.\n// The zero-width rule gets us an equivalent to the vertical 6pt kern.\ndefineMacro(\"\\\\vdots\", \"\\\\mathord{\\\\varvdots\\\\rule{0pt}{15pt}}\");\ndefineMacro(\"\\u22EE\", \"\\\\vdots\");\n\n//////////////////////////////////////////////////////////////////////\n// amsmath.sty\n// http://mirrors.concertpass.com/tex-archive/macros/latex/required/amsmath/amsmath.pdf\n\n// Italic Greek capital letters.  AMS defines these with \\DeclareMathSymbol,\n// but they are equivalent to \\mathit{\\Letter}.\ndefineMacro(\"\\\\varGamma\", \"\\\\mathit{\\\\Gamma}\");\ndefineMacro(\"\\\\varDelta\", \"\\\\mathit{\\\\Delta}\");\ndefineMacro(\"\\\\varTheta\", \"\\\\mathit{\\\\Theta}\");\ndefineMacro(\"\\\\varLambda\", \"\\\\mathit{\\\\Lambda}\");\ndefineMacro(\"\\\\varXi\", \"\\\\mathit{\\\\Xi}\");\ndefineMacro(\"\\\\varPi\", \"\\\\mathit{\\\\Pi}\");\ndefineMacro(\"\\\\varSigma\", \"\\\\mathit{\\\\Sigma}\");\ndefineMacro(\"\\\\varUpsilon\", \"\\\\mathit{\\\\Upsilon}\");\ndefineMacro(\"\\\\varPhi\", \"\\\\mathit{\\\\Phi}\");\ndefineMacro(\"\\\\varPsi\", \"\\\\mathit{\\\\Psi}\");\ndefineMacro(\"\\\\varOmega\", \"\\\\mathit{\\\\Omega}\");\n\n// \\renewcommand{\\colon}{\\nobreak\\mskip2mu\\mathpunct{}\\nonscript\n// \\mkern-\\thinmuskip{:}\\mskip6muplus1mu\\relax}\ndefineMacro(\"\\\\colon\", \"\\\\nobreak\\\\mskip2mu\\\\mathpunct{}\" + \"\\\\mathchoice{\\\\mkern-3mu}{\\\\mkern-3mu}{}{}{:}\\\\mskip6mu\");\n\n// \\newcommand{\\boxed}[1]{\\fbox{\\m@th$\\displaystyle#1$}}\ndefineMacro(\"\\\\boxed\", \"\\\\fbox{$\\\\displaystyle{#1}$}\");\n\n// \\def\\iff{\\DOTSB\\;\\Longleftrightarrow\\;}\n// \\def\\implies{\\DOTSB\\;\\Longrightarrow\\;}\n// \\def\\impliedby{\\DOTSB\\;\\Longleftarrow\\;}\ndefineMacro(\"\\\\iff\", \"\\\\DOTSB\\\\;\\\\Longleftrightarrow\\\\;\");\ndefineMacro(\"\\\\implies\", \"\\\\DOTSB\\\\;\\\\Longrightarrow\\\\;\");\ndefineMacro(\"\\\\impliedby\", \"\\\\DOTSB\\\\;\\\\Longleftarrow\\\\;\");\n\n// AMSMath's automatic \\dots, based on \\mdots@@ macro.\nvar dotsByToken = {\n    ',': '\\\\dotsc',\n    '\\\\not': '\\\\dotsb',\n    // \\keybin@ checks for the following:\n    '+': '\\\\dotsb',\n    '=': '\\\\dotsb',\n    '<': '\\\\dotsb',\n    '>': '\\\\dotsb',\n    '-': '\\\\dotsb',\n    '*': '\\\\dotsb',\n    ':': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSB:\n    '\\\\DOTSB': '\\\\dotsb',\n    '\\\\coprod': '\\\\dotsb',\n    '\\\\bigvee': '\\\\dotsb',\n    '\\\\bigwedge': '\\\\dotsb',\n    '\\\\biguplus': '\\\\dotsb',\n    '\\\\bigcap': '\\\\dotsb',\n    '\\\\bigcup': '\\\\dotsb',\n    '\\\\prod': '\\\\dotsb',\n    '\\\\sum': '\\\\dotsb',\n    '\\\\bigotimes': '\\\\dotsb',\n    '\\\\bigoplus': '\\\\dotsb',\n    '\\\\bigodot': '\\\\dotsb',\n    '\\\\bigsqcup': '\\\\dotsb',\n    '\\\\And': '\\\\dotsb',\n    '\\\\longrightarrow': '\\\\dotsb',\n    '\\\\Longrightarrow': '\\\\dotsb',\n    '\\\\longleftarrow': '\\\\dotsb',\n    '\\\\Longleftarrow': '\\\\dotsb',\n    '\\\\longleftrightarrow': '\\\\dotsb',\n    '\\\\Longleftrightarrow': '\\\\dotsb',\n    '\\\\mapsto': '\\\\dotsb',\n    '\\\\longmapsto': '\\\\dotsb',\n    '\\\\hookrightarrow': '\\\\dotsb',\n    '\\\\doteq': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathbin:\n    '\\\\mathbin': '\\\\dotsb',\n    // Symbols whose definition starts with \\mathrel:\n    '\\\\mathrel': '\\\\dotsb',\n    '\\\\relbar': '\\\\dotsb',\n    '\\\\Relbar': '\\\\dotsb',\n    '\\\\xrightarrow': '\\\\dotsb',\n    '\\\\xleftarrow': '\\\\dotsb',\n    // Symbols whose definition starts with \\DOTSI:\n    '\\\\DOTSI': '\\\\dotsi',\n    '\\\\int': '\\\\dotsi',\n    '\\\\oint': '\\\\dotsi',\n    '\\\\iint': '\\\\dotsi',\n    '\\\\iiint': '\\\\dotsi',\n    '\\\\iiiint': '\\\\dotsi',\n    '\\\\idotsint': '\\\\dotsi',\n    // Symbols whose definition starts with \\DOTSX:\n    '\\\\DOTSX': '\\\\dotsx'\n};\n\ndefineMacro(\"\\\\dots\", function (context) {\n    // TODO: If used in text mode, should expand to \\textellipsis.\n    // However, in KaTeX, \\textellipsis and \\ldots behave the same\n    // (in text mode), and it's unlikely we'd see any of the math commands\n    // that affect the behavior of \\dots when in text mode.  So fine for now\n    // (until we support \\ifmmode ... \\else ... \\fi).\n    var thedots = '\\\\dotso';\n    var next = context.expandAfterFuture().text;\n    if (next in dotsByToken) {\n        thedots = dotsByToken[next];\n    } else if (next.substr(0, 4) === '\\\\not') {\n        thedots = '\\\\dotsb';\n    } else if (next in src_symbols.math) {\n        if (utils.contains(['bin', 'rel'], src_symbols.math[next].group)) {\n            thedots = '\\\\dotsb';\n        }\n    }\n    return thedots;\n});\n\nvar spaceAfterDots = {\n    // \\rightdelim@ checks for the following:\n    ')': true,\n    ']': true,\n    '\\\\rbrack': true,\n    '\\\\}': true,\n    '\\\\rbrace': true,\n    '\\\\rangle': true,\n    '\\\\rceil': true,\n    '\\\\rfloor': true,\n    '\\\\rgroup': true,\n    '\\\\rmoustache': true,\n    '\\\\right': true,\n    '\\\\bigr': true,\n    '\\\\biggr': true,\n    '\\\\Bigr': true,\n    '\\\\Biggr': true,\n    // \\extra@ also tests for the following:\n    '$': true,\n    // \\extrap@ checks for the following:\n    ';': true,\n    '.': true,\n    ',': true\n};\n\ndefineMacro(\"\\\\dotso\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsc\", function (context) {\n    var next = context.future().text;\n    // \\dotsc uses \\extra@ but not \\extrap@, instead specially checking for\n    // ';' and '.', but doesn't check for ','.\n    if (next in spaceAfterDots && next !== ',') {\n        return \"\\\\ldots\\\\,\";\n    } else {\n        return \"\\\\ldots\";\n    }\n});\n\ndefineMacro(\"\\\\cdots\", function (context) {\n    var next = context.future().text;\n    if (next in spaceAfterDots) {\n        return \"\\\\@cdots\\\\,\";\n    } else {\n        return \"\\\\@cdots\";\n    }\n});\n\ndefineMacro(\"\\\\dotsb\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsm\", \"\\\\cdots\");\ndefineMacro(\"\\\\dotsi\", \"\\\\!\\\\cdots\");\n// amsmath doesn't actually define \\dotsx, but \\dots followed by a macro\n// starting with \\DOTSX implies \\dotso, and then \\extra@ detects this case\n// and forces the added `\\,`.\ndefineMacro(\"\\\\dotsx\", \"\\\\ldots\\\\,\");\n\n// \\let\\DOTSI\\relax\n// \\let\\DOTSB\\relax\n// \\let\\DOTSX\\relax\ndefineMacro(\"\\\\DOTSI\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSB\", \"\\\\relax\");\ndefineMacro(\"\\\\DOTSX\", \"\\\\relax\");\n\n// Spacing, based on amsmath.sty's override of LaTeX defaults\n// \\DeclareRobustCommand{\\tmspace}[3]{%\n//   \\ifmmode\\mskip#1#2\\else\\kern#1#3\\fi\\relax}\ndefineMacro(\"\\\\tmspace\", \"\\\\TextOrMath{\\\\kern#1#3}{\\\\mskip#1#2}\\\\relax\");\n// \\renewcommand{\\,}{\\tmspace+\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\,\", \"\\\\tmspace+{3mu}{.1667em}\");\n// \\let\\thinspace\\,\ndefineMacro(\"\\\\thinspace\", \"\\\\,\");\n// \\renewcommand{\\:}{\\tmspace+\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\:\", \"\\\\tmspace+{4mu}{.2222em}\");\n// \\let\\medspace\\:\ndefineMacro(\"\\\\medspace\", \"\\\\:\");\n// \\renewcommand{\\;}{\\tmspace+\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip = 5mu plus 5mu\ndefineMacro(\"\\\\;\", \"\\\\tmspace+{5mu}{.2777em}\");\n// \\let\\thickspace\\;\ndefineMacro(\"\\\\thickspace\", \"\\\\;\");\n// \\renewcommand{\\!}{\\tmspace-\\thinmuskip{.1667em}}\n// TODO: math mode should use \\thinmuskip\ndefineMacro(\"\\\\!\", \"\\\\tmspace-{3mu}{.1667em}\");\n// \\let\\negthinspace\\!\ndefineMacro(\"\\\\negthinspace\", \"\\\\!\");\n// \\newcommand{\\negmedspace}{\\tmspace-\\medmuskip{.2222em}}\n// TODO: math mode should use \\medmuskip\ndefineMacro(\"\\\\negmedspace\", \"\\\\tmspace-{4mu}{.2222em}\");\n// \\newcommand{\\negthickspace}{\\tmspace-\\thickmuskip{.2777em}}\n// TODO: math mode should use \\thickmuskip\ndefineMacro(\"\\\\negthickspace\", \"\\\\tmspace-{5mu}{.277em}\");\n// \\def\\enspace{\\kern.5em }\ndefineMacro(\"\\\\enspace\", \"\\\\kern.5em \");\n// \\def\\enskip{\\hskip.5em\\relax}\ndefineMacro(\"\\\\enskip\", \"\\\\hskip.5em\\\\relax\");\n// \\def\\quad{\\hskip1em\\relax}\ndefineMacro(\"\\\\quad\", \"\\\\hskip1em\\\\relax\");\n// \\def\\qquad{\\hskip2em\\relax}\ndefineMacro(\"\\\\qquad\", \"\\\\hskip2em\\\\relax\");\n\n// \\tag@in@display form of \\tag\ndefineMacro(\"\\\\tag\", \"\\\\@ifstar\\\\tag@literal\\\\tag@paren\");\ndefineMacro(\"\\\\tag@paren\", \"\\\\tag@literal{({#1})}\");\ndefineMacro(\"\\\\tag@literal\", function (context) {\n    if (context.macros.get(\"\\\\df@tag\")) {\n        throw new src_ParseError(\"Multiple \\\\tag\");\n    }\n    return \"\\\\gdef\\\\df@tag{\\\\text{#1}}\";\n});\n\n// \\renewcommand{\\bmod}{\\nonscript\\mskip-\\medmuskip\\mkern5mu\\mathbin\n//   {\\operator@font mod}\\penalty900\n//   \\mkern5mu\\nonscript\\mskip-\\medmuskip}\n// \\newcommand{\\pod}[1]{\\allowbreak\n//   \\if@display\\mkern18mu\\else\\mkern8mu\\fi(#1)}\n// \\renewcommand{\\pmod}[1]{\\pod{{\\operator@font mod}\\mkern6mu#1}}\n// \\newcommand{\\mod}[1]{\\allowbreak\\if@display\\mkern18mu\n//   \\else\\mkern12mu\\fi{\\operator@font mod}\\,\\,#1}\n// TODO: math mode should use \\medmuskip = 4mu plus 2mu minus 4mu\ndefineMacro(\"\\\\bmod\", \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\" + \"\\\\mathbin{\\\\rm mod}\" + \"\\\\mathchoice{\\\\mskip1mu}{\\\\mskip1mu}{\\\\mskip5mu}{\\\\mskip5mu}\");\ndefineMacro(\"\\\\pod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern8mu}{\\\\mkern8mu}{\\\\mkern8mu}(#1)\");\ndefineMacro(\"\\\\pmod\", \"\\\\pod{{\\\\rm mod}\\\\mkern6mu#1}\");\ndefineMacro(\"\\\\mod\", \"\\\\allowbreak\" + \"\\\\mathchoice{\\\\mkern18mu}{\\\\mkern12mu}{\\\\mkern12mu}{\\\\mkern12mu}\" + \"{\\\\rm mod}\\\\,\\\\,#1\");\n\n// \\pmb    --   A simulation of bold.\n// It works by typesetting three copies of the argument with small offsets.\n// Ref: a rather lengthy macro in ambsy.sty\ndefineMacro(\"\\\\pmb\", \"\\\\html@mathml{\\\\@binrel{#1}{\" + \"\\\\mathrlap{#1}\" + \"\\\\mathrlap{\\\\mkern0.4mu\\\\raisebox{0.4mu}{$#1$}}\" + \"{\\\\mkern0.8mu#1}\" + \"}}{\\\\mathbf{#1}}\");\n\n//////////////////////////////////////////////////////////////////////\n// LaTeX source2e\n\n// \\\\ defaults to \\newline, but changes to \\cr within array environment\ndefineMacro(\"\\\\\\\\\", \"\\\\newline\");\n\n// \\def\\TeX{T\\kern-.1667em\\lower.5ex\\hbox{E}\\kern-.125emX\\@}\n// TODO: Doesn't normally work in math mode because \\@ fails.  KaTeX doesn't\n// support \\@ yet, so that's omitted, and we add \\text so that the result\n// doesn't look funny in math mode.\ndefineMacro(\"\\\\TeX\", \"\\\\textrm{\\\\html@mathml{\" + \"T\\\\kern-.1667em\\\\raisebox{-.5ex}{E}\\\\kern-.125emX\" + \"}{TeX}}\");\n\n// \\DeclareRobustCommand{\\LaTeX}{L\\kern-.36em%\n//         {\\sbox\\z@ T%\n//          \\vbox to\\ht\\z@{\\hbox{\\check@mathfonts\n//                               \\fontsize\\sf@size\\z@\n//                               \\math@fontsfalse\\selectfont\n//                               A}%\n//                         \\vss}%\n//         }%\n//         \\kern-.15em%\n//         \\TeX}\n// This code aligns the top of the A with the T (from the perspective of TeX's\n// boxes, though visually the A appears to extend above slightly).\n// We compute the corresponding \\raisebox when A is rendered at \\scriptsize,\n// which is size3, which has a scale factor of 0.7 (see Options.js).\nvar latexRaiseA = fontMetricsData['Main-Regular'][\"T\".charCodeAt(0)][1] - 0.7 * fontMetricsData['Main-Regular'][\"A\".charCodeAt(0)][1] + \"em\";\ndefineMacro(\"\\\\LaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"L\\\\kern-.36em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{LaTeX}}\");\n\n// New KaTeX logo based on tweaking LaTeX logo\ndefineMacro(\"\\\\KaTeX\", \"\\\\textrm{\\\\html@mathml{\" + (\"K\\\\kern-.17em\\\\raisebox{\" + latexRaiseA + \"}{\\\\scriptsize A}\") + \"\\\\kern-.15em\\\\TeX}{KaTeX}}\");\n\n// \\DeclareRobustCommand\\hspace{\\@ifstar\\@hspacer\\@hspace}\n// \\def\\@hspace#1{\\hskip  #1\\relax}\n// \\def\\@hspacer#1{\\vrule \\@width\\z@\\nobreak\n//                 \\hskip #1\\hskip \\z@skip}\ndefineMacro(\"\\\\hspace\", \"\\\\@ifstar\\\\@hspacer\\\\@hspace\");\ndefineMacro(\"\\\\@hspace\", \"\\\\hskip #1\\\\relax\");\ndefineMacro(\"\\\\@hspacer\", \"\\\\rule{0pt}{0pt}\\\\hskip #1\\\\relax\");\n\n//////////////////////////////////////////////////////////////////////\n// mathtools.sty\n\n//\\providecommand\\ordinarycolon{:}\ndefineMacro(\"\\\\ordinarycolon\", \":\");\n//\\def\\vcentcolon{\\mathrel{\\mathop\\ordinarycolon}}\n//TODO(edemaine): Not yet centered. Fix via \\raisebox or #726\ndefineMacro(\"\\\\vcentcolon\", \"\\\\mathrel{\\\\mathop\\\\ordinarycolon}\");\n// \\providecommand*\\dblcolon{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}\ndefineMacro(\"\\\\dblcolon\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-.9mu}\\\\vcentcolon}\");\n// \\providecommand*\\coloneqq{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\coloneqq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}=}\");\n// \\providecommand*\\Coloneqq{\\dblcolon\\mathrel{\\mkern-1.2mu}=}\ndefineMacro(\"\\\\Coloneqq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}=}\");\n// \\providecommand*\\coloneq{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\coloneq\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\");\n// \\providecommand*\\Coloneq{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}\ndefineMacro(\"\\\\Coloneq\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\mathrel{-}}\");\n// \\providecommand*\\eqqcolon{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\n// \\providecommand*\\Eqqcolon{=\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqqcolon\", \"\\\\mathrel{=\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n// \\providecommand*\\eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}\ndefineMacro(\"\\\\eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\n// \\providecommand*\\Eqcolon{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}\ndefineMacro(\"\\\\Eqcolon\", \"\\\\mathrel{\\\\mathrel{-}\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n// \\providecommand*\\colonapprox{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\colonapprox\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\");\n// \\providecommand*\\Colonapprox{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}\ndefineMacro(\"\\\\Colonapprox\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\approx}\");\n// \\providecommand*\\colonsim{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\colonsim\", \"\\\\mathrel{\\\\vcentcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\");\n// \\providecommand*\\Colonsim{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}\ndefineMacro(\"\\\\Colonsim\", \"\\\\mathrel{\\\\dblcolon\\\\mathrel{\\\\mkern-1.2mu}\\\\sim}\");\n\n// Some Unicode characters are implemented with macros to mathtools functions.\ndefineMacro(\"\\u2254\", \"\\\\coloneqq\"); // :=\ndefineMacro(\"\\u2255\", \"\\\\eqqcolon\"); // =:\ndefineMacro(\"\\u2A74\", \"\\\\Coloneqq\"); // ::=\n\n//////////////////////////////////////////////////////////////////////\n// colonequals.sty\n\n// Alternate names for mathtools's macros:\ndefineMacro(\"\\\\ratio\", \"\\\\vcentcolon\");\ndefineMacro(\"\\\\coloncolon\", \"\\\\dblcolon\");\ndefineMacro(\"\\\\colonequals\", \"\\\\coloneqq\");\ndefineMacro(\"\\\\coloncolonequals\", \"\\\\Coloneqq\");\ndefineMacro(\"\\\\equalscolon\", \"\\\\eqqcolon\");\ndefineMacro(\"\\\\equalscoloncolon\", \"\\\\Eqqcolon\");\ndefineMacro(\"\\\\colonminus\", \"\\\\coloneq\");\ndefineMacro(\"\\\\coloncolonminus\", \"\\\\Coloneq\");\ndefineMacro(\"\\\\minuscolon\", \"\\\\eqcolon\");\ndefineMacro(\"\\\\minuscoloncolon\", \"\\\\Eqcolon\");\n// \\colonapprox name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonapprox\", \"\\\\Colonapprox\");\n// \\colonsim name is same in mathtools and colonequals.\ndefineMacro(\"\\\\coloncolonsim\", \"\\\\Colonsim\");\n\n// Additional macros, implemented by analogy with mathtools definitions:\ndefineMacro(\"\\\\simcolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\simcoloncolon\", \"\\\\mathrel{\\\\sim\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\ndefineMacro(\"\\\\approxcolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\vcentcolon}\");\ndefineMacro(\"\\\\approxcoloncolon\", \"\\\\mathrel{\\\\approx\\\\mathrel{\\\\mkern-1.2mu}\\\\dblcolon}\");\n\n// Present in newtxmath, pxfonts and txfonts\ndefineMacro(\"\\\\notni\", \"\\\\html@mathml{\\\\not\\\\ni}{\\\\mathrel{\\\\char`\\u220C}}\");\ndefineMacro(\"\\\\limsup\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,sup}}\\\\limits\");\ndefineMacro(\"\\\\liminf\", \"\\\\DOTSB\\\\mathop{\\\\operatorname{lim\\\\,inf}}\\\\limits\");\n\n//////////////////////////////////////////////////////////////////////\n// texvc.sty\n\n// The texvc package contains macros available in mediawiki pages.\n// We omit the functions deprecated at\n// https://en.wikipedia.org/wiki/Help:Displaying_a_formula#Deprecated_syntax\n\n// We also omit texvc's \\O, which conflicts with \\text{\\O}\n\ndefineMacro(\"\\\\darr\", \"\\\\downarrow\");\ndefineMacro(\"\\\\dArr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\Darr\", \"\\\\Downarrow\");\ndefineMacro(\"\\\\lang\", \"\\\\langle\");\ndefineMacro(\"\\\\rang\", \"\\\\rangle\");\ndefineMacro(\"\\\\uarr\", \"\\\\uparrow\");\ndefineMacro(\"\\\\uArr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\Uarr\", \"\\\\Uparrow\");\ndefineMacro(\"\\\\N\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\R\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Z\", \"\\\\mathbb{Z}\");\ndefineMacro(\"\\\\alef\", \"\\\\aleph\");\ndefineMacro(\"\\\\alefsym\", \"\\\\aleph\");\ndefineMacro(\"\\\\Alpha\", \"\\\\mathrm{A}\");\ndefineMacro(\"\\\\Beta\", \"\\\\mathrm{B}\");\ndefineMacro(\"\\\\bull\", \"\\\\bullet\");\ndefineMacro(\"\\\\Chi\", \"\\\\mathrm{X}\");\ndefineMacro(\"\\\\clubs\", \"\\\\clubsuit\");\ndefineMacro(\"\\\\cnums\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Complex\", \"\\\\mathbb{C}\");\ndefineMacro(\"\\\\Dagger\", \"\\\\ddagger\");\ndefineMacro(\"\\\\diamonds\", \"\\\\diamondsuit\");\ndefineMacro(\"\\\\empty\", \"\\\\emptyset\");\ndefineMacro(\"\\\\Epsilon\", \"\\\\mathrm{E}\");\ndefineMacro(\"\\\\Eta\", \"\\\\mathrm{H}\");\ndefineMacro(\"\\\\exist\", \"\\\\exists\");\ndefineMacro(\"\\\\harr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\hArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Harr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\hearts\", \"\\\\heartsuit\");\ndefineMacro(\"\\\\image\", \"\\\\Im\");\ndefineMacro(\"\\\\infin\", \"\\\\infty\");\ndefineMacro(\"\\\\Iota\", \"\\\\mathrm{I}\");\ndefineMacro(\"\\\\isin\", \"\\\\in\");\ndefineMacro(\"\\\\Kappa\", \"\\\\mathrm{K}\");\ndefineMacro(\"\\\\larr\", \"\\\\leftarrow\");\ndefineMacro(\"\\\\lArr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\Larr\", \"\\\\Leftarrow\");\ndefineMacro(\"\\\\lrarr\", \"\\\\leftrightarrow\");\ndefineMacro(\"\\\\lrArr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Lrarr\", \"\\\\Leftrightarrow\");\ndefineMacro(\"\\\\Mu\", \"\\\\mathrm{M}\");\ndefineMacro(\"\\\\natnums\", \"\\\\mathbb{N}\");\ndefineMacro(\"\\\\Nu\", \"\\\\mathrm{N}\");\ndefineMacro(\"\\\\Omicron\", \"\\\\mathrm{O}\");\ndefineMacro(\"\\\\plusmn\", \"\\\\pm\");\ndefineMacro(\"\\\\rarr\", \"\\\\rightarrow\");\ndefineMacro(\"\\\\rArr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\Rarr\", \"\\\\Rightarrow\");\ndefineMacro(\"\\\\real\", \"\\\\Re\");\ndefineMacro(\"\\\\reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Reals\", \"\\\\mathbb{R}\");\ndefineMacro(\"\\\\Rho\", \"\\\\mathrm{R}\");\ndefineMacro(\"\\\\sdot\", \"\\\\cdot\");\ndefineMacro(\"\\\\sect\", \"\\\\S\");\ndefineMacro(\"\\\\spades\", \"\\\\spadesuit\");\ndefineMacro(\"\\\\sub\", \"\\\\subset\");\ndefineMacro(\"\\\\sube\", \"\\\\subseteq\");\ndefineMacro(\"\\\\supe\", \"\\\\supseteq\");\ndefineMacro(\"\\\\Tau\", \"\\\\mathrm{T}\");\ndefineMacro(\"\\\\thetasym\", \"\\\\vartheta\");\n// TODO: defineMacro(\"\\\\varcoppa\", \"\\\\\\mbox{\\\\coppa}\");\ndefineMacro(\"\\\\weierp\", \"\\\\wp\");\ndefineMacro(\"\\\\Zeta\", \"\\\\mathrm{Z}\");\n// CONCATENATED MODULE: ./src/MacroExpander.js\n\n\n/**\n * This file contains the “gullet” where macros are expanded\n * until only non-macro tokens remain.\n */\n\n\n\n\n\n\n\n\n\n\n// List of commands that act like macros but aren't defined as a macro,\n// function, or symbol.  Used in `isDefined`.\nvar implicitCommands = {\n    \"\\\\relax\": true, // MacroExpander.js\n    \"^\": true, // Parser.js\n    \"_\": true, // Parser.js\n    \"\\\\limits\": true, // Parser.js\n    \"\\\\nolimits\": true // Parser.js\n};\n\nvar MacroExpander_MacroExpander = function () {\n    function MacroExpander(input, settings, mode) {\n        classCallCheck_default()(this, MacroExpander);\n\n        this.settings = settings;\n        this.expansionCount = 0;\n        this.feed(input);\n        // Make new global namespace\n        this.macros = new src_Namespace(macros, settings.macros);\n        this.mode = mode;\n        this.stack = []; // contains tokens in REVERSE order\n    }\n\n    /**\n     * Feed a new input string to the same MacroExpander\n     * (with existing macros etc.).\n     */\n\n\n    MacroExpander.prototype.feed = function feed(input) {\n        this.lexer = new src_Lexer(input, this.settings);\n    };\n\n    /**\n     * Switches between \"text\" and \"math\" modes.\n     */\n\n\n    MacroExpander.prototype.switchMode = function switchMode(newMode) {\n        this.mode = newMode;\n    };\n\n    /**\n     * Start a new group nesting within all namespaces.\n     */\n\n\n    MacroExpander.prototype.beginGroup = function beginGroup() {\n        this.macros.beginGroup();\n    };\n\n    /**\n     * End current group nesting within all namespaces.\n     */\n\n\n    MacroExpander.prototype.endGroup = function endGroup() {\n        this.macros.endGroup();\n    };\n\n    /**\n     * Returns the topmost token on the stack, without expanding it.\n     * Similar in behavior to TeX's `\\futurelet`.\n     */\n\n\n    MacroExpander.prototype.future = function future() {\n        if (this.stack.length === 0) {\n            this.pushToken(this.lexer.lex());\n        }\n        return this.stack[this.stack.length - 1];\n    };\n\n    /**\n     * Remove and return the next unexpanded token.\n     */\n\n\n    MacroExpander.prototype.popToken = function popToken() {\n        this.future(); // ensure non-empty stack\n        return this.stack.pop();\n    };\n\n    /**\n     * Add a given token to the token stack.  In particular, this get be used\n     * to put back a token returned from one of the other methods.\n     */\n\n\n    MacroExpander.prototype.pushToken = function pushToken(token) {\n        this.stack.push(token);\n    };\n\n    /**\n     * Append an array of tokens to the token stack.\n     */\n\n\n    MacroExpander.prototype.pushTokens = function pushTokens(tokens) {\n        var _stack;\n\n        (_stack = this.stack).push.apply(_stack, tokens);\n    };\n\n    /**\n     * Consume all following space tokens, without expansion.\n     */\n\n\n    MacroExpander.prototype.consumeSpaces = function consumeSpaces() {\n        for (;;) {\n            var token = this.future();\n            if (token.text === \" \") {\n                this.stack.pop();\n            } else {\n                break;\n            }\n        }\n    };\n\n    /**\n     * Consume the specified number of arguments from the token stream,\n     * and return the resulting array of arguments.\n     */\n\n\n    MacroExpander.prototype.consumeArgs = function consumeArgs(numArgs) {\n        var args = [];\n        // obtain arguments, either single token or balanced {…} group\n        for (var i = 0; i < numArgs; ++i) {\n            this.consumeSpaces(); // ignore spaces before each argument\n            var startOfArg = this.popToken();\n            if (startOfArg.text === \"{\") {\n                var arg = [];\n                var depth = 1;\n                while (depth !== 0) {\n                    var tok = this.popToken();\n                    arg.push(tok);\n                    if (tok.text === \"{\") {\n                        ++depth;\n                    } else if (tok.text === \"}\") {\n                        --depth;\n                    } else if (tok.text === \"EOF\") {\n                        throw new src_ParseError(\"End of input in macro argument\", startOfArg);\n                    }\n                }\n                arg.pop(); // remove last }\n                arg.reverse(); // like above, to fit in with stack order\n                args[i] = arg;\n            } else if (startOfArg.text === \"EOF\") {\n                throw new src_ParseError(\"End of input expecting macro argument\");\n            } else {\n                args[i] = [startOfArg];\n            }\n        }\n        return args;\n    };\n\n    /**\n     * Expand the next token only once if possible.\n     *\n     * If the token is expanded, the resulting tokens will be pushed onto\n     * the stack in reverse order and will be returned as an array,\n     * also in reverse order.\n     *\n     * If not, the next token will be returned without removing it\n     * from the stack.  This case can be detected by a `Token` return value\n     * instead of an `Array` return value.\n     *\n     * In either case, the next token will be on the top of the stack,\n     * or the stack will be empty.\n     *\n     * Used to implement `expandAfterFuture` and `expandNextToken`.\n     *\n     * At the moment, macro expansion doesn't handle delimited macros,\n     * i.e. things like those defined by \\def\\foo#1\\end{…}.\n     * See the TeX book page 202ff. for details on how those should behave.\n     */\n\n\n    MacroExpander.prototype.expandOnce = function expandOnce() {\n        var topToken = this.popToken();\n        var name = topToken.text;\n        var expansion = this._getExpansion(name);\n        if (expansion == null) {\n            // mainly checking for undefined here\n            // Fully expanded\n            this.pushToken(topToken);\n            return topToken;\n        }\n        this.expansionCount++;\n        if (this.expansionCount > this.settings.maxExpand) {\n            throw new src_ParseError(\"Too many expansions: infinite loop or \" + \"need to increase maxExpand setting\");\n        }\n        var tokens = expansion.tokens;\n        if (expansion.numArgs) {\n            var args = this.consumeArgs(expansion.numArgs);\n            // paste arguments in place of the placeholders\n            tokens = tokens.slice(); // make a shallow copy\n            for (var i = tokens.length - 1; i >= 0; --i) {\n                var tok = tokens[i];\n                if (tok.text === \"#\") {\n                    if (i === 0) {\n                        throw new src_ParseError(\"Incomplete placeholder at end of macro body\", tok);\n                    }\n                    tok = tokens[--i]; // next token on stack\n                    if (tok.text === \"#\") {\n                        // ## → #\n                        tokens.splice(i + 1, 1); // drop first #\n                    } else if (/^[1-9]$/.test(tok.text)) {\n                        var _tokens;\n\n                        // replace the placeholder with the indicated argument\n                        (_tokens = tokens).splice.apply(_tokens, [i, 2].concat(args[+tok.text - 1]));\n                    } else {\n                        throw new src_ParseError(\"Not a valid argument number\", tok);\n                    }\n                }\n            }\n        }\n        // Concatenate expansion onto top of stack.\n        this.pushTokens(tokens);\n        return tokens;\n    };\n\n    /**\n     * Expand the next token only once (if possible), and return the resulting\n     * top token on the stack (without removing anything from the stack).\n     * Similar in behavior to TeX's `\\expandafter\\futurelet`.\n     * Equivalent to expandOnce() followed by future().\n     */\n\n\n    MacroExpander.prototype.expandAfterFuture = function expandAfterFuture() {\n        this.expandOnce();\n        return this.future();\n    };\n\n    /**\n     * Recursively expand first token, then return first non-expandable token.\n     */\n\n\n    MacroExpander.prototype.expandNextToken = function expandNextToken() {\n        for (;;) {\n            var expanded = this.expandOnce();\n            // expandOnce returns Token if and only if it's fully expanded.\n            if (expanded instanceof Token_Token) {\n                // \\relax stops the expansion, but shouldn't get returned (a\n                // null return value couldn't get implemented as a function).\n                if (expanded.text === \"\\\\relax\") {\n                    this.stack.pop();\n                } else {\n                    return this.stack.pop(); // === expanded\n                }\n            }\n        }\n\n        // Flow unable to figure out that this pathway is impossible.\n        // https://github.com/facebook/flow/issues/4808\n        throw new Error(); // eslint-disable-line no-unreachable\n    };\n\n    /**\n     * Fully expand the given macro name and return the resulting list of\n     * tokens, or return `undefined` if no such macro is defined.\n     */\n\n\n    MacroExpander.prototype.expandMacro = function expandMacro(name) {\n        if (!this.macros.get(name)) {\n            return undefined;\n        }\n        var output = [];\n        var oldStackLength = this.stack.length;\n        this.pushToken(new Token_Token(name));\n        while (this.stack.length > oldStackLength) {\n            var expanded = this.expandOnce();\n            // expandOnce returns Token if and only if it's fully expanded.\n            if (expanded instanceof Token_Token) {\n                output.push(this.stack.pop());\n            }\n        }\n        return output;\n    };\n\n    /**\n     * Fully expand the given macro name and return the result as a string,\n     * or return `undefined` if no such macro is defined.\n     */\n\n\n    MacroExpander.prototype.expandMacroAsText = function expandMacroAsText(name) {\n        var tokens = this.expandMacro(name);\n        if (tokens) {\n            return tokens.map(function (token) {\n                return token.text;\n            }).join(\"\");\n        } else {\n            return tokens;\n        }\n    };\n\n    /**\n     * Returns the expanded macro as a reversed array of tokens and a macro\n     * argument count.  Or returns `null` if no such macro.\n     */\n\n\n    MacroExpander.prototype._getExpansion = function _getExpansion(name) {\n        var definition = this.macros.get(name);\n        if (definition == null) {\n            // mainly checking for undefined here\n            return definition;\n        }\n        var expansion = typeof definition === \"function\" ? definition(this) : definition;\n        if (typeof expansion === \"string\") {\n            var numArgs = 0;\n            if (expansion.indexOf(\"#\") !== -1) {\n                var stripped = expansion.replace(/##/g, \"\");\n                while (stripped.indexOf(\"#\" + (numArgs + 1)) !== -1) {\n                    ++numArgs;\n                }\n            }\n            var bodyLexer = new src_Lexer(expansion, this.settings);\n            var tokens = [];\n            var tok = bodyLexer.lex();\n            while (tok.text !== \"EOF\") {\n                tokens.push(tok);\n                tok = bodyLexer.lex();\n            }\n            tokens.reverse(); // to fit in with stack using push and pop\n            var expanded = { tokens: tokens, numArgs: numArgs };\n            return expanded;\n        }\n\n        return expansion;\n    };\n\n    /**\n     * Determine whether a command is currently \"defined\" (has some\n     * functionality), meaning that it's a macro (in the current group),\n     * a function, a symbol, or one of the special commands listed in\n     * `implicitCommands`.\n     */\n\n\n    MacroExpander.prototype.isDefined = function isDefined(name) {\n        return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);\n    };\n\n    return MacroExpander;\n}();\n\n/* harmony default export */ var src_MacroExpander = (MacroExpander_MacroExpander);\n// CONCATENATED MODULE: ./src/unicodeAccents.js\n// Mapping of Unicode accent characters to their LaTeX equivalent in text and\n// math mode (when they exist).\n/* harmony default export */ var unicodeAccents = ({\n    '\\u0301': { text: \"\\\\'\", math: '\\\\acute' },\n    '\\u0300': { text: '\\\\`', math: '\\\\grave' },\n    '\\u0308': { text: '\\\\\"', math: '\\\\ddot' },\n    '\\u0303': { text: '\\\\~', math: '\\\\tilde' },\n    '\\u0304': { text: '\\\\=', math: '\\\\bar' },\n    '\\u0306': { text: '\\\\u', math: '\\\\breve' },\n    '\\u030C': { text: '\\\\v', math: '\\\\check' },\n    '\\u0302': { text: '\\\\^', math: '\\\\hat' },\n    '\\u0307': { text: '\\\\.', math: '\\\\dot' },\n    '\\u030A': { text: '\\\\r', math: '\\\\mathring' },\n    '\\u030B': { text: '\\\\H' }\n});\n// CONCATENATED MODULE: ./src/unicodeSymbols.js\n\n// This file is GENERATED by unicodeMake.js. DO NOT MODIFY.\n\n/* harmony default export */ var unicodeSymbols = ({\n    \"\\xE1\": \"a\\u0301\", // á = \\'{a}\n    \"\\xE0\": \"a\\u0300\", // à = \\`{a}\n    \"\\xE4\": \"a\\u0308\", // ä = \\\"{a}\n    \"\\u01DF\": \"a\\u0308\\u0304\", // ǟ = \\\"\\={a}\n    \"\\xE3\": \"a\\u0303\", // ã = \\~{a}\n    \"\\u0101\": \"a\\u0304\", // ā = \\={a}\n    \"\\u0103\": \"a\\u0306\", // ă = \\u{a}\n    \"\\u1EAF\": \"a\\u0306\\u0301\", // ắ = \\u\\'{a}\n    \"\\u1EB1\": \"a\\u0306\\u0300\", // ằ = \\u\\`{a}\n    \"\\u1EB5\": \"a\\u0306\\u0303\", // ẵ = \\u\\~{a}\n    \"\\u01CE\": \"a\\u030C\", // ǎ = \\v{a}\n    \"\\xE2\": \"a\\u0302\", // â = \\^{a}\n    \"\\u1EA5\": \"a\\u0302\\u0301\", // ấ = \\^\\'{a}\n    \"\\u1EA7\": \"a\\u0302\\u0300\", // ầ = \\^\\`{a}\n    \"\\u1EAB\": \"a\\u0302\\u0303\", // ẫ = \\^\\~{a}\n    \"\\u0227\": \"a\\u0307\", // ȧ = \\.{a}\n    \"\\u01E1\": \"a\\u0307\\u0304\", // ǡ = \\.\\={a}\n    \"\\xE5\": \"a\\u030A\", // å = \\r{a}\n    \"\\u01FB\": \"a\\u030A\\u0301\", // ǻ = \\r\\'{a}\n    \"\\u1E03\": \"b\\u0307\", // ḃ = \\.{b}\n    \"\\u0107\": \"c\\u0301\", // ć = \\'{c}\n    \"\\u010D\": \"c\\u030C\", // č = \\v{c}\n    \"\\u0109\": \"c\\u0302\", // ĉ = \\^{c}\n    \"\\u010B\": \"c\\u0307\", // ċ = \\.{c}\n    \"\\u010F\": \"d\\u030C\", // ď = \\v{d}\n    \"\\u1E0B\": \"d\\u0307\", // ḋ = \\.{d}\n    \"\\xE9\": \"e\\u0301\", // é = \\'{e}\n    \"\\xE8\": \"e\\u0300\", // è = \\`{e}\n    \"\\xEB\": \"e\\u0308\", // ë = \\\"{e}\n    \"\\u1EBD\": \"e\\u0303\", // ẽ = \\~{e}\n    \"\\u0113\": \"e\\u0304\", // ē = \\={e}\n    \"\\u1E17\": \"e\\u0304\\u0301\", // ḗ = \\=\\'{e}\n    \"\\u1E15\": \"e\\u0304\\u0300\", // ḕ = \\=\\`{e}\n    \"\\u0115\": \"e\\u0306\", // ĕ = \\u{e}\n    \"\\u011B\": \"e\\u030C\", // ě = \\v{e}\n    \"\\xEA\": \"e\\u0302\", // ê = \\^{e}\n    \"\\u1EBF\": \"e\\u0302\\u0301\", // ế = \\^\\'{e}\n    \"\\u1EC1\": \"e\\u0302\\u0300\", // ề = \\^\\`{e}\n    \"\\u1EC5\": \"e\\u0302\\u0303\", // ễ = \\^\\~{e}\n    \"\\u0117\": \"e\\u0307\", // ė = \\.{e}\n    \"\\u1E1F\": \"f\\u0307\", // ḟ = \\.{f}\n    \"\\u01F5\": \"g\\u0301\", // ǵ = \\'{g}\n    \"\\u1E21\": \"g\\u0304\", // ḡ = \\={g}\n    \"\\u011F\": \"g\\u0306\", // ğ = \\u{g}\n    \"\\u01E7\": \"g\\u030C\", // ǧ = \\v{g}\n    \"\\u011D\": \"g\\u0302\", // ĝ = \\^{g}\n    \"\\u0121\": \"g\\u0307\", // ġ = \\.{g}\n    \"\\u1E27\": \"h\\u0308\", // ḧ = \\\"{h}\n    \"\\u021F\": \"h\\u030C\", // ȟ = \\v{h}\n    \"\\u0125\": \"h\\u0302\", // ĥ = \\^{h}\n    \"\\u1E23\": \"h\\u0307\", // ḣ = \\.{h}\n    \"\\xED\": \"i\\u0301\", // í = \\'{i}\n    \"\\xEC\": \"i\\u0300\", // ì = \\`{i}\n    \"\\xEF\": \"i\\u0308\", // ï = \\\"{i}\n    \"\\u1E2F\": \"i\\u0308\\u0301\", // ḯ = \\\"\\'{i}\n    \"\\u0129\": \"i\\u0303\", // ĩ = \\~{i}\n    \"\\u012B\": \"i\\u0304\", // ī = \\={i}\n    \"\\u012D\": \"i\\u0306\", // ĭ = \\u{i}\n    \"\\u01D0\": \"i\\u030C\", // ǐ = \\v{i}\n    \"\\xEE\": \"i\\u0302\", // î = \\^{i}\n    \"\\u01F0\": \"j\\u030C\", // ǰ = \\v{j}\n    \"\\u0135\": \"j\\u0302\", // ĵ = \\^{j}\n    \"\\u1E31\": \"k\\u0301\", // ḱ = \\'{k}\n    \"\\u01E9\": \"k\\u030C\", // ǩ = \\v{k}\n    \"\\u013A\": \"l\\u0301\", // ĺ = \\'{l}\n    \"\\u013E\": \"l\\u030C\", // ľ = \\v{l}\n    \"\\u1E3F\": \"m\\u0301\", // ḿ = \\'{m}\n    \"\\u1E41\": \"m\\u0307\", // ṁ = \\.{m}\n    \"\\u0144\": \"n\\u0301\", // ń = \\'{n}\n    \"\\u01F9\": \"n\\u0300\", // ǹ = \\`{n}\n    \"\\xF1\": \"n\\u0303\", // ñ = \\~{n}\n    \"\\u0148\": \"n\\u030C\", // ň = \\v{n}\n    \"\\u1E45\": \"n\\u0307\", // ṅ = \\.{n}\n    \"\\xF3\": \"o\\u0301\", // ó = \\'{o}\n    \"\\xF2\": \"o\\u0300\", // ò = \\`{o}\n    \"\\xF6\": \"o\\u0308\", // ö = \\\"{o}\n    \"\\u022B\": \"o\\u0308\\u0304\", // ȫ = \\\"\\={o}\n    \"\\xF5\": \"o\\u0303\", // õ = \\~{o}\n    \"\\u1E4D\": \"o\\u0303\\u0301\", // ṍ = \\~\\'{o}\n    \"\\u1E4F\": \"o\\u0303\\u0308\", // ṏ = \\~\\\"{o}\n    \"\\u022D\": \"o\\u0303\\u0304\", // ȭ = \\~\\={o}\n    \"\\u014D\": \"o\\u0304\", // ō = \\={o}\n    \"\\u1E53\": \"o\\u0304\\u0301\", // ṓ = \\=\\'{o}\n    \"\\u1E51\": \"o\\u0304\\u0300\", // ṑ = \\=\\`{o}\n    \"\\u014F\": \"o\\u0306\", // ŏ = \\u{o}\n    \"\\u01D2\": \"o\\u030C\", // ǒ = \\v{o}\n    \"\\xF4\": \"o\\u0302\", // ô = \\^{o}\n    \"\\u1ED1\": \"o\\u0302\\u0301\", // ố = \\^\\'{o}\n    \"\\u1ED3\": \"o\\u0302\\u0300\", // ồ = \\^\\`{o}\n    \"\\u1ED7\": \"o\\u0302\\u0303\", // ỗ = \\^\\~{o}\n    \"\\u022F\": \"o\\u0307\", // ȯ = \\.{o}\n    \"\\u0231\": \"o\\u0307\\u0304\", // ȱ = \\.\\={o}\n    \"\\u0151\": \"o\\u030B\", // ő = \\H{o}\n    \"\\u1E55\": \"p\\u0301\", // ṕ = \\'{p}\n    \"\\u1E57\": \"p\\u0307\", // ṗ = \\.{p}\n    \"\\u0155\": \"r\\u0301\", // ŕ = \\'{r}\n    \"\\u0159\": \"r\\u030C\", // ř = \\v{r}\n    \"\\u1E59\": \"r\\u0307\", // ṙ = \\.{r}\n    \"\\u015B\": \"s\\u0301\", // ś = \\'{s}\n    \"\\u1E65\": \"s\\u0301\\u0307\", // ṥ = \\'\\.{s}\n    \"\\u0161\": \"s\\u030C\", // š = \\v{s}\n    \"\\u1E67\": \"s\\u030C\\u0307\", // ṧ = \\v\\.{s}\n    \"\\u015D\": \"s\\u0302\", // ŝ = \\^{s}\n    \"\\u1E61\": \"s\\u0307\", // ṡ = \\.{s}\n    \"\\u1E97\": \"t\\u0308\", // ẗ = \\\"{t}\n    \"\\u0165\": \"t\\u030C\", // ť = \\v{t}\n    \"\\u1E6B\": \"t\\u0307\", // ṫ = \\.{t}\n    \"\\xFA\": \"u\\u0301\", // ú = \\'{u}\n    \"\\xF9\": \"u\\u0300\", // ù = \\`{u}\n    \"\\xFC\": \"u\\u0308\", // ü = \\\"{u}\n    \"\\u01D8\": \"u\\u0308\\u0301\", // ǘ = \\\"\\'{u}\n    \"\\u01DC\": \"u\\u0308\\u0300\", // ǜ = \\\"\\`{u}\n    \"\\u01D6\": \"u\\u0308\\u0304\", // ǖ = \\\"\\={u}\n    \"\\u01DA\": \"u\\u0308\\u030C\", // ǚ = \\\"\\v{u}\n    \"\\u0169\": \"u\\u0303\", // ũ = \\~{u}\n    \"\\u1E79\": \"u\\u0303\\u0301\", // ṹ = \\~\\'{u}\n    \"\\u016B\": \"u\\u0304\", // ū = \\={u}\n    \"\\u1E7B\": \"u\\u0304\\u0308\", // ṻ = \\=\\\"{u}\n    \"\\u016D\": \"u\\u0306\", // ŭ = \\u{u}\n    \"\\u01D4\": \"u\\u030C\", // ǔ = \\v{u}\n    \"\\xFB\": \"u\\u0302\", // û = \\^{u}\n    \"\\u016F\": \"u\\u030A\", // ů = \\r{u}\n    \"\\u0171\": \"u\\u030B\", // ű = \\H{u}\n    \"\\u1E7D\": \"v\\u0303\", // ṽ = \\~{v}\n    \"\\u1E83\": \"w\\u0301\", // ẃ = \\'{w}\n    \"\\u1E81\": \"w\\u0300\", // ẁ = \\`{w}\n    \"\\u1E85\": \"w\\u0308\", // ẅ = \\\"{w}\n    \"\\u0175\": \"w\\u0302\", // ŵ = \\^{w}\n    \"\\u1E87\": \"w\\u0307\", // ẇ = \\.{w}\n    \"\\u1E98\": \"w\\u030A\", // ẘ = \\r{w}\n    \"\\u1E8D\": \"x\\u0308\", // ẍ = \\\"{x}\n    \"\\u1E8B\": \"x\\u0307\", // ẋ = \\.{x}\n    \"\\xFD\": \"y\\u0301\", // ý = \\'{y}\n    \"\\u1EF3\": \"y\\u0300\", // ỳ = \\`{y}\n    \"\\xFF\": \"y\\u0308\", // ÿ = \\\"{y}\n    \"\\u1EF9\": \"y\\u0303\", // ỹ = \\~{y}\n    \"\\u0233\": \"y\\u0304\", // ȳ = \\={y}\n    \"\\u0177\": \"y\\u0302\", // ŷ = \\^{y}\n    \"\\u1E8F\": \"y\\u0307\", // ẏ = \\.{y}\n    \"\\u1E99\": \"y\\u030A\", // ẙ = \\r{y}\n    \"\\u017A\": \"z\\u0301\", // ź = \\'{z}\n    \"\\u017E\": \"z\\u030C\", // ž = \\v{z}\n    \"\\u1E91\": \"z\\u0302\", // ẑ = \\^{z}\n    \"\\u017C\": \"z\\u0307\", // ż = \\.{z}\n    \"\\xC1\": \"A\\u0301\", // Á = \\'{A}\n    \"\\xC0\": \"A\\u0300\", // À = \\`{A}\n    \"\\xC4\": \"A\\u0308\", // Ä = \\\"{A}\n    \"\\u01DE\": \"A\\u0308\\u0304\", // Ǟ = \\\"\\={A}\n    \"\\xC3\": \"A\\u0303\", // Ã = \\~{A}\n    \"\\u0100\": \"A\\u0304\", // Ā = \\={A}\n    \"\\u0102\": \"A\\u0306\", // Ă = \\u{A}\n    \"\\u1EAE\": \"A\\u0306\\u0301\", // Ắ = \\u\\'{A}\n    \"\\u1EB0\": \"A\\u0306\\u0300\", // Ằ = \\u\\`{A}\n    \"\\u1EB4\": \"A\\u0306\\u0303\", // Ẵ = \\u\\~{A}\n    \"\\u01CD\": \"A\\u030C\", // Ǎ = \\v{A}\n    \"\\xC2\": \"A\\u0302\", // Â = \\^{A}\n    \"\\u1EA4\": \"A\\u0302\\u0301\", // Ấ = \\^\\'{A}\n    \"\\u1EA6\": \"A\\u0302\\u0300\", // Ầ = \\^\\`{A}\n    \"\\u1EAA\": \"A\\u0302\\u0303\", // Ẫ = \\^\\~{A}\n    \"\\u0226\": \"A\\u0307\", // Ȧ = \\.{A}\n    \"\\u01E0\": \"A\\u0307\\u0304\", // Ǡ = \\.\\={A}\n    \"\\xC5\": \"A\\u030A\", // Å = \\r{A}\n    \"\\u01FA\": \"A\\u030A\\u0301\", // Ǻ = \\r\\'{A}\n    \"\\u1E02\": \"B\\u0307\", // Ḃ = \\.{B}\n    \"\\u0106\": \"C\\u0301\", // Ć = \\'{C}\n    \"\\u010C\": \"C\\u030C\", // Č = \\v{C}\n    \"\\u0108\": \"C\\u0302\", // Ĉ = \\^{C}\n    \"\\u010A\": \"C\\u0307\", // Ċ = \\.{C}\n    \"\\u010E\": \"D\\u030C\", // Ď = \\v{D}\n    \"\\u1E0A\": \"D\\u0307\", // Ḋ = \\.{D}\n    \"\\xC9\": \"E\\u0301\", // É = \\'{E}\n    \"\\xC8\": \"E\\u0300\", // È = \\`{E}\n    \"\\xCB\": \"E\\u0308\", // Ë = \\\"{E}\n    \"\\u1EBC\": \"E\\u0303\", // Ẽ = \\~{E}\n    \"\\u0112\": \"E\\u0304\", // Ē = \\={E}\n    \"\\u1E16\": \"E\\u0304\\u0301\", // Ḗ = \\=\\'{E}\n    \"\\u1E14\": \"E\\u0304\\u0300\", // Ḕ = \\=\\`{E}\n    \"\\u0114\": \"E\\u0306\", // Ĕ = \\u{E}\n    \"\\u011A\": \"E\\u030C\", // Ě = \\v{E}\n    \"\\xCA\": \"E\\u0302\", // Ê = \\^{E}\n    \"\\u1EBE\": \"E\\u0302\\u0301\", // Ế = \\^\\'{E}\n    \"\\u1EC0\": \"E\\u0302\\u0300\", // Ề = \\^\\`{E}\n    \"\\u1EC4\": \"E\\u0302\\u0303\", // Ễ = \\^\\~{E}\n    \"\\u0116\": \"E\\u0307\", // Ė = \\.{E}\n    \"\\u1E1E\": \"F\\u0307\", // Ḟ = \\.{F}\n    \"\\u01F4\": \"G\\u0301\", // Ǵ = \\'{G}\n    \"\\u1E20\": \"G\\u0304\", // Ḡ = \\={G}\n    \"\\u011E\": \"G\\u0306\", // Ğ = \\u{G}\n    \"\\u01E6\": \"G\\u030C\", // Ǧ = \\v{G}\n    \"\\u011C\": \"G\\u0302\", // Ĝ = \\^{G}\n    \"\\u0120\": \"G\\u0307\", // Ġ = \\.{G}\n    \"\\u1E26\": \"H\\u0308\", // Ḧ = \\\"{H}\n    \"\\u021E\": \"H\\u030C\", // Ȟ = \\v{H}\n    \"\\u0124\": \"H\\u0302\", // Ĥ = \\^{H}\n    \"\\u1E22\": \"H\\u0307\", // Ḣ = \\.{H}\n    \"\\xCD\": \"I\\u0301\", // Í = \\'{I}\n    \"\\xCC\": \"I\\u0300\", // Ì = \\`{I}\n    \"\\xCF\": \"I\\u0308\", // Ï = \\\"{I}\n    \"\\u1E2E\": \"I\\u0308\\u0301\", // Ḯ = \\\"\\'{I}\n    \"\\u0128\": \"I\\u0303\", // Ĩ = \\~{I}\n    \"\\u012A\": \"I\\u0304\", // Ī = \\={I}\n    \"\\u012C\": \"I\\u0306\", // Ĭ = \\u{I}\n    \"\\u01CF\": \"I\\u030C\", // Ǐ = \\v{I}\n    \"\\xCE\": \"I\\u0302\", // Î = \\^{I}\n    \"\\u0130\": \"I\\u0307\", // İ = \\.{I}\n    \"\\u0134\": \"J\\u0302\", // Ĵ = \\^{J}\n    \"\\u1E30\": \"K\\u0301\", // Ḱ = \\'{K}\n    \"\\u01E8\": \"K\\u030C\", // Ǩ = \\v{K}\n    \"\\u0139\": \"L\\u0301\", // Ĺ = \\'{L}\n    \"\\u013D\": \"L\\u030C\", // Ľ = \\v{L}\n    \"\\u1E3E\": \"M\\u0301\", // Ḿ = \\'{M}\n    \"\\u1E40\": \"M\\u0307\", // Ṁ = \\.{M}\n    \"\\u0143\": \"N\\u0301\", // Ń = \\'{N}\n    \"\\u01F8\": \"N\\u0300\", // Ǹ = \\`{N}\n    \"\\xD1\": \"N\\u0303\", // Ñ = \\~{N}\n    \"\\u0147\": \"N\\u030C\", // Ň = \\v{N}\n    \"\\u1E44\": \"N\\u0307\", // Ṅ = \\.{N}\n    \"\\xD3\": \"O\\u0301\", // Ó = \\'{O}\n    \"\\xD2\": \"O\\u0300\", // Ò = \\`{O}\n    \"\\xD6\": \"O\\u0308\", // Ö = \\\"{O}\n    \"\\u022A\": \"O\\u0308\\u0304\", // Ȫ = \\\"\\={O}\n    \"\\xD5\": \"O\\u0303\", // Õ = \\~{O}\n    \"\\u1E4C\": \"O\\u0303\\u0301\", // Ṍ = \\~\\'{O}\n    \"\\u1E4E\": \"O\\u0303\\u0308\", // Ṏ = \\~\\\"{O}\n    \"\\u022C\": \"O\\u0303\\u0304\", // Ȭ = \\~\\={O}\n    \"\\u014C\": \"O\\u0304\", // Ō = \\={O}\n    \"\\u1E52\": \"O\\u0304\\u0301\", // Ṓ = \\=\\'{O}\n    \"\\u1E50\": \"O\\u0304\\u0300\", // Ṑ = \\=\\`{O}\n    \"\\u014E\": \"O\\u0306\", // Ŏ = \\u{O}\n    \"\\u01D1\": \"O\\u030C\", // Ǒ = \\v{O}\n    \"\\xD4\": \"O\\u0302\", // Ô = \\^{O}\n    \"\\u1ED0\": \"O\\u0302\\u0301\", // Ố = \\^\\'{O}\n    \"\\u1ED2\": \"O\\u0302\\u0300\", // Ồ = \\^\\`{O}\n    \"\\u1ED6\": \"O\\u0302\\u0303\", // Ỗ = \\^\\~{O}\n    \"\\u022E\": \"O\\u0307\", // Ȯ = \\.{O}\n    \"\\u0230\": \"O\\u0307\\u0304\", // Ȱ = \\.\\={O}\n    \"\\u0150\": \"O\\u030B\", // Ő = \\H{O}\n    \"\\u1E54\": \"P\\u0301\", // Ṕ = \\'{P}\n    \"\\u1E56\": \"P\\u0307\", // Ṗ = \\.{P}\n    \"\\u0154\": \"R\\u0301\", // Ŕ = \\'{R}\n    \"\\u0158\": \"R\\u030C\", // Ř = \\v{R}\n    \"\\u1E58\": \"R\\u0307\", // Ṙ = \\.{R}\n    \"\\u015A\": \"S\\u0301\", // Ś = \\'{S}\n    \"\\u1E64\": \"S\\u0301\\u0307\", // Ṥ = \\'\\.{S}\n    \"\\u0160\": \"S\\u030C\", // Š = \\v{S}\n    \"\\u1E66\": \"S\\u030C\\u0307\", // Ṧ = \\v\\.{S}\n    \"\\u015C\": \"S\\u0302\", // Ŝ = \\^{S}\n    \"\\u1E60\": \"S\\u0307\", // Ṡ = \\.{S}\n    \"\\u0164\": \"T\\u030C\", // Ť = \\v{T}\n    \"\\u1E6A\": \"T\\u0307\", // Ṫ = \\.{T}\n    \"\\xDA\": \"U\\u0301\", // Ú = \\'{U}\n    \"\\xD9\": \"U\\u0300\", // Ù = \\`{U}\n    \"\\xDC\": \"U\\u0308\", // Ü = \\\"{U}\n    \"\\u01D7\": \"U\\u0308\\u0301\", // Ǘ = \\\"\\'{U}\n    \"\\u01DB\": \"U\\u0308\\u0300\", // Ǜ = \\\"\\`{U}\n    \"\\u01D5\": \"U\\u0308\\u0304\", // Ǖ = \\\"\\={U}\n    \"\\u01D9\": \"U\\u0308\\u030C\", // Ǚ = \\\"\\v{U}\n    \"\\u0168\": \"U\\u0303\", // Ũ = \\~{U}\n    \"\\u1E78\": \"U\\u0303\\u0301\", // Ṹ = \\~\\'{U}\n    \"\\u016A\": \"U\\u0304\", // Ū = \\={U}\n    \"\\u1E7A\": \"U\\u0304\\u0308\", // Ṻ = \\=\\\"{U}\n    \"\\u016C\": \"U\\u0306\", // Ŭ = \\u{U}\n    \"\\u01D3\": \"U\\u030C\", // Ǔ = \\v{U}\n    \"\\xDB\": \"U\\u0302\", // Û = \\^{U}\n    \"\\u016E\": \"U\\u030A\", // Ů = \\r{U}\n    \"\\u0170\": \"U\\u030B\", // Ű = \\H{U}\n    \"\\u1E7C\": \"V\\u0303\", // Ṽ = \\~{V}\n    \"\\u1E82\": \"W\\u0301\", // Ẃ = \\'{W}\n    \"\\u1E80\": \"W\\u0300\", // Ẁ = \\`{W}\n    \"\\u1E84\": \"W\\u0308\", // Ẅ = \\\"{W}\n    \"\\u0174\": \"W\\u0302\", // Ŵ = \\^{W}\n    \"\\u1E86\": \"W\\u0307\", // Ẇ = \\.{W}\n    \"\\u1E8C\": \"X\\u0308\", // Ẍ = \\\"{X}\n    \"\\u1E8A\": \"X\\u0307\", // Ẋ = \\.{X}\n    \"\\xDD\": \"Y\\u0301\", // Ý = \\'{Y}\n    \"\\u1EF2\": \"Y\\u0300\", // Ỳ = \\`{Y}\n    \"\\u0178\": \"Y\\u0308\", // Ÿ = \\\"{Y}\n    \"\\u1EF8\": \"Y\\u0303\", // Ỹ = \\~{Y}\n    \"\\u0232\": \"Y\\u0304\", // Ȳ = \\={Y}\n    \"\\u0176\": \"Y\\u0302\", // Ŷ = \\^{Y}\n    \"\\u1E8E\": \"Y\\u0307\", // Ẏ = \\.{Y}\n    \"\\u0179\": \"Z\\u0301\", // Ź = \\'{Z}\n    \"\\u017D\": \"Z\\u030C\", // Ž = \\v{Z}\n    \"\\u1E90\": \"Z\\u0302\", // Ẑ = \\^{Z}\n    \"\\u017B\": \"Z\\u0307\", // Ż = \\.{Z}\n    \"\\u03AC\": \"\\u03B1\\u0301\", // ά = \\'{α}\n    \"\\u1F70\": \"\\u03B1\\u0300\", // ὰ = \\`{α}\n    \"\\u1FB1\": \"\\u03B1\\u0304\", // ᾱ = \\={α}\n    \"\\u1FB0\": \"\\u03B1\\u0306\", // ᾰ = \\u{α}\n    \"\\u03AD\": \"\\u03B5\\u0301\", // έ = \\'{ε}\n    \"\\u1F72\": \"\\u03B5\\u0300\", // ὲ = \\`{ε}\n    \"\\u03AE\": \"\\u03B7\\u0301\", // ή = \\'{η}\n    \"\\u1F74\": \"\\u03B7\\u0300\", // ὴ = \\`{η}\n    \"\\u03AF\": \"\\u03B9\\u0301\", // ί = \\'{ι}\n    \"\\u1F76\": \"\\u03B9\\u0300\", // ὶ = \\`{ι}\n    \"\\u03CA\": \"\\u03B9\\u0308\", // ϊ = \\\"{ι}\n    \"\\u0390\": \"\\u03B9\\u0308\\u0301\", // ΐ = \\\"\\'{ι}\n    \"\\u1FD2\": \"\\u03B9\\u0308\\u0300\", // ῒ = \\\"\\`{ι}\n    \"\\u1FD1\": \"\\u03B9\\u0304\", // ῑ = \\={ι}\n    \"\\u1FD0\": \"\\u03B9\\u0306\", // ῐ = \\u{ι}\n    \"\\u03CC\": \"\\u03BF\\u0301\", // ό = \\'{ο}\n    \"\\u1F78\": \"\\u03BF\\u0300\", // ὸ = \\`{ο}\n    \"\\u03CD\": \"\\u03C5\\u0301\", // ύ = \\'{υ}\n    \"\\u1F7A\": \"\\u03C5\\u0300\", // ὺ = \\`{υ}\n    \"\\u03CB\": \"\\u03C5\\u0308\", // ϋ = \\\"{υ}\n    \"\\u03B0\": \"\\u03C5\\u0308\\u0301\", // ΰ = \\\"\\'{υ}\n    \"\\u1FE2\": \"\\u03C5\\u0308\\u0300\", // ῢ = \\\"\\`{υ}\n    \"\\u1FE1\": \"\\u03C5\\u0304\", // ῡ = \\={υ}\n    \"\\u1FE0\": \"\\u03C5\\u0306\", // ῠ = \\u{υ}\n    \"\\u03CE\": \"\\u03C9\\u0301\", // ώ = \\'{ω}\n    \"\\u1F7C\": \"\\u03C9\\u0300\", // ὼ = \\`{ω}\n    \"\\u038E\": \"\\u03A5\\u0301\", // Ύ = \\'{Υ}\n    \"\\u1FEA\": \"\\u03A5\\u0300\", // Ὺ = \\`{Υ}\n    \"\\u03AB\": \"\\u03A5\\u0308\", // Ϋ = \\\"{Υ}\n    \"\\u1FE9\": \"\\u03A5\\u0304\", // Ῡ = \\={Υ}\n    \"\\u1FE8\": \"\\u03A5\\u0306\", // Ῠ = \\u{Υ}\n    \"\\u038F\": \"\\u03A9\\u0301\", // Ώ = \\'{Ω}\n    \"\\u1FFA\": \"\\u03A9\\u0300\" // Ὼ = \\`{Ω}\n});\n// CONCATENATED MODULE: ./src/Parser.js\n\n\n/* eslint no-constant-condition:0 */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * This file contains the parser used to parse out a TeX expression from the\n * input. Since TeX isn't context-free, standard parsers don't work particularly\n * well.\n *\n * The strategy of this parser is as such:\n *\n * The main functions (the `.parse...` ones) take a position in the current\n * parse string to parse tokens from. The lexer (found in Lexer.js, stored at\n * this.gullet.lexer) also supports pulling out tokens at arbitrary places. When\n * individual tokens are needed at a position, the lexer is called to pull out a\n * token, which is then used.\n *\n * The parser has a property called \"mode\" indicating the mode that\n * the parser is currently in. Currently it has to be one of \"math\" or\n * \"text\", which denotes whether the current environment is a math-y\n * one or a text-y one (e.g. inside \\text). Currently, this serves to\n * limit the functions which can be used in text mode.\n *\n * The main functions then return an object which contains the useful data that\n * was parsed at its given point, and a new position at the end of the parsed\n * data. The main functions can call each other and continue the parsing by\n * using the returned position as a new starting point.\n *\n * There are also extra `.handle...` functions, which pull out some reused\n * functionality into self-contained functions.\n *\n * The earlier functions return ParseNodes.\n * The later functions (which are called deeper in the parse) sometimes return\n * ParsedFuncOrArg, which contain a ParseNode as well as some data about\n * whether the parsed object is a function which is missing some arguments, or a\n * standalone object which can be used as an argument to another function.\n */\n\nfunction newArgument(result, token) {\n    return { type: \"arg\", result: result, token: token };\n}\n\nfunction newFunction(token) {\n    return { type: \"fn\", result: token.text, token: token };\n}\n\nvar Parser_Parser = function () {\n    function Parser(input, settings) {\n        classCallCheck_default()(this, Parser);\n\n        // Start in math mode\n        this.mode = \"math\";\n        // Create a new macro expander (gullet) and (indirectly via that) also a\n        // new lexer (mouth) for this parser (stomach, in the language of TeX)\n        this.gullet = new src_MacroExpander(input, settings, this.mode);\n        // Store the settings for use in parsing\n        this.settings = settings;\n        // Count leftright depth (for \\middle errors)\n        this.leftrightDepth = 0;\n    }\n\n    /**\n     * Checks a result to make sure it has the right type, and throws an\n     * appropriate error otherwise.\n     */\n\n\n    Parser.prototype.expect = function expect(text) {\n        var consume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n        if (this.nextToken.text !== text) {\n            throw new src_ParseError(\"Expected '\" + text + \"', got '\" + this.nextToken.text + \"'\", this.nextToken);\n        }\n        if (consume) {\n            this.consume();\n        }\n    };\n\n    /**\n     * Considers the current look ahead token as consumed,\n     * and fetches the one after that as the new look ahead.\n     */\n\n\n    Parser.prototype.consume = function consume() {\n        this.nextToken = this.gullet.expandNextToken();\n    };\n\n    /**\n     * Switches between \"text\" and \"math\" modes.\n     */\n\n\n    Parser.prototype.switchMode = function switchMode(newMode) {\n        this.mode = newMode;\n        this.gullet.switchMode(newMode);\n    };\n\n    /**\n     * Main parsing function, which parses an entire input.\n     */\n\n\n    Parser.prototype.parse = function parse() {\n        // Create a group namespace for the math expression.\n        // (LaTeX creates a new group for every $...$, $$...$$, \\[...\\].)\n        this.gullet.beginGroup();\n\n        // Use old \\color behavior (same as LaTeX's \\textcolor) if requested.\n        // We do this within the group for the math expression, so it doesn't\n        // pollute settings.macros.\n        if (this.settings.colorIsTextColor) {\n            this.gullet.macros.set(\"\\\\color\", \"\\\\textcolor\");\n        }\n\n        // Try to parse the input\n        this.consume();\n        var parse = this.parseExpression(false);\n\n        // If we succeeded, make sure there's an EOF at the end\n        this.expect(\"EOF\", false);\n\n        // End the group namespace for the expression\n        this.gullet.endGroup();\n        return parse;\n    };\n\n    /**\n     * Parses an \"expression\", which is a list of atoms.\n     *\n     * `breakOnInfix`: Should the parsing stop when we hit infix nodes? This\n     *                 happens when functions have higher precendence han infix\n     *                 nodes in implicit parses.\n     *\n     * `breakOnTokenText`: The text of the token that the expression should end\n     *                     with, or `null` if something else should end the\n     *                     expression.\n     */\n    Parser.prototype.parseExpression = function parseExpression(breakOnInfix, breakOnTokenText) {\n        var body = [];\n        // Keep adding atoms to the body until we can't parse any more atoms (either\n        // we reached the end, a }, or a \\right)\n        while (true) {\n            // Ignore spaces in math mode\n            if (this.mode === \"math\") {\n                this.consumeSpaces();\n            }\n            var lex = this.nextToken;\n            if (Parser.endOfExpression.indexOf(lex.text) !== -1) {\n                break;\n            }\n            if (breakOnTokenText && lex.text === breakOnTokenText) {\n                break;\n            }\n            if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) {\n                break;\n            }\n            var atom = this.parseAtom(breakOnTokenText);\n            if (!atom) {\n                if (!this.settings.throwOnError && lex.text[0] === \"\\\\\") {\n                    var errorNode = this.handleUnsupportedCmd();\n                    body.push(errorNode);\n                    continue;\n                }\n\n                break;\n            }\n            body.push(atom);\n        }\n        if (this.mode === \"text\") {\n            this.formLigatures(body);\n        }\n        return this.handleInfixNodes(body);\n    };\n\n    /**\n     * Rewrites infix operators such as \\over with corresponding commands such\n     * as \\frac.\n     *\n     * There can only be one infix operator per group.  If there's more than one\n     * then the expression is ambiguous.  This can be resolved by adding {}.\n     */\n\n\n    Parser.prototype.handleInfixNodes = function handleInfixNodes(body) {\n        var overIndex = -1;\n        var funcName = void 0;\n\n        for (var i = 0; i < body.length; i++) {\n            var node = checkNodeType(body[i], \"infix\");\n            if (node) {\n                if (overIndex !== -1) {\n                    throw new src_ParseError(\"only one infix operator per group\", node.token);\n                }\n                overIndex = i;\n                funcName = node.replaceWith;\n            }\n        }\n\n        if (overIndex !== -1 && funcName) {\n            var numerNode = void 0;\n            var denomNode = void 0;\n\n            var numerBody = body.slice(0, overIndex);\n            var denomBody = body.slice(overIndex + 1);\n\n            if (numerBody.length === 1 && numerBody[0].type === \"ordgroup\") {\n                numerNode = numerBody[0];\n            } else {\n                numerNode = { type: \"ordgroup\", mode: this.mode, body: numerBody };\n            }\n\n            if (denomBody.length === 1 && denomBody[0].type === \"ordgroup\") {\n                denomNode = denomBody[0];\n            } else {\n                denomNode = { type: \"ordgroup\", mode: this.mode, body: denomBody };\n            }\n\n            var _node = void 0;\n            if (funcName === \"\\\\\\\\abovefrac\") {\n                _node = this.callFunction(funcName, [numerNode, body[overIndex], denomNode], []);\n            } else {\n                _node = this.callFunction(funcName, [numerNode, denomNode], []);\n            }\n            return [_node];\n        } else {\n            return body;\n        }\n    };\n\n    // The greediness of a superscript or subscript\n\n\n    /**\n     * Handle a subscript or superscript with nice errors.\n     */\n    Parser.prototype.handleSupSubscript = function handleSupSubscript(name) {\n        var symbolToken = this.nextToken;\n        var symbol = symbolToken.text;\n        this.consume();\n        this.consumeSpaces(); // ignore spaces before sup/subscript argument\n        var group = this.parseGroup();\n\n        if (!group) {\n            if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                return this.handleUnsupportedCmd();\n            } else {\n                throw new src_ParseError(\"Expected group after '\" + symbol + \"'\", symbolToken);\n            }\n        }\n\n        if (group.type === \"fn\") {\n            // ^ and _ have a greediness, so handle interactions with functions'\n            // greediness\n            var funcGreediness = src_functions[group.result].greediness;\n            if (funcGreediness > Parser.SUPSUB_GREEDINESS) {\n                return this.parseGivenFunction(group);\n            } else {\n                throw new src_ParseError(\"Got function '\" + group.result + \"' with no arguments \" + \"as \" + name, symbolToken);\n            }\n        } else {\n            return group.result;\n        }\n    };\n\n    /**\n     * Converts the textual input of an unsupported command into a text node\n     * contained within a color node whose color is determined by errorColor\n     */\n\n\n    Parser.prototype.handleUnsupportedCmd = function handleUnsupportedCmd() {\n        var text = this.nextToken.text;\n        var textordArray = [];\n\n        for (var i = 0; i < text.length; i++) {\n            textordArray.push({ type: \"textord\", mode: \"text\", text: text[i] });\n        }\n\n        var textNode = {\n            type: \"text\",\n            mode: this.mode,\n            body: textordArray\n        };\n\n        var colorNode = {\n            type: \"color\",\n            mode: this.mode,\n            color: this.settings.errorColor,\n            body: [textNode]\n        };\n\n        this.consume();\n        return colorNode;\n    };\n\n    /**\n     * Parses a group with optional super/subscripts.\n     */\n\n\n    Parser.prototype.parseAtom = function parseAtom(breakOnTokenText) {\n        // The body of an atom is an implicit group, so that things like\n        // \\left(x\\right)^2 work correctly.\n        var base = this.parseImplicitGroup(breakOnTokenText);\n\n        // In text mode, we don't have superscripts or subscripts\n        if (this.mode === \"text\") {\n            return base;\n        }\n\n        // Note that base may be empty (i.e. null) at this point.\n\n        var superscript = void 0;\n        var subscript = void 0;\n        while (true) {\n            // Guaranteed in math mode, so eat any spaces first.\n            this.consumeSpaces();\n\n            // Lex the first token\n            var lex = this.nextToken;\n\n            if (lex.text === \"\\\\limits\" || lex.text === \"\\\\nolimits\") {\n                // We got a limit control\n                var opNode = checkNodeType(base, \"op\");\n                if (opNode) {\n                    var limits = lex.text === \"\\\\limits\";\n                    opNode.limits = limits;\n                    opNode.alwaysHandleSupSub = true;\n                } else {\n                    throw new src_ParseError(\"Limit controls must follow a math operator\", lex);\n                }\n                this.consume();\n            } else if (lex.text === \"^\") {\n                // We got a superscript start\n                if (superscript) {\n                    throw new src_ParseError(\"Double superscript\", lex);\n                }\n                superscript = this.handleSupSubscript(\"superscript\");\n            } else if (lex.text === \"_\") {\n                // We got a subscript start\n                if (subscript) {\n                    throw new src_ParseError(\"Double subscript\", lex);\n                }\n                subscript = this.handleSupSubscript(\"subscript\");\n            } else if (lex.text === \"'\") {\n                // We got a prime\n                if (superscript) {\n                    throw new src_ParseError(\"Double superscript\", lex);\n                }\n                var prime = { type: \"textord\", mode: this.mode, text: \"\\\\prime\" };\n\n                // Many primes can be grouped together, so we handle this here\n                var primes = [prime];\n                this.consume();\n                // Keep lexing tokens until we get something that's not a prime\n                while (this.nextToken.text === \"'\") {\n                    // For each one, add another prime to the list\n                    primes.push(prime);\n                    this.consume();\n                }\n                // If there's a superscript following the primes, combine that\n                // superscript in with the primes.\n                if (this.nextToken.text === \"^\") {\n                    primes.push(this.handleSupSubscript(\"superscript\"));\n                }\n                // Put everything into an ordgroup as the superscript\n                superscript = { type: \"ordgroup\", mode: this.mode, body: primes };\n            } else {\n                // If it wasn't ^, _, or ', stop parsing super/subscripts\n                break;\n            }\n        }\n\n        // Base must be set if superscript or subscript are set per logic above,\n        // but need to check here for type check to pass.\n        if (superscript || subscript) {\n            // If we got either a superscript or subscript, create a supsub\n            return {\n                type: \"supsub\",\n                mode: this.mode,\n                base: base,\n                sup: superscript,\n                sub: subscript\n            };\n        } else {\n            // Otherwise return the original body\n            return base;\n        }\n    };\n\n    /**\n     * Parses an implicit group, which is a group that starts at the end of a\n     * specified, and ends right before a higher explicit group ends, or at EOL. It\n     * is used for functions that appear to affect the current style, like \\Large or\n     * \\textrm, where instead of keeping a style we just pretend that there is an\n     * implicit grouping after it until the end of the group. E.g.\n     *   small text {\\Large large text} small text again\n     */\n\n\n    Parser.prototype.parseImplicitGroup = function parseImplicitGroup(breakOnTokenText) {\n        var start = this.parseSymbol();\n\n        if (start == null) {\n            // If we didn't get anything we handle, fall back to parseFunction\n            return this.parseFunction();\n        } else if (start.type === \"arg\") {\n            // Defer to parseGivenFunction if it's not a function we handle\n            return this.parseGivenFunction(start);\n        }\n\n        var func = start.result;\n\n        if (func === \"\\\\begin\") {\n            // begin...end is similar to left...right\n            var begin = assertNodeType(this.parseGivenFunction(start), \"environment\");\n\n            var envName = begin.name;\n            if (!src_environments.hasOwnProperty(envName)) {\n                throw new src_ParseError(\"No such environment: \" + envName, begin.nameGroup);\n            }\n            // Build the environment object. Arguments and other information will\n            // be made available to the begin and end methods using properties.\n            var env = src_environments[envName];\n\n            var _parseArguments = this.parseArguments(\"\\\\begin{\" + envName + \"}\", env),\n                args = _parseArguments.args,\n                optArgs = _parseArguments.optArgs;\n\n            var context = {\n                mode: this.mode,\n                envName: envName,\n                parser: this\n            };\n            var _result = env.handler(context, args, optArgs);\n            this.expect(\"\\\\end\", false);\n            var endNameToken = this.nextToken;\n            var end = this.parseFunction();\n            if (!end) {\n                throw new src_ParseError(\"failed to parse function after \\\\end\");\n            }\n            end = assertNodeType(end, \"environment\");\n            if (end.name !== envName) {\n                throw new src_ParseError(\"Mismatch: \\\\begin{\" + envName + \"} matched by \\\\end{\" + end.name + \"}\", endNameToken);\n            }\n            return _result;\n        } else {\n            // Defer to parseGivenFunction if it's not a function we handle\n            return this.parseGivenFunction(start, breakOnTokenText);\n        }\n    };\n\n    /**\n     * Parses an entire function, including its base and all of its arguments.\n     * It also handles the case where the parsed node is not a function.\n     */\n\n\n    Parser.prototype.parseFunction = function parseFunction() {\n        var baseGroup = this.parseGroup();\n        return baseGroup ? this.parseGivenFunction(baseGroup) : null;\n    };\n\n    /**\n     * Same as parseFunction(), except that the base is provided, guaranteeing a\n     * non-nullable result.\n     */\n\n\n    Parser.prototype.parseGivenFunction = function parseGivenFunction(baseGroup, breakOnTokenText) {\n        if (baseGroup.type === \"fn\") {\n            var func = baseGroup.result;\n            var funcData = src_functions[func];\n            if (this.mode === \"text\" && !funcData.allowedInText) {\n                throw new src_ParseError(\"Can't use function '\" + func + \"' in text mode\", baseGroup.token);\n            } else if (this.mode === \"math\" && funcData.allowedInMath === false) {\n                throw new src_ParseError(\"Can't use function '\" + func + \"' in math mode\", baseGroup.token);\n            }\n\n            // Consume the command token after possibly switching to the\n            // mode specified by the function (for instant mode switching),\n            // and then immediately switch back.\n            if (funcData.consumeMode) {\n                var oldMode = this.mode;\n                this.switchMode(funcData.consumeMode);\n                this.consume();\n                this.switchMode(oldMode);\n            } else {\n                this.consume();\n            }\n\n            var _parseArguments2 = this.parseArguments(func, funcData),\n                args = _parseArguments2.args,\n                optArgs = _parseArguments2.optArgs;\n\n            var _token = baseGroup.token;\n            return this.callFunction(func, args, optArgs, _token, breakOnTokenText);\n        } else {\n            return baseGroup.result;\n        }\n    };\n\n    /**\n     * Call a function handler with a suitable context and arguments.\n     */\n\n\n    Parser.prototype.callFunction = function callFunction(name, args, optArgs, token, breakOnTokenText) {\n        var context = {\n            funcName: name,\n            parser: this,\n            token: token,\n            breakOnTokenText: breakOnTokenText\n        };\n        var func = src_functions[name];\n        if (func && func.handler) {\n            return func.handler(context, args, optArgs);\n        } else {\n            throw new src_ParseError(\"No function handler for \" + name);\n        }\n    };\n\n    /**\n     * Parses the arguments of a function or environment\n     */\n\n\n    Parser.prototype.parseArguments = function parseArguments(func, // Should look like \"\\name\" or \"\\begin{name}\".\n    funcData) {\n        var totalArgs = funcData.numArgs + funcData.numOptionalArgs;\n        if (totalArgs === 0) {\n            return { args: [], optArgs: [] };\n        }\n\n        var baseGreediness = funcData.greediness;\n        var args = [];\n        var optArgs = [];\n\n        for (var i = 0; i < totalArgs; i++) {\n            var argType = funcData.argTypes && funcData.argTypes[i];\n            var isOptional = i < funcData.numOptionalArgs;\n            // Ignore spaces between arguments.  As the TeXbook says:\n            // \"After you have said ‘\\def\\row#1#2{...}’, you are allowed to\n            //  put spaces between the arguments (e.g., ‘\\row x n’), because\n            //  TeX doesn’t use single spaces as undelimited arguments.\"\n            if (i > 0 && !isOptional) {\n                this.consumeSpaces();\n            }\n            // Also consume leading spaces in math mode, as parseSymbol\n            // won't know what to do with them.  This can only happen with\n            // macros, e.g. \\frac\\foo\\foo where \\foo expands to a space symbol.\n            // In LaTeX, the \\foo's get treated as (blank) arguments).\n            // In KaTeX, for now, both spaces will get consumed.\n            // TODO(edemaine)\n            if (i === 0 && !isOptional && this.mode === \"math\") {\n                this.consumeSpaces();\n            }\n            var nextToken = this.nextToken;\n            var arg = argType ? this.parseGroupOfType(argType, isOptional) : this.parseGroup(isOptional);\n            if (!arg) {\n                if (isOptional) {\n                    optArgs.push(null);\n                    continue;\n                }\n                if (!this.settings.throwOnError && this.nextToken.text[0] === \"\\\\\") {\n                    arg = newArgument(this.handleUnsupportedCmd(), nextToken);\n                } else {\n                    throw new src_ParseError(\"Expected group after '\" + func + \"'\", nextToken);\n                }\n            }\n            var argNode = void 0;\n            if (arg.type === \"fn\") {\n                var argGreediness = src_functions[arg.result].greediness;\n                if (argGreediness > baseGreediness) {\n                    argNode = this.parseGivenFunction(arg);\n                } else {\n                    throw new src_ParseError(\"Got function '\" + arg.result + \"' as \" + \"argument to '\" + func + \"'\", nextToken);\n                }\n            } else {\n                argNode = arg.result;\n            }\n            (isOptional ? optArgs : args).push(argNode);\n        }\n\n        return { args: args, optArgs: optArgs };\n    };\n\n    /**\n     * Parses a group when the mode is changing.\n     */\n\n\n    Parser.prototype.parseGroupOfType = function parseGroupOfType(type, // Used to describe the mode in error messages.\n    optional) {\n        // Handle `original` argTypes\n        if (type === \"original\") {\n            type = this.mode;\n        }\n\n        if (type === \"color\") {\n            return this.parseColorGroup(optional);\n        }\n        if (type === \"size\") {\n            return this.parseSizeGroup(optional);\n        }\n        if (type === \"url\") {\n            throw new src_ParseError(\"Internal bug: 'url' arguments should be handled by Lexer\", this.nextToken);\n        }\n\n        // By the time we get here, type is one of \"text\" or \"math\".\n        // Specify this as mode to parseGroup.\n        return this.parseGroup(optional, type);\n    };\n\n    Parser.prototype.consumeSpaces = function consumeSpaces() {\n        while (this.nextToken.text === \" \") {\n            this.consume();\n        }\n    };\n\n    /**\n     * Parses a group, essentially returning the string formed by the\n     * brace-enclosed tokens plus some position information.\n     */\n\n\n    Parser.prototype.parseStringGroup = function parseStringGroup(modeName, // Used to describe the mode in error messages.\n    optional) {\n        if (optional && this.nextToken.text !== \"[\") {\n            return null;\n        }\n        var outerMode = this.mode;\n        this.mode = \"text\";\n        this.expect(optional ? \"[\" : \"{\");\n        var str = \"\";\n        var firstToken = this.nextToken;\n        var lastToken = firstToken;\n        while (this.nextToken.text !== (optional ? \"]\" : \"}\")) {\n            if (this.nextToken.text === \"EOF\") {\n                throw new src_ParseError(\"Unexpected end of input in \" + modeName, firstToken.range(this.nextToken, str));\n            }\n            lastToken = this.nextToken;\n            str += lastToken.text;\n            this.consume();\n        }\n        this.mode = outerMode;\n        this.expect(optional ? \"]\" : \"}\");\n        return firstToken.range(lastToken, str);\n    };\n\n    /**\n     * Parses a regex-delimited group: the largest sequence of tokens\n     * whose concatenated strings match `regex`. Returns the string\n     * formed by the tokens plus some position information.\n     */\n\n\n    Parser.prototype.parseRegexGroup = function parseRegexGroup(regex, modeName) {\n        var outerMode = this.mode;\n        this.mode = \"text\";\n        var firstToken = this.nextToken;\n        var lastToken = firstToken;\n        var str = \"\";\n        while (this.nextToken.text !== \"EOF\" && regex.test(str + this.nextToken.text)) {\n            lastToken = this.nextToken;\n            str += lastToken.text;\n            this.consume();\n        }\n        if (str === \"\") {\n            throw new src_ParseError(\"Invalid \" + modeName + \": '\" + firstToken.text + \"'\", firstToken);\n        }\n        this.mode = outerMode;\n        return firstToken.range(lastToken, str);\n    };\n\n    /**\n     * Parses a color description.\n     */\n\n\n    Parser.prototype.parseColorGroup = function parseColorGroup(optional) {\n        var res = this.parseStringGroup(\"color\", optional);\n        if (!res) {\n            return null;\n        }\n        var match = /^(#[a-f0-9]{3}|#[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);\n        if (!match) {\n            throw new src_ParseError(\"Invalid color: '\" + res.text + \"'\", res);\n        }\n        return newArgument({\n            type: \"color-token\",\n            mode: this.mode,\n            color: match[0]\n        }, res);\n    };\n\n    /**\n     * Parses a size specification, consisting of magnitude and unit.\n     */\n\n\n    Parser.prototype.parseSizeGroup = function parseSizeGroup(optional) {\n        var res = void 0;\n        var isBlank = false;\n        if (!optional && this.nextToken.text !== \"{\") {\n            res = this.parseRegexGroup(/^[-+]? *(?:$|\\d+|\\d+\\.\\d*|\\.\\d*) *[a-z]{0,2} *$/, \"size\");\n        } else {\n            res = this.parseStringGroup(\"size\", optional);\n        }\n        if (!res) {\n            return null;\n        }\n        if (!optional && res.text.length === 0) {\n            // Because we've tested for what is !optional, this block won't\n            // affect \\kern, \\hspace, etc. It will capture the mandatory arguments\n            // to \\genfrac and \\above.\n            res.text = \"0pt\"; // Enable \\above{}\n            isBlank = true; // This is here specifically for \\genfrac\n        }\n        var match = /([-+]?) *(\\d+(?:\\.\\d*)?|\\.\\d+) *([a-z]{2})/.exec(res.text);\n        if (!match) {\n            throw new src_ParseError(\"Invalid size: '\" + res.text + \"'\", res);\n        }\n        var data = {\n            number: +(match[1] + match[2]), // sign + magnitude, cast to number\n            unit: match[3]\n        };\n        if (!validUnit(data)) {\n            throw new src_ParseError(\"Invalid unit: '\" + data.unit + \"'\", res);\n        }\n        return newArgument({\n            type: \"size\",\n            mode: this.mode,\n            value: data,\n            isBlank: isBlank\n        }, res);\n    };\n\n    /**\n     * If `optional` is false or absent, this parses an ordinary group,\n     * which is either a single nucleus (like \"x\") or an expression\n     * in braces (like \"{x+y}\").\n     * If `optional` is true, it parses either a bracket-delimited expression\n     * (like \"[x+y]\") or returns null to indicate the absence of a\n     * bracket-enclosed group.\n     * If `mode` is present, switches to that mode while parsing the group,\n     * and switches back after.\n     */\n\n\n    Parser.prototype.parseGroup = function parseGroup(optional, mode) {\n        var outerMode = this.mode;\n        var firstToken = this.nextToken;\n        // Try to parse an open brace\n        if (this.nextToken.text === (optional ? \"[\" : \"{\")) {\n            // Switch to specified mode before we expand symbol after brace\n            if (mode) {\n                this.switchMode(mode);\n            }\n            // Start a new group namespace\n            this.gullet.beginGroup();\n            // If we get a brace, parse an expression\n            this.consume();\n            var expression = this.parseExpression(false, optional ? \"]\" : \"}\");\n            var lastToken = this.nextToken;\n            // Switch mode back before consuming symbol after close brace\n            if (mode) {\n                this.switchMode(outerMode);\n            }\n            // End group namespace before consuming symbol after close brace\n            this.gullet.endGroup();\n            // Make sure we get a close brace\n            this.expect(optional ? \"]\" : \"}\");\n            return newArgument({\n                type: \"ordgroup\",\n                mode: this.mode,\n                loc: src_SourceLocation.range(firstToken, lastToken),\n                body: expression\n            }, firstToken.range(lastToken, firstToken.text));\n        } else {\n            // Otherwise, just return a nucleus, or nothing for an optional group\n            if (mode) {\n                this.switchMode(mode);\n            }\n            var _result2 = optional ? null : this.parseSymbol();\n            if (mode) {\n                this.switchMode(outerMode);\n            }\n            return _result2;\n        }\n    };\n\n    /**\n     * Form ligature-like combinations of characters for text mode.\n     * This includes inputs like \"--\", \"---\", \"``\" and \"''\".\n     * The result will simply replace multiple textord nodes with a single\n     * character in each value by a single textord node having multiple\n     * characters in its value.  The representation is still ASCII source.\n     * The group will be modified in place.\n     */\n\n\n    Parser.prototype.formLigatures = function formLigatures(group) {\n        var n = group.length - 1;\n        for (var i = 0; i < n; ++i) {\n            var a = group[i];\n            // $FlowFixMe: Not every node type has a `text` property.\n            var v = a.text;\n            if (v === \"-\" && group[i + 1].text === \"-\") {\n                if (i + 1 < n && group[i + 2].text === \"-\") {\n                    group.splice(i, 3, {\n                        type: \"textord\",\n                        mode: \"text\",\n                        loc: src_SourceLocation.range(a, group[i + 2]),\n                        text: \"---\"\n                    });\n                    n -= 2;\n                } else {\n                    group.splice(i, 2, {\n                        type: \"textord\",\n                        mode: \"text\",\n                        loc: src_SourceLocation.range(a, group[i + 1]),\n                        text: \"--\"\n                    });\n                    n -= 1;\n                }\n            }\n            if ((v === \"'\" || v === \"`\") && group[i + 1].text === v) {\n                group.splice(i, 2, {\n                    type: \"textord\",\n                    mode: \"text\",\n                    loc: src_SourceLocation.range(a, group[i + 1]),\n                    text: v + v\n                });\n                n -= 1;\n            }\n        }\n    };\n\n    /**\n     * Parse a single symbol out of the string. Here, we handle both the functions\n     * we have defined, as well as the single character symbols\n     */\n\n\n    Parser.prototype.parseSymbol = function parseSymbol() {\n        var nucleus = this.nextToken;\n        var text = nucleus.text;\n\n        if (src_functions[text]) {\n            // If there exists a function with this name, we return the\n            // function and say that it is a function.\n            // The token will be consumed later in parseGivenFunction\n            // (after possibly switching modes).\n            return newFunction(nucleus);\n        } else if (/^\\\\(href|url)[^a-zA-Z]/.test(text)) {\n            var _match = text.match(urlFunctionRegex);\n            if (!_match) {\n                throw new src_ParseError(\"Internal error: invalid URL token '\" + text + \"'\", nucleus);\n            }\n            var funcName = _match[1];\n            // match[2] is the only one that can be an empty string,\n            // so it must be at the end of the following or chain:\n            var rawUrl = _match[4] || _match[3] || _match[2];\n            // hyperref package allows backslashes alone in href, but doesn't\n            // generate valid links in such cases; we interpret this as\n            // \"undefined\" behaviour, and keep them as-is. Some browser will\n            // replace backslashes with forward slashes.\n            var url = rawUrl.replace(/\\\\([#$%&~_^{}])/g, '$1');\n            var protocol = /^\\s*([^\\\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);\n            protocol = protocol != null ? protocol[1] : \"_relative\";\n            var allowed = this.settings.allowedProtocols;\n            if (!utils.contains(allowed, \"*\") && !utils.contains(allowed, protocol)) {\n                throw new src_ParseError(\"Forbidden protocol '\" + protocol + \"' in \" + funcName, nucleus);\n            }\n            var urlArg = {\n                type: \"url\",\n                mode: this.mode,\n                url: url\n            };\n            this.consume();\n            if (funcName === \"\\\\href\") {\n                // two arguments\n                this.consumeSpaces(); // ignore spaces between arguments\n                var description = this.parseGroupOfType(\"original\", false);\n                if (description == null) {\n                    throw new src_ParseError(funcName + \" missing second argument\", nucleus);\n                }\n                if (description.type === \"fn\") {\n                    description = this.parseGivenFunction(description);\n                } else {\n                    // arg.type === \"arg\"\n                    description = description.result;\n                }\n                return newArgument(this.callFunction(funcName, [urlArg, description], []), nucleus);\n            } else {\n                // one argument (\\url)\n                return newArgument(this.callFunction(funcName, [urlArg], []), nucleus);\n            }\n        } else if (/^\\\\verb[^a-zA-Z]/.test(text)) {\n            this.consume();\n            var arg = text.slice(5);\n            var star = arg.charAt(0) === \"*\";\n            if (star) {\n                arg = arg.slice(1);\n            }\n            // Lexer's tokenRegex is constructed to always have matching\n            // first/last characters.\n            if (arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) {\n                throw new src_ParseError(\"\\\\verb assertion failed --\\n                    please report what input caused this bug\");\n            }\n            arg = arg.slice(1, -1); // remove first and last char\n            return newArgument({\n                type: \"verb\",\n                mode: \"text\",\n                body: arg,\n                star: star\n            }, nucleus);\n        }\n        // At this point, we should have a symbol, possibly with accents.\n        // First expand any accented base symbol according to unicodeSymbols.\n        if (unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]]) {\n            // This behavior is not strict (XeTeX-compatible) in math mode.\n            if (this.settings.strict && this.mode === \"math\") {\n                this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Accented Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n            }\n            text = unicodeSymbols[text[0]] + text.substr(1);\n        }\n        // Strip off any combining characters\n        var match = combiningDiacriticalMarksEndRegex.exec(text);\n        if (match) {\n            text = text.substring(0, match.index);\n            if (text === 'i') {\n                text = \"\\u0131\"; // dotless i, in math and text mode\n            } else if (text === 'j') {\n                text = \"\\u0237\"; // dotless j, in math and text mode\n            }\n        }\n        // Recognize base symbol\n        var symbol = void 0;\n        if (src_symbols[this.mode][text]) {\n            if (this.settings.strict && this.mode === 'math' && extraLatin.indexOf(text) >= 0) {\n                this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Latin-1/Unicode text character \\\"\" + text[0] + \"\\\" used in \" + \"math mode\", nucleus);\n            }\n            var group = src_symbols[this.mode][text].group;\n            var loc = src_SourceLocation.range(nucleus);\n            var s = void 0;\n            if (ATOMS.hasOwnProperty(group)) {\n                // $FlowFixMe\n                var family = group;\n                s = {\n                    type: \"atom\",\n                    mode: this.mode,\n                    family: family,\n                    loc: loc,\n                    text: text\n                };\n            } else {\n                // $FlowFixMe\n                s = {\n                    type: group,\n                    mode: this.mode,\n                    loc: loc,\n                    text: text\n                };\n            }\n            symbol = s;\n        } else if (text.charCodeAt(0) >= 0x80) {\n            // no symbol for e.g. ^\n            if (this.settings.strict) {\n                if (!supportedCodepoint(text.charCodeAt(0))) {\n                    this.settings.reportNonstrict(\"unknownSymbol\", \"Unrecognized Unicode character \\\"\" + text[0] + \"\\\"\" + (\" (\" + text.charCodeAt(0) + \")\"), nucleus);\n                } else if (this.mode === \"math\") {\n                    this.settings.reportNonstrict(\"unicodeTextInMathMode\", \"Unicode text character \\\"\" + text[0] + \"\\\" used in math mode\", nucleus);\n                }\n            }\n            symbol = {\n                type: \"textord\",\n                mode: this.mode,\n                loc: src_SourceLocation.range(nucleus),\n                text: text\n            };\n        } else {\n            return null; // EOF, ^, _, {, }, etc.\n        }\n        this.consume();\n        // Transform combining characters into accents\n        if (match) {\n            for (var i = 0; i < match[0].length; i++) {\n                var accent = match[0][i];\n                if (!unicodeAccents[accent]) {\n                    throw new src_ParseError(\"Unknown accent ' \" + accent + \"'\", nucleus);\n                }\n                var command = unicodeAccents[accent][this.mode];\n                if (!command) {\n                    throw new src_ParseError(\"Accent \" + accent + \" unsupported in \" + this.mode + \" mode\", nucleus);\n                }\n                symbol = {\n                    type: \"accent\",\n                    mode: this.mode,\n                    loc: src_SourceLocation.range(nucleus),\n                    label: command,\n                    isStretchy: false,\n                    isShifty: true,\n                    base: symbol\n                };\n            }\n        }\n        return newArgument(symbol, nucleus);\n    };\n\n    return Parser;\n}();\n\nParser_Parser.endOfExpression = [\"}\", \"\\\\end\", \"\\\\right\", \"&\"];\nParser_Parser.SUPSUB_GREEDINESS = 1;\n/* harmony default export */ var src_Parser = (Parser_Parser);\n// CONCATENATED MODULE: ./src/parseTree.js\n\n/**\n * Provides a single function for parsing an expression using a Parser\n * TODO(emily): Remove this\n */\n\n\n\n\n/**\n * Parses an expression using a Parser, then returns the parsed result.\n */\nvar parseTree_parseTree = function parseTree(toParse, settings) {\n    if (!(typeof toParse === 'string' || toParse instanceof String)) {\n        throw new TypeError('KaTeX can only parse string typed expression');\n    }\n    var parser = new src_Parser(toParse, settings);\n    // Blank out any \\df@tag to avoid spurious \"Duplicate \\tag\" errors\n    delete parser.gullet.macros.current[\"\\\\df@tag\"];\n    var tree = parser.parse();\n\n    // If the input used \\tag, it will set the \\df@tag macro to the tag.\n    // In this case, we separately parse the tag and wrap the tree.\n    if (parser.gullet.macros.get(\"\\\\df@tag\")) {\n        if (!settings.displayMode) {\n            throw new src_ParseError(\"\\\\tag works only in display equations\");\n        }\n        parser.gullet.feed(\"\\\\df@tag\");\n        tree = [{\n            type: \"tag\",\n            mode: \"text\",\n            body: tree,\n            tag: parser.parse()\n        }];\n    }\n\n    return tree;\n};\n\n/* harmony default export */ var src_parseTree = (parseTree_parseTree);\n// CONCATENATED MODULE: ./katex.js\n\n/* eslint no-console:0 */\n/**\n * This is the main entry point for KaTeX. Here, we expose functions for\n * rendering expressions either to DOM nodes or to markup strings.\n *\n * We also expose the ParseError class to check if errors thrown from KaTeX are\n * errors in the expression, or errors in javascript handling.\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Parse and build an expression, and place that expression in the DOM node\n * given.\n */\nvar katex_render = function render(expression, baseNode, options) {\n    baseNode.textContent = \"\";\n    var node = katex_renderToDomTree(expression, options).toNode();\n    baseNode.appendChild(node);\n};\n\n// KaTeX's styles don't work properly in quirks mode. Print out an error, and\n// disable rendering.\nif (typeof document !== \"undefined\") {\n    if (document.compatMode !== \"CSS1Compat\") {\n        typeof console !== \"undefined\" && console.warn(\"Warning: KaTeX doesn't work in quirks mode. Make sure your \" + \"website has a suitable doctype.\");\n\n        katex_render = function render() {\n            throw new src_ParseError(\"KaTeX doesn't work in quirks mode.\");\n        };\n    }\n}\n\n/**\n * Parse and build an expression, and return the markup for that.\n */\nvar renderToString = function renderToString(expression, options) {\n    var markup = katex_renderToDomTree(expression, options).toMarkup();\n    return markup;\n};\n\n/**\n * Parse an expression and return the parse tree.\n */\nvar katex_generateParseTree = function generateParseTree(expression, options) {\n    var settings = new src_Settings(options);\n    return src_parseTree(expression, settings);\n};\n\n/**\n * If the given error is a KaTeX ParseError and options.throwOnError is false,\n * renders the invalid LaTeX as a span with hover title giving the KaTeX\n * error message.  Otherwise, simply throws the error.\n */\nvar katex_renderError = function renderError(error, expression, options) {\n    if (options.throwOnError || !(error instanceof src_ParseError)) {\n        throw error;\n    }\n    var node = buildCommon.makeSpan([\"katex-error\"], [new domTree_SymbolNode(expression)]);\n    node.setAttribute(\"title\", error.toString());\n    node.setAttribute(\"style\", \"color:\" + options.errorColor);\n    return node;\n};\n\n/**\n * Generates and returns the katex build tree. This is used for advanced\n * use cases (like rendering to custom output).\n */\nvar katex_renderToDomTree = function renderToDomTree(expression, options) {\n    var settings = new src_Settings(options);\n    try {\n        var tree = src_parseTree(expression, settings);\n        return buildTree_buildTree(tree, expression, settings);\n    } catch (error) {\n        return katex_renderError(error, expression, settings);\n    }\n};\n\n/**\n * Generates and returns the katex build tree, with just HTML (no MathML).\n * This is used for advanced use cases (like rendering to custom output).\n */\nvar katex_renderToHTMLTree = function renderToHTMLTree(expression, options) {\n    var settings = new src_Settings(options);\n    try {\n        var tree = src_parseTree(expression, settings);\n        return buildTree_buildHTMLTree(tree, expression, settings);\n    } catch (error) {\n        return katex_renderError(error, expression, settings);\n    }\n};\n\n/* harmony default export */ var katex_0 = ({\n    /**\n     * Current KaTeX version\n     */\n    version: \"0.10.0-rc.1\",\n    /**\n     * Renders the given LaTeX into an HTML+MathML combination, and adds\n     * it as a child to the specified DOM node.\n     */\n    render: katex_render,\n    /**\n     * Renders the given LaTeX into an HTML+MathML combination string,\n     * for sending to the client.\n     */\n    renderToString: renderToString,\n    /**\n     * KaTeX error, usually during parsing.\n     */\n    ParseError: src_ParseError,\n    /**\n     * Parses the given LaTeX into KaTeX's internal parse tree structure,\n     * without rendering to HTML or MathML.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __parse: katex_generateParseTree,\n    /**\n     * Renders the given LaTeX into an HTML+MathML internal DOM tree\n     * representation, without flattening that representation to a string.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __renderToDomTree: katex_renderToDomTree,\n    /**\n     * Renders the given LaTeX into an HTML internal DOM tree representation,\n     * without MathML and without flattening that representation to a string.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __renderToHTMLTree: katex_renderToHTMLTree,\n    /**\n     * extends internal font metrics object with a new object\n     * each key in the new object represents a font name\n    */\n    __setFontMetrics: setFontMetrics,\n    /**\n     * adds a new symbol to builtin symbols table\n     */\n    __defineSymbol: defineSymbol,\n    /**\n     * adds a new macro to builtin macro list\n     */\n    __defineMacro: defineMacro,\n    /**\n     * Expose the dom tree node types, which can be useful for type checking nodes.\n     *\n     * NOTE: This method is not currently recommended for public use.\n     * The internal tree representation is unstable and is very likely\n     * to change. Use at your own risk.\n     */\n    __domTree: {\n        Span: domTree_Span,\n        Anchor: domTree_Anchor,\n        SymbolNode: domTree_SymbolNode,\n        SvgNode: domTree_SvgNode,\n        PathNode: domTree_PathNode,\n        LineNode: domTree_LineNode\n    }\n});\n// CONCATENATED MODULE: ./katex.webpack.js\n/**\n * This is the webpack entry point for KaTeX. As flow[1] and jest[2] doesn't support\n * CSS modules natively, a separate entry point is used and it is not flowtyped.\n *\n * [1] https://gist.github.com/lambdahands/d19e0da96285b749f0ef\n * [2] https://facebook.github.io/jest/docs/en/webpack.html\n */\n\n\n\n/* harmony default export */ var katex_webpack = __webpack_exports__[\"default\"] = (katex_0);\n\n/***/ })\n/******/ ])[\"default\"];\n});","import katex from 'katex';\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n  var tex = document.getElementsByClassName(\"tex\");\r\n  Array.prototype.forEach.call(tex, function(el) {\r\n    katex.render(el.getAttribute(\"data-expr\"), el, {\r\n      displayMode: true\r\n    });\r\n  });\r\n});"],"sourceRoot":""}